{
  "version": 3,
  "sources": ["../node_modules/fp-ts/lib/function.js", "../node_modules/fp-ts/lib/Apply.js", "../node_modules/fp-ts/lib/Chain.js", "../node_modules/fp-ts/lib/internal.js", "../node_modules/fp-ts/lib/FromEither.js", "../node_modules/fp-ts/lib/Functor.js", "../node_modules/fp-ts/lib/Eq.js", "../node_modules/fp-ts/lib/Ord.js", "../node_modules/fp-ts/lib/Magma.js", "../node_modules/fp-ts/lib/Semigroup.js", "../node_modules/fp-ts/lib/ReadonlyNonEmptyArray.js", "../node_modules/fp-ts/lib/NonEmptyArray.js", "../node_modules/fp-ts/lib/number.js", "../node_modules/fp-ts/lib/Separated.js", "../node_modules/fp-ts/lib/Witherable.js", "../node_modules/fp-ts/lib/Zero.js", "../node_modules/fp-ts/lib/ReadonlyArray.js", "../node_modules/fp-ts/lib/Array.js", "../node_modules/fp-ts/lib/Applicative.js", "../node_modules/fp-ts/lib/Predicate.js", "../node_modules/fp-ts/lib/Option.js", "../src/script/layout.ts", "../src/script/dom.ts", "../src/script/animation.ts", "../src/script/video.ts", "../src/script/scene.ts", "../src/script/sceneInfo.ts", "../src/script/scroll.ts", "../src/index.ts"],
  "sourcesContent": ["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEndomorphismMonoid = exports.not = exports.SK = exports.hole = exports.pipe = exports.untupled = exports.tupled = exports.absurd = exports.decrement = exports.increment = exports.tuple = exports.flow = exports.flip = exports.constVoid = exports.constUndefined = exports.constNull = exports.constFalse = exports.constTrue = exports.constant = exports.unsafeCoerce = exports.identity = exports.apply = exports.getRing = exports.getSemiring = exports.getMonoid = exports.getSemigroup = exports.getBooleanAlgebra = void 0;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getBooleanAlgebra = function (B) { return function () { return ({\n    meet: function (x, y) { return function (a) { return B.meet(x(a), y(a)); }; },\n    join: function (x, y) { return function (a) { return B.join(x(a), y(a)); }; },\n    zero: function () { return B.zero; },\n    one: function () { return B.one; },\n    implies: function (x, y) { return function (a) { return B.implies(x(a), y(a)); }; },\n    not: function (x) { return function (a) { return B.not(x(a)); }; }\n}); }; };\nexports.getBooleanAlgebra = getBooleanAlgebra;\n/**\n * Unary functions form a semigroup as long as you can provide a semigroup for the codomain.\n *\n * @example\n * import { Predicate, getSemigroup } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const S1 = getSemigroup(B.SemigroupAll)<number>()\n *\n * assert.deepStrictEqual(S1.concat(f, g)(1), true)\n * assert.deepStrictEqual(S1.concat(f, g)(3), false)\n *\n * const S2 = getSemigroup(B.SemigroupAny)<number>()\n *\n * assert.deepStrictEqual(S2.concat(f, g)(1), true)\n * assert.deepStrictEqual(S2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nvar getSemigroup = function (S) { return function () { return ({\n    concat: function (f, g) { return function (a) { return S.concat(f(a), g(a)); }; }\n}); }; };\nexports.getSemigroup = getSemigroup;\n/**\n * Unary functions form a monoid as long as you can provide a monoid for the codomain.\n *\n * @example\n * import { Predicate } from 'fp-ts/Predicate'\n * import { getMonoid } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const M1 = getMonoid(B.MonoidAll)<number>()\n *\n * assert.deepStrictEqual(M1.concat(f, g)(1), true)\n * assert.deepStrictEqual(M1.concat(f, g)(3), false)\n *\n * const M2 = getMonoid(B.MonoidAny)<number>()\n *\n * assert.deepStrictEqual(M2.concat(f, g)(1), true)\n * assert.deepStrictEqual(M2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nvar getMonoid = function (M) {\n    var getSemigroupM = exports.getSemigroup(M);\n    return function () { return ({\n        concat: getSemigroupM().concat,\n        empty: function () { return M.empty; }\n    }); };\n};\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getSemiring = function (S) { return ({\n    add: function (f, g) { return function (x) { return S.add(f(x), g(x)); }; },\n    zero: function () { return S.zero; },\n    mul: function (f, g) { return function (x) { return S.mul(f(x), g(x)); }; },\n    one: function () { return S.one; }\n}); };\nexports.getSemiring = getSemiring;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getRing = function (R) {\n    var S = exports.getSemiring(R);\n    return {\n        add: S.add,\n        mul: S.mul,\n        one: S.one,\n        zero: S.zero,\n        sub: function (f, g) { return function (x) { return R.sub(f(x), g(x)); }; }\n    };\n};\nexports.getRing = getRing;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nvar apply = function (a) { return function (f) { return f(a); }; };\nexports.apply = apply;\n/**\n * @since 2.0.0\n */\nfunction identity(a) {\n    return a;\n}\nexports.identity = identity;\n/**\n * @since 2.0.0\n */\nexports.unsafeCoerce = identity;\n/**\n * @since 2.0.0\n */\nfunction constant(a) {\n    return function () { return a; };\n}\nexports.constant = constant;\n/**\n * A thunk that returns always `true`.\n *\n * @since 2.0.0\n */\nexports.constTrue = \n/*#__PURE__*/\nconstant(true);\n/**\n * A thunk that returns always `false`.\n *\n * @since 2.0.0\n */\nexports.constFalse = \n/*#__PURE__*/\nconstant(false);\n/**\n * A thunk that returns always `null`.\n *\n * @since 2.0.0\n */\nexports.constNull = \n/*#__PURE__*/\nconstant(null);\n/**\n * A thunk that returns always `undefined`.\n *\n * @since 2.0.0\n */\nexports.constUndefined = \n/*#__PURE__*/\nconstant(undefined);\n/**\n * A thunk that returns always `void`.\n *\n * @since 2.0.0\n */\nexports.constVoid = exports.constUndefined;\n/**\n * Flips the order of the arguments of a function of two arguments.\n *\n * @since 2.0.0\n */\nfunction flip(f) {\n    return function (b, a) { return f(a, b); };\n}\nexports.flip = flip;\nfunction flow(ab, bc, cd, de, ef, fg, gh, hi, ij) {\n    switch (arguments.length) {\n        case 1:\n            return ab;\n        case 2:\n            return function () {\n                return bc(ab.apply(this, arguments));\n            };\n        case 3:\n            return function () {\n                return cd(bc(ab.apply(this, arguments)));\n            };\n        case 4:\n            return function () {\n                return de(cd(bc(ab.apply(this, arguments))));\n            };\n        case 5:\n            return function () {\n                return ef(de(cd(bc(ab.apply(this, arguments)))));\n            };\n        case 6:\n            return function () {\n                return fg(ef(de(cd(bc(ab.apply(this, arguments))))));\n            };\n        case 7:\n            return function () {\n                return gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))));\n            };\n        case 8:\n            return function () {\n                return hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments))))))));\n            };\n        case 9:\n            return function () {\n                return ij(hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))))));\n            };\n    }\n    return;\n}\nexports.flow = flow;\n/**\n * @since 2.0.0\n */\nfunction tuple() {\n    var t = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        t[_i] = arguments[_i];\n    }\n    return t;\n}\nexports.tuple = tuple;\n/**\n * @since 2.0.0\n */\nfunction increment(n) {\n    return n + 1;\n}\nexports.increment = increment;\n/**\n * @since 2.0.0\n */\nfunction decrement(n) {\n    return n - 1;\n}\nexports.decrement = decrement;\n/**\n * @since 2.0.0\n */\nfunction absurd(_) {\n    throw new Error('Called `absurd` function which should be uncallable');\n}\nexports.absurd = absurd;\n/**\n * Creates a tupled version of this function: instead of `n` arguments, it accepts a single tuple argument.\n *\n * @example\n * import { tupled } from 'fp-ts/function'\n *\n * const add = tupled((x: number, y: number): number => x + y)\n *\n * assert.strictEqual(add([1, 2]), 3)\n *\n * @since 2.4.0\n */\nfunction tupled(f) {\n    return function (a) { return f.apply(void 0, a); };\n}\nexports.tupled = tupled;\n/**\n * Inverse function of `tupled`\n *\n * @since 2.4.0\n */\nfunction untupled(f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return f(a);\n    };\n}\nexports.untupled = untupled;\nfunction pipe(a, ab, bc, cd, de, ef, fg, gh, hi) {\n    switch (arguments.length) {\n        case 1:\n            return a;\n        case 2:\n            return ab(a);\n        case 3:\n            return bc(ab(a));\n        case 4:\n            return cd(bc(ab(a)));\n        case 5:\n            return de(cd(bc(ab(a))));\n        case 6:\n            return ef(de(cd(bc(ab(a)))));\n        case 7:\n            return fg(ef(de(cd(bc(ab(a))))));\n        case 8:\n            return gh(fg(ef(de(cd(bc(ab(a)))))));\n        case 9:\n            return hi(gh(fg(ef(de(cd(bc(ab(a))))))));\n        default:\n            var ret = arguments[0];\n            for (var i = 1; i < arguments.length; i++) {\n                ret = arguments[i](ret);\n            }\n            return ret;\n    }\n}\nexports.pipe = pipe;\n/**\n * Type hole simulation\n *\n * @since 2.7.0\n */\nexports.hole = absurd;\n/**\n * @since 2.11.0\n */\nvar SK = function (_, b) { return b; };\nexports.SK = SK;\n/**\n * Use `Predicate` module instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nfunction not(predicate) {\n    return function (a) { return !predicate(a); };\n}\nexports.not = not;\n/**\n * Use `Endomorphism` module instead.\n *\n * @category instances\n * @since 2.10.0\n * @deprecated\n */\nvar getEndomorphismMonoid = function () { return ({\n    concat: function (first, second) { return flow(first, second); },\n    empty: identity\n}); };\nexports.getEndomorphismMonoid = getEndomorphismMonoid;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sequenceS = exports.sequenceT = exports.getApplySemigroup = exports.apS = exports.apSecond = exports.apFirst = exports.ap = void 0;\nvar function_1 = require(\"./function\");\nfunction ap(F, G) {\n    return function (fa) { return function (fab) {\n        return F.ap(F.map(fab, function (gab) { return function (ga) { return G.ap(gab, ga); }; }), fa);\n    }; };\n}\nexports.ap = ap;\nfunction apFirst(A) {\n    return function (second) { return function (first) {\n        return A.ap(A.map(first, function (a) { return function () { return a; }; }), second);\n    }; };\n}\nexports.apFirst = apFirst;\nfunction apSecond(A) {\n    return function (second) { return function (first) {\n        return A.ap(A.map(first, function () { return function (b) { return b; }; }), second);\n    }; };\n}\nexports.apSecond = apSecond;\nfunction apS(F) {\n    return function (name, fb) { return function (fa) {\n        return F.ap(F.map(fa, function (a) { return function (b) {\n            var _a;\n            return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n        }; }), fb);\n    }; };\n}\nexports.apS = apS;\nfunction getApplySemigroup(F) {\n    return function (S) { return ({\n        concat: function (first, second) {\n            return F.ap(F.map(first, function (x) { return function (y) { return S.concat(x, y); }; }), second);\n        }\n    }); };\n}\nexports.getApplySemigroup = getApplySemigroup;\nfunction curried(f, n, acc) {\n    return function (x) {\n        var combined = Array(acc.length + 1);\n        for (var i = 0; i < acc.length; i++) {\n            combined[i] = acc[i];\n        }\n        combined[acc.length] = x;\n        return n === 0 ? f.apply(null, combined) : curried(f, n - 1, combined);\n    };\n}\nvar tupleConstructors = {\n    1: function (a) { return [a]; },\n    2: function (a) { return function (b) { return [a, b]; }; },\n    3: function (a) { return function (b) { return function (c) { return [a, b, c]; }; }; },\n    4: function (a) { return function (b) { return function (c) { return function (d) { return [a, b, c, d]; }; }; }; },\n    5: function (a) { return function (b) { return function (c) { return function (d) { return function (e) { return [a, b, c, d, e]; }; }; }; }; }\n};\nfunction getTupleConstructor(len) {\n    if (!tupleConstructors.hasOwnProperty(len)) {\n        tupleConstructors[len] = curried(function_1.tuple, len - 1, []);\n    }\n    return tupleConstructors[len];\n}\nfunction sequenceT(F) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var len = args.length;\n        var f = getTupleConstructor(len);\n        var fas = F.map(args[0], f);\n        for (var i = 1; i < len; i++) {\n            fas = F.ap(fas, args[i]);\n        }\n        return fas;\n    };\n}\nexports.sequenceT = sequenceT;\nfunction getRecordConstructor(keys) {\n    var len = keys.length;\n    switch (len) {\n        case 1:\n            return function (a) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a);\n            };\n        case 2:\n            return function (a) { return function (b) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a);\n            }; };\n        case 3:\n            return function (a) { return function (b) { return function (c) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a[keys[2]] = c, _a);\n            }; }; };\n        case 4:\n            return function (a) { return function (b) { return function (c) { return function (d) {\n                var _a;\n                return (_a = {},\n                    _a[keys[0]] = a,\n                    _a[keys[1]] = b,\n                    _a[keys[2]] = c,\n                    _a[keys[3]] = d,\n                    _a);\n            }; }; }; };\n        case 5:\n            return function (a) { return function (b) { return function (c) { return function (d) { return function (e) {\n                var _a;\n                return (_a = {},\n                    _a[keys[0]] = a,\n                    _a[keys[1]] = b,\n                    _a[keys[2]] = c,\n                    _a[keys[3]] = d,\n                    _a[keys[4]] = e,\n                    _a);\n            }; }; }; }; };\n        default:\n            return curried(function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var r = {};\n                for (var i = 0; i < len; i++) {\n                    r[keys[i]] = args[i];\n                }\n                return r;\n            }, len - 1, []);\n    }\n}\nfunction sequenceS(F) {\n    return function (r) {\n        var keys = Object.keys(r);\n        var len = keys.length;\n        var f = getRecordConstructor(keys);\n        var fr = F.map(r[keys[0]], f);\n        for (var i = 1; i < len; i++) {\n            fr = F.ap(fr, r[keys[i]]);\n        }\n        return fr;\n    };\n}\nexports.sequenceS = sequenceS;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bind = exports.chainFirst = void 0;\nfunction chainFirst(M) {\n    return function (f) { return function (first) { return M.chain(first, function (a) { return M.map(f(a), function () { return a; }); }); }; };\n}\nexports.chainFirst = chainFirst;\nfunction bind(M) {\n    return function (name, f) { return function (ma) { return M.chain(ma, function (a) { return M.map(f(a), function (b) {\n        var _a;\n        return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n    }); }); }; };\n}\nexports.bind = bind;\n", "\"use strict\";\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromReadonlyNonEmptyArray = exports.has = exports.emptyRecord = exports.emptyReadonlyArray = exports.tail = exports.head = exports.isNonEmpty = exports.singleton = exports.right = exports.left = exports.isRight = exports.isLeft = exports.some = exports.none = exports.isSome = exports.isNone = void 0;\n// -------------------------------------------------------------------------------------\n// Option\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar isNone = function (fa) { return fa._tag === 'None'; };\nexports.isNone = isNone;\n/** @internal */\nvar isSome = function (fa) { return fa._tag === 'Some'; };\nexports.isSome = isSome;\n/** @internal */\nexports.none = { _tag: 'None' };\n/** @internal */\nvar some = function (a) { return ({ _tag: 'Some', value: a }); };\nexports.some = some;\n// -------------------------------------------------------------------------------------\n// Either\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar isLeft = function (ma) { return ma._tag === 'Left'; };\nexports.isLeft = isLeft;\n/** @internal */\nvar isRight = function (ma) { return ma._tag === 'Right'; };\nexports.isRight = isRight;\n/** @internal */\nvar left = function (e) { return ({ _tag: 'Left', left: e }); };\nexports.left = left;\n/** @internal */\nvar right = function (a) { return ({ _tag: 'Right', right: a }); };\nexports.right = right;\n// -------------------------------------------------------------------------------------\n// ReadonlyNonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar singleton = function (a) { return [a]; };\nexports.singleton = singleton;\n/** @internal */\nvar isNonEmpty = function (as) { return as.length > 0; };\nexports.isNonEmpty = isNonEmpty;\n/** @internal */\nvar head = function (as) { return as[0]; };\nexports.head = head;\n/** @internal */\nvar tail = function (as) { return as.slice(1); };\nexports.tail = tail;\n// -------------------------------------------------------------------------------------\n// empty\n// -------------------------------------------------------------------------------------\n/** @internal */\nexports.emptyReadonlyArray = [];\n/** @internal */\nexports.emptyRecord = {};\n// -------------------------------------------------------------------------------------\n// Record\n// -------------------------------------------------------------------------------------\n/** @internal */\nexports.has = Object.prototype.hasOwnProperty;\n// -------------------------------------------------------------------------------------\n// NonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar fromReadonlyNonEmptyArray = function (as) { return __spreadArray([as[0]], as.slice(1)); };\nexports.fromReadonlyNonEmptyArray = fromReadonlyNonEmptyArray;\n", "\"use strict\";\n/**\n * The `FromEither` type class represents those data types which support errors.\n *\n * @since 2.10.0\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.filterOrElse = exports.chainFirstEitherK = exports.chainEitherK = exports.fromEitherK = exports.chainOptionK = exports.fromOptionK = exports.fromPredicate = exports.fromOption = void 0;\nvar Chain_1 = require(\"./Chain\");\nvar function_1 = require(\"./function\");\nvar _ = __importStar(require(\"./internal\"));\nfunction fromOption(F) {\n    return function (onNone) { return function (ma) { return F.fromEither(_.isNone(ma) ? _.left(onNone()) : _.right(ma.value)); }; };\n}\nexports.fromOption = fromOption;\nfunction fromPredicate(F) {\n    return function (predicate, onFalse) { return function (a) {\n        return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a)));\n    }; };\n}\nexports.fromPredicate = fromPredicate;\nfunction fromOptionK(F) {\n    var fromOptionF = fromOption(F);\n    return function (onNone) {\n        var from = fromOptionF(onNone);\n        return function (f) { return function_1.flow(f, from); };\n    };\n}\nexports.fromOptionK = fromOptionK;\nfunction chainOptionK(F, M) {\n    var fromOptionKF = fromOptionK(F);\n    return function (onNone) {\n        var from = fromOptionKF(onNone);\n        return function (f) { return function (ma) { return M.chain(ma, from(f)); }; };\n    };\n}\nexports.chainOptionK = chainOptionK;\nfunction fromEitherK(F) {\n    return function (f) { return function_1.flow(f, F.fromEither); };\n}\nexports.fromEitherK = fromEitherK;\nfunction chainEitherK(F, M) {\n    var fromEitherKF = fromEitherK(F);\n    return function (f) { return function (ma) { return M.chain(ma, fromEitherKF(f)); }; };\n}\nexports.chainEitherK = chainEitherK;\nfunction chainFirstEitherK(F, M) {\n    return function_1.flow(fromEitherK(F), Chain_1.chainFirst(M));\n}\nexports.chainFirstEitherK = chainFirstEitherK;\nfunction filterOrElse(F, M) {\n    return function (predicate, onFalse) { return function (ma) {\n        return M.chain(ma, function (a) { return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a))); });\n    }; };\n}\nexports.filterOrElse = filterOrElse;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFunctorComposition = exports.bindTo = exports.flap = exports.map = void 0;\n/**\n * A `Functor` is a type constructor which supports a mapping operation `map`.\n *\n * `map` can be used to turn functions `a -> b` into functions `f a -> f b` whose argument and return types use the type\n * constructor `f` to represent some computational context.\n *\n * Instances must satisfy the following laws:\n *\n * 1. Identity: `F.map(fa, a => a) <-> fa`\n * 2. Composition: `F.map(fa, a => bc(ab(a))) <-> F.map(F.map(fa, ab), bc)`\n *\n * @since 2.0.0\n */\nvar function_1 = require(\"./function\");\nfunction map(F, G) {\n    return function (f) { return function (fa) { return F.map(fa, function (ga) { return G.map(ga, f); }); }; };\n}\nexports.map = map;\nfunction flap(F) {\n    return function (a) { return function (fab) { return F.map(fab, function (f) { return f(a); }); }; };\n}\nexports.flap = flap;\nfunction bindTo(F) {\n    return function (name) { return function (fa) { return F.map(fa, function (a) {\n        var _a;\n        return (_a = {}, _a[name] = a, _a);\n    }); }; };\n}\nexports.bindTo = bindTo;\n/** @deprecated */\nfunction getFunctorComposition(F, G) {\n    var _map = map(F, G);\n    return {\n        map: function (fga, f) { return function_1.pipe(fga, _map(f)); }\n    };\n}\nexports.getFunctorComposition = getFunctorComposition;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.eqDate = exports.eqNumber = exports.eqString = exports.eqBoolean = exports.eq = exports.strictEqual = exports.getStructEq = exports.getTupleEq = exports.Contravariant = exports.getMonoid = exports.getSemigroup = exports.eqStrict = exports.URI = exports.contramap = exports.tuple = exports.struct = exports.fromEquals = void 0;\nvar function_1 = require(\"./function\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nvar fromEquals = function (equals) { return ({\n    equals: function (x, y) { return x === y || equals(x, y); }\n}); };\nexports.fromEquals = fromEquals;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar struct = function (eqs) {\n    return exports.fromEquals(function (first, second) {\n        for (var key in eqs) {\n            if (!eqs[key].equals(first[key], second[key])) {\n                return false;\n            }\n        }\n        return true;\n    });\n};\nexports.struct = struct;\n/**\n * Given a tuple of `Eq`s returns a `Eq` for the tuple\n *\n * @example\n * import { tuple } from 'fp-ts/Eq'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import * as B from 'fp-ts/boolean'\n *\n * const E = tuple(S.Eq, N.Eq, B.Eq)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, true]), true)\n * assert.strictEqual(E.equals(['a', 1, true], ['b', 1, true]), false)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 2, true]), false)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, false]), false)\n *\n * @category combinators\n * @since 2.10.0\n */\nvar tuple = function () {\n    var eqs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        eqs[_i] = arguments[_i];\n    }\n    return exports.fromEquals(function (first, second) { return eqs.every(function (E, i) { return E.equals(first[i], second[i]); }); });\n};\nexports.tuple = tuple;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar contramap_ = function (fa, f) { return function_1.pipe(fa, exports.contramap(f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Contravariant\n * @since 2.0.0\n */\nvar contramap = function (f) { return function (fa) {\n    return exports.fromEquals(function (x, y) { return fa.equals(f(x), f(y)); });\n}; };\nexports.contramap = contramap;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Eq';\n/**\n * @category instances\n * @since 2.5.0\n */\nexports.eqStrict = {\n    equals: function (a, b) { return a === b; }\n};\nvar empty = {\n    equals: function () { return true; }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getSemigroup = function () { return ({\n    concat: function (x, y) { return exports.fromEquals(function (a, b) { return x.equals(a, b) && y.equals(a, b); }); }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * @category instances\n * @since 2.6.0\n */\nvar getMonoid = function () { return ({\n    concat: exports.getSemigroup().concat,\n    empty: empty\n}); };\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Contravariant = {\n    URI: exports.URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getTupleEq = exports.tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getStructEq = exports.struct;\n/**\n * Use [`eqStrict`](#eqstrict) instead\n *\n * @since 2.0.0\n * @deprecated\n */\nexports.strictEqual = exports.eqStrict.equals;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.eq = exports.Contravariant;\n/**\n * Use [`Eq`](./boolean.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.eqBoolean = exports.eqStrict;\n/**\n * Use [`Eq`](./string.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.eqString = exports.eqStrict;\n/**\n * Use [`Eq`](./number.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.eqNumber = exports.eqStrict;\n/**\n * Use [`Eq`](./Date.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.eqDate = {\n    equals: function (first, second) { return first.valueOf() === second.valueOf(); }\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ordDate = exports.ordNumber = exports.ordString = exports.ordBoolean = exports.ord = exports.getDualOrd = exports.getTupleOrd = exports.between = exports.clamp = exports.max = exports.min = exports.geq = exports.leq = exports.gt = exports.lt = exports.equals = exports.trivial = exports.Contravariant = exports.getMonoid = exports.getSemigroup = exports.URI = exports.contramap = exports.reverse = exports.tuple = exports.fromCompare = exports.equalsDefault = void 0;\nvar Eq_1 = require(\"./Eq\");\nvar function_1 = require(\"./function\");\n// -------------------------------------------------------------------------------------\n// defaults\n// -------------------------------------------------------------------------------------\n/**\n * @category defaults\n * @since 2.10.0\n */\nvar equalsDefault = function (compare) { return function (first, second) {\n    return first === second || compare(first, second) === 0;\n}; };\nexports.equalsDefault = equalsDefault;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nvar fromCompare = function (compare) { return ({\n    equals: exports.equalsDefault(compare),\n    compare: function (first, second) { return (first === second ? 0 : compare(first, second)); }\n}); };\nexports.fromCompare = fromCompare;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Given a tuple of `Ord`s returns an `Ord` for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Ord'\n * import * as B from 'fp-ts/boolean'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n *\n * const O = tuple(S.Ord, N.Ord, B.Ord)\n * assert.strictEqual(O.compare(['a', 1, true], ['b', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 1, false]), 1)\n *\n * @category combinators\n * @since 2.10.0\n */\nvar tuple = function () {\n    var ords = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        ords[_i] = arguments[_i];\n    }\n    return exports.fromCompare(function (first, second) {\n        var i = 0;\n        for (; i < ords.length - 1; i++) {\n            var r = ords[i].compare(first[i], second[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return ords[i].compare(first[i], second[i]);\n    });\n};\nexports.tuple = tuple;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar reverse = function (O) { return exports.fromCompare(function (first, second) { return O.compare(second, first); }); };\nexports.reverse = reverse;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar contramap_ = function (fa, f) { return function_1.pipe(fa, exports.contramap(f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Contravariant\n * @since 2.0.0\n */\nvar contramap = function (f) { return function (fa) {\n    return exports.fromCompare(function (first, second) { return fa.compare(f(first), f(second)); });\n}; };\nexports.contramap = contramap;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Ord';\n/**\n * @category instances\n * @since 2.0.0\n */\nvar getSemigroup = function () { return ({\n    concat: function (first, second) {\n        return exports.fromCompare(function (a, b) {\n            var ox = first.compare(a, b);\n            return ox !== 0 ? ox : second.compare(a, b);\n        });\n    }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * Returns a `Monoid` such that:\n *\n * - its `concat(ord1, ord2)` operation will order first by `ord1`, and then by `ord2`\n * - its `empty` value is an `Ord` that always considers compared elements equal\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import { contramap, reverse, getMonoid } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as B from 'fp-ts/boolean'\n * import { pipe } from 'fp-ts/function'\n * import { concatAll } from 'fp-ts/Monoid'\n * import * as N from 'fp-ts/number'\n *\n * interface User {\n *   readonly id: number\n *   readonly name: string\n *   readonly age: number\n *   readonly rememberMe: boolean\n * }\n *\n * const byName = pipe(\n *   S.Ord,\n *   contramap((p: User) => p.name)\n * )\n *\n * const byAge = pipe(\n *   N.Ord,\n *   contramap((p: User) => p.age)\n * )\n *\n * const byRememberMe = pipe(\n *   B.Ord,\n *   contramap((p: User) => p.rememberMe)\n * )\n *\n * const M = getMonoid<User>()\n *\n * const users: Array<User> = [\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true }\n * ]\n *\n * // sort by name, then by age, then by `rememberMe`\n * const O1 = concatAll(M)([byName, byAge, byRememberMe])\n * assert.deepStrictEqual(sort(O1)(users), [\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * // now `rememberMe = true` first, then by name, then by age\n * const O2 = concatAll(M)([reverse(byRememberMe), byName, byAge])\n * assert.deepStrictEqual(sort(O2)(users), [\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * @category instances\n * @since 2.4.0\n */\nvar getMonoid = function () { return ({\n    concat: exports.getSemigroup().concat,\n    empty: exports.fromCompare(function () { return 0; })\n}); };\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Contravariant = {\n    URI: exports.URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexports.trivial = {\n    equals: function_1.constTrue,\n    compare: \n    /*#__PURE__*/\n    function_1.constant(0)\n};\n/**\n * @since 2.11.0\n */\nvar equals = function (O) { return function (second) { return function (first) {\n    return first === second || O.compare(first, second) === 0;\n}; }; };\nexports.equals = equals;\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly less than_ another\n *\n * @since 2.0.0\n */\nvar lt = function (O) { return function (first, second) { return O.compare(first, second) === -1; }; };\nexports.lt = lt;\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly greater than_ another\n *\n * @since 2.0.0\n */\nvar gt = function (O) { return function (first, second) { return O.compare(first, second) === 1; }; };\nexports.gt = gt;\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly less than_ another\n *\n * @since 2.0.0\n */\nvar leq = function (O) { return function (first, second) { return O.compare(first, second) !== 1; }; };\nexports.leq = leq;\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly greater than_ another\n *\n * @since 2.0.0\n */\nvar geq = function (O) { return function (first, second) { return O.compare(first, second) !== -1; }; };\nexports.geq = geq;\n// TODO: curry in v3\n/**\n * Take the minimum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nvar min = function (O) { return function (first, second) {\n    return first === second || O.compare(first, second) < 1 ? first : second;\n}; };\nexports.min = min;\n// TODO: curry in v3\n/**\n * Take the maximum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nvar max = function (O) { return function (first, second) {\n    return first === second || O.compare(first, second) > -1 ? first : second;\n}; };\nexports.max = max;\n/**\n * Clamp a value between a minimum and a maximum\n *\n * @since 2.0.0\n */\nvar clamp = function (O) {\n    var minO = exports.min(O);\n    var maxO = exports.max(O);\n    return function (low, hi) { return function (a) { return maxO(minO(a, hi), low); }; };\n};\nexports.clamp = clamp;\n/**\n * Test whether a value is between a minimum and a maximum (inclusive)\n *\n * @since 2.0.0\n */\nvar between = function (O) {\n    var ltO = exports.lt(O);\n    var gtO = exports.gt(O);\n    return function (low, hi) { return function (a) { return (ltO(a, low) || gtO(a, hi) ? false : true); }; };\n};\nexports.between = between;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getTupleOrd = exports.tuple;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getDualOrd = exports.reverse;\n/**\n * Use [`Contravariant`](#contravariant) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.ord = exports.Contravariant;\n// default compare for primitive types\nfunction compare(first, second) {\n    return first < second ? -1 : first > second ? 1 : 0;\n}\nvar strictOrd = {\n    equals: Eq_1.eqStrict.equals,\n    compare: compare\n};\n/**\n * Use [`Ord`](./boolean.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.ordBoolean = strictOrd;\n/**\n * Use [`Ord`](./string.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.ordString = strictOrd;\n/**\n * Use [`Ord`](./number.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.ordNumber = strictOrd;\n/**\n * Use [`Ord`](./Date.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.ordDate = \n/*#__PURE__*/\nfunction_1.pipe(exports.ordNumber, \n/*#__PURE__*/\nexports.contramap(function (date) { return date.valueOf(); }));\n", "\"use strict\";\n/**\n * A `Magma` is a pair `(A, concat)` in which `A` is a non-empty set and `concat` is a binary operation on `A`\n *\n * See [Semigroup](https://gcanti.github.io/fp-ts/modules/Semigroup.ts.html) for some instances.\n *\n * @since 2.0.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.concatAll = exports.endo = exports.filterSecond = exports.filterFirst = exports.reverse = void 0;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * The dual of a `Magma`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import { reverse, concatAll } from 'fp-ts/Magma'\n * import * as N from 'fp-ts/number'\n *\n * const subAll = concatAll(reverse(N.MagmaSub))(0)\n *\n * assert.deepStrictEqual(subAll([1, 2, 3]), 2)\n *\n * @category combinators\n * @since 2.11.0\n */\nvar reverse = function (M) { return ({\n    concat: function (first, second) { return M.concat(second, first); }\n}); };\nexports.reverse = reverse;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar filterFirst = function (predicate) { return function (M) { return ({\n    concat: function (first, second) { return (predicate(first) ? M.concat(first, second) : second); }\n}); }; };\nexports.filterFirst = filterFirst;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar filterSecond = function (predicate) { return function (M) { return ({\n    concat: function (first, second) { return (predicate(second) ? M.concat(first, second) : first); }\n}); }; };\nexports.filterSecond = filterSecond;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar endo = function (f) { return function (M) { return ({\n    concat: function (first, second) { return M.concat(f(first), f(second)); }\n}); }; };\nexports.endo = endo;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Given a sequence of `as`, concat them and return the total.\n *\n * If `as` is empty, return the provided `startWith` value.\n *\n * @example\n * import { concatAll } from 'fp-ts/Magma'\n * import * as N from 'fp-ts/number'\n *\n * const subAll = concatAll(N.MagmaSub)(0)\n *\n * assert.deepStrictEqual(subAll([1, 2, 3]), -6)\n *\n * @since 2.11.0\n */\nvar concatAll = function (M) { return function (startWith) { return function (as) {\n    return as.reduce(function (a, acc) { return M.concat(a, acc); }, startWith);\n}; }; };\nexports.concatAll = concatAll;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.semigroupProduct = exports.semigroupSum = exports.semigroupString = exports.getFunctionSemigroup = exports.semigroupAny = exports.semigroupAll = exports.fold = exports.getIntercalateSemigroup = exports.getMeetSemigroup = exports.getJoinSemigroup = exports.getDualSemigroup = exports.getStructSemigroup = exports.getTupleSemigroup = exports.getFirstSemigroup = exports.getLastSemigroup = exports.getObjectSemigroup = exports.semigroupVoid = exports.concatAll = exports.last = exports.first = exports.intercalate = exports.tuple = exports.struct = exports.reverse = exports.constant = exports.max = exports.min = void 0;\n/**\n * If a type `A` can form a `Semigroup` it has an **associative** binary operation.\n *\n * ```ts\n * interface Semigroup<A> {\n *   readonly concat: (x: A, y: A) => A\n * }\n * ```\n *\n * Associativity means the following equality must hold for any choice of `x`, `y`, and `z`.\n *\n * ```ts\n * concat(x, concat(y, z)) = concat(concat(x, y), z)\n * ```\n *\n * A common example of a semigroup is the type `string` with the operation `+`.\n *\n * ```ts\n * import { Semigroup } from 'fp-ts/Semigroup'\n *\n * const semigroupString: Semigroup<string> = {\n *   concat: (x, y) => x + y\n * }\n *\n * const x = 'x'\n * const y = 'y'\n * const z = 'z'\n *\n * semigroupString.concat(x, y) // 'xy'\n *\n * semigroupString.concat(x, semigroupString.concat(y, z)) // 'xyz'\n *\n * semigroupString.concat(semigroupString.concat(x, y), z) // 'xyz'\n * ```\n *\n * *Adapted from https://typelevel.org/cats*\n *\n * @since 2.0.0\n */\nvar function_1 = require(\"./function\");\nvar _ = __importStar(require(\"./internal\"));\nvar M = __importStar(require(\"./Magma\"));\nvar Or = __importStar(require(\"./Ord\"));\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Get a semigroup where `concat` will return the minimum, based on the provided order.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.min(N.Ord)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 1)\n *\n * @category constructors\n * @since 2.10.0\n */\nvar min = function (O) { return ({\n    concat: Or.min(O)\n}); };\nexports.min = min;\n/**\n * Get a semigroup where `concat` will return the maximum, based on the provided order.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.max(N.Ord)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 2)\n *\n * @category constructors\n * @since 2.10.0\n */\nvar max = function (O) { return ({\n    concat: Or.max(O)\n}); };\nexports.max = max;\n/**\n * @category constructors\n * @since 2.10.0\n */\nvar constant = function (a) { return ({\n    concat: function () { return a; }\n}); };\nexports.constant = constant;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * The dual of a `Semigroup`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import { reverse } from 'fp-ts/Semigroup'\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(reverse(S.Semigroup).concat('a', 'b'), 'ba')\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.reverse = M.reverse;\n/**\n * Given a struct of semigroups returns a semigroup for the struct.\n *\n * @example\n * import { struct } from 'fp-ts/Semigroup'\n * import * as N from 'fp-ts/number'\n *\n * interface Point {\n *   readonly x: number\n *   readonly y: number\n * }\n *\n * const S = struct<Point>({\n *   x: N.SemigroupSum,\n *   y: N.SemigroupSum\n * })\n *\n * assert.deepStrictEqual(S.concat({ x: 1, y: 2 }, { x: 3, y: 4 }), { x: 4, y: 6 })\n *\n * @category combinators\n * @since 2.10.0\n */\nvar struct = function (semigroups) { return ({\n    concat: function (first, second) {\n        var r = {};\n        for (var k in semigroups) {\n            if (_.has.call(semigroups, k)) {\n                r[k] = semigroups[k].concat(first[k], second[k]);\n            }\n        }\n        return r;\n    }\n}); };\nexports.struct = struct;\n/**\n * Given a tuple of semigroups returns a semigroup for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Semigroup'\n * import * as B from 'fp-ts/boolean'\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/string'\n *\n * const S1 = tuple(S.Semigroup, N.SemigroupSum)\n * assert.deepStrictEqual(S1.concat(['a', 1], ['b', 2]), ['ab', 3])\n *\n * const S2 = tuple(S.Semigroup, N.SemigroupSum, B.SemigroupAll)\n * assert.deepStrictEqual(S2.concat(['a', 1, true], ['b', 2, false]), ['ab', 3, false])\n *\n * @category combinators\n * @since 2.10.0\n */\nvar tuple = function () {\n    var semigroups = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        semigroups[_i] = arguments[_i];\n    }\n    return ({\n        concat: function (first, second) { return semigroups.map(function (s, i) { return s.concat(first[i], second[i]); }); }\n    });\n};\nexports.tuple = tuple;\n/**\n * Between each pair of elements insert `middle`.\n *\n * @example\n * import { intercalate } from 'fp-ts/Semigroup'\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * const S1 = pipe(S.Semigroup, intercalate(' + '))\n *\n * assert.strictEqual(S1.concat('a', 'b'), 'a + b')\n *\n * @category combinators\n * @since 2.10.0\n */\nvar intercalate = function (middle) { return function (S) { return ({\n    concat: function (x, y) { return S.concat(x, S.concat(middle, y)); }\n}); }; };\nexports.intercalate = intercalate;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * Always return the first argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.first<number>().concat(1, 2), 1)\n *\n * @category instances\n * @since 2.10.0\n */\nvar first = function () { return ({ concat: function_1.identity }); };\nexports.first = first;\n/**\n * Always return the last argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.last<number>().concat(1, 2), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nvar last = function () { return ({ concat: function (_, y) { return y; } }); };\nexports.last = last;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Given a sequence of `as`, concat them and return the total.\n *\n * If `as` is empty, return the provided `startWith` value.\n *\n * @example\n * import { concatAll } from 'fp-ts/Semigroup'\n * import * as N from 'fp-ts/number'\n *\n * const sum = concatAll(N.SemigroupSum)(0)\n *\n * assert.deepStrictEqual(sum([1, 2, 3]), 6)\n * assert.deepStrictEqual(sum([]), 0)\n *\n * @since 2.10.0\n */\nexports.concatAll = M.concatAll;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `void` module instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupVoid = exports.constant(undefined);\n/**\n * Use [`getAssignSemigroup`](./struct.ts.html#getAssignSemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nvar getObjectSemigroup = function () { return ({\n    concat: function (first, second) { return Object.assign({}, first, second); }\n}); };\nexports.getObjectSemigroup = getObjectSemigroup;\n/**\n * Use [`last`](#last) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getLastSemigroup = exports.last;\n/**\n * Use [`first`](#first) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getFirstSemigroup = exports.first;\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getTupleSemigroup = exports.tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getStructSemigroup = exports.struct;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getDualSemigroup = exports.reverse;\n/**\n * Use [`max`](#max) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexports.getJoinSemigroup = exports.max;\n/**\n * Use [`min`](#min) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexports.getMeetSemigroup = exports.min;\n/**\n * Use [`intercalate`](#intercalate) instead.\n *\n * @category combinators\n * @since 2.5.0\n * @deprecated\n */\nexports.getIntercalateSemigroup = exports.intercalate;\nfunction fold(S) {\n    var concatAllS = exports.concatAll(S);\n    return function (startWith, as) { return (as === undefined ? concatAllS(startWith) : concatAllS(startWith)(as)); };\n}\nexports.fold = fold;\n/**\n * Use [`SemigroupAll`](./boolean.ts.html#SemigroupAll) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupAll = {\n    concat: function (x, y) { return x && y; }\n};\n/**\n * Use [`SemigroupAny`](./boolean.ts.html#SemigroupAny) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupAny = {\n    concat: function (x, y) { return x || y; }\n};\n/**\n * Use [`getSemigroup`](./function.ts.html#getSemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getFunctionSemigroup = function_1.getSemigroup;\n/**\n * Use [`Semigroup`](./string.ts.html#Semigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupString = {\n    concat: function (x, y) { return x + y; }\n};\n/**\n * Use [`SemigroupSum`](./number.ts.html#SemigroupSum) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupSum = {\n    concat: function (x, y) { return x + y; }\n};\n/**\n * Use [`SemigroupProduct`](./number.ts.html#SemigroupProduct) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupProduct = {\n    concat: function (x, y) { return x * y; }\n};\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reduceRight = exports.foldMap = exports.reduce = exports.mapWithIndex = exports.map = exports.flatten = exports.duplicate = exports.extend = exports.chain = exports.ap = exports.alt = exports.altW = exports.of = exports.chunksOf = exports.splitAt = exports.chop = exports.chainWithIndex = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = exports.modifyAt = exports.updateAt = exports.sort = exports.groupBy = exports.group = exports.reverse = exports.concat = exports.concatW = exports.fromArray = exports.unappend = exports.unprepend = exports.range = exports.replicate = exports.makeBy = exports.fromReadonlyArray = exports.rotate = exports.union = exports.sortBy = exports.uniq = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.append = exports.appendW = exports.prepend = exports.prependW = exports.isOutOfBound = exports.isNonEmpty = exports.empty = void 0;\nexports.filterWithIndex = exports.filter = exports.groupSort = exports.intercalate = exports.updateLast = exports.modifyLast = exports.updateHead = exports.modifyHead = exports.matchRight = exports.matchLeft = exports.concatAll = exports.max = exports.min = exports.init = exports.last = exports.tail = exports.head = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.Comonad = exports.Alt = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.Monad = exports.chainFirst = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = exports.flap = exports.Functor = exports.getUnionSemigroup = exports.getEq = exports.getSemigroup = exports.getShow = exports.URI = exports.extract = exports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.foldMapWithIndex = exports.reduceWithIndex = void 0;\nexports.readonlyNonEmptyArray = exports.fold = exports.prependToAll = exports.insertAt = exports.snoc = exports.cons = exports.unsnoc = exports.uncons = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar Eq_1 = require(\"./Eq\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar Ord_1 = require(\"./Ord\");\nvar Se = __importStar(require(\"./Semigroup\"));\n// -------------------------------------------------------------------------------------\n// internal\n// -------------------------------------------------------------------------------------\n/**\n * @internal\n */\nexports.empty = _.emptyReadonlyArray;\n/**\n * @internal\n */\nexports.isNonEmpty = _.isNonEmpty;\n/**\n * @internal\n */\nvar isOutOfBound = function (i, as) { return i < 0 || i >= as.length; };\nexports.isOutOfBound = isOutOfBound;\n/**\n * @internal\n */\nvar prependW = function (head) { return function (tail) { return __spreadArray([head], tail); }; };\nexports.prependW = prependW;\n/**\n * @internal\n */\nexports.prepend = exports.prependW;\n/**\n * @internal\n */\nvar appendW = function (end) { return function (init) { return __spreadArray(__spreadArray([], init), [end]); }; };\nexports.appendW = appendW;\n/**\n * @internal\n */\nexports.append = exports.appendW;\n/**\n * @internal\n */\nvar unsafeInsertAt = function (i, a, as) {\n    if (exports.isNonEmpty(as)) {\n        var xs = _.fromReadonlyNonEmptyArray(as);\n        xs.splice(i, 0, a);\n        return xs;\n    }\n    return [a];\n};\nexports.unsafeInsertAt = unsafeInsertAt;\n/**\n * @internal\n */\nvar unsafeUpdateAt = function (i, a, as) {\n    if (as[i] === a) {\n        return as;\n    }\n    else {\n        var xs = _.fromReadonlyNonEmptyArray(as);\n        xs[i] = a;\n        return xs;\n    }\n};\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * Remove duplicates from a `ReadonlyNonEmptyArray`, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyNonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.11.0\n */\nvar uniq = function (E) { return function (as) {\n    if (as.length === 1) {\n        return as;\n    }\n    var out = [exports.head(as)];\n    var rest = exports.tail(as);\n    var _loop_1 = function (a) {\n        if (out.every(function (o) { return !E.equals(o, a); })) {\n            out.push(a);\n        }\n    };\n    for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {\n        var a = rest_1[_i];\n        _loop_1(a);\n    }\n    return out;\n}; };\nexports.uniq = uniq;\n/**\n * Sort the elements of a `ReadonlyNonEmptyArray` in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n *\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n *\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = RNEA.sortBy([byName, byAge])\n *\n * const persons: RNEA.ReadonlyNonEmptyArray<Person> = [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 },\n *   { name: 'b', age: 2 }\n * ]\n *\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.11.0\n */\nvar sortBy = function (ords) {\n    if (exports.isNonEmpty(ords)) {\n        var M = Ord_1.getMonoid();\n        return exports.sort(ords.reduce(M.concat, M.empty));\n    }\n    return function_1.identity;\n};\nexports.sortBy = sortBy;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar union = function (E) {\n    var uniqE = exports.uniq(E);\n    return function (second) { return function (first) { return uniqE(function_1.pipe(first, concat(second))); }; };\n};\nexports.union = union;\n/**\n * Rotate a `ReadonlyNonEmptyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n * assert.deepStrictEqual(rotate(-2)([1, 2, 3, 4, 5]), [3, 4, 5, 1, 2])\n *\n * @category combinators\n * @since 2.11.0\n */\nvar rotate = function (n) { return function (as) {\n    var len = as.length;\n    var m = Math.round(n) % len;\n    if (exports.isOutOfBound(Math.abs(m), as) || m === 0) {\n        return as;\n    }\n    if (m < 0) {\n        var _a = exports.splitAt(-m)(as), f = _a[0], s = _a[1];\n        return function_1.pipe(s, concat(f));\n    }\n    else {\n        return exports.rotate(m - len)(as);\n    }\n}; };\nexports.rotate = rotate;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Return a `ReadonlyNonEmptyArray` from a `ReadonlyArray` returning `none` if the input is empty.\n *\n * @category constructors\n * @since 2.5.0\n */\nvar fromReadonlyArray = function (as) {\n    return exports.isNonEmpty(as) ? _.some(as) : _.none;\n};\nexports.fromReadonlyArray = fromReadonlyArray;\n/**\n * Return a `ReadonlyNonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(pipe(5, makeBy(double)), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar makeBy = function (f) { return function (n) {\n    var j = Math.max(0, Math.floor(n));\n    var out = [f(0)];\n    for (var i = 1; i < j; i++) {\n        out.push(f(i));\n    }\n    return out;\n}; };\nexports.makeBy = makeBy;\n/**\n * Create a `ReadonlyNonEmptyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(3, replicate('a')), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar replicate = function (a) { return exports.makeBy(function () { return a; }); };\nexports.replicate = replicate;\n/**\n * Create a `ReadonlyNonEmptyArray` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar range = function (start, end) {\n    return start <= end ? exports.makeBy(function (i) { return start + i; })(end - start + 1) : [start];\n};\nexports.range = range;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Return the tuple of the `head` and the `tail`.\n *\n * @example\n * import { unprepend } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unprepend([1, 2, 3, 4]), [1, [2, 3, 4]])\n *\n * @category destructors\n * @since 2.9.0\n */\nvar unprepend = function (as) { return [exports.head(as), exports.tail(as)]; };\nexports.unprepend = unprepend;\n/**\n * Return the tuple of the `init` and the `last`.\n *\n * @example\n * import { unappend } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unappend([1, 2, 3, 4]), [[1, 2, 3], 4])\n *\n * @category destructors\n * @since 2.9.0\n */\nvar unappend = function (as) { return [exports.init(as), exports.last(as)]; };\nexports.unappend = unappend;\n// -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n/**\n * @category interop\n * @since 2.5.0\n */\nvar fromArray = function (as) { return exports.fromReadonlyArray(as.slice()); };\nexports.fromArray = fromArray;\nfunction concatW(second) {\n    return function (first) { return first.concat(second); };\n}\nexports.concatW = concatW;\nfunction concat(x, y) {\n    return y ? x.concat(y) : function (y) { return y.concat(x); };\n}\nexports.concat = concat;\n/**\n * @category combinators\n * @since 2.5.0\n */\nvar reverse = function (as) {\n    return as.length === 1 ? as : __spreadArray([exports.last(as)], as.slice(0, -1).reverse());\n};\nexports.reverse = reverse;\nfunction group(E) {\n    return function (as) {\n        var len = as.length;\n        if (len === 0) {\n            return exports.empty;\n        }\n        var out = [];\n        var head = as[0];\n        var nea = [head];\n        for (var i = 1; i < len; i++) {\n            var a = as[i];\n            if (E.equals(a, head)) {\n                nea.push(a);\n            }\n            else {\n                out.push(nea);\n                head = a;\n                nea = [head];\n            }\n        }\n        out.push(nea);\n        return out;\n    };\n}\nexports.group = group;\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { groupBy } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['a', 'b', 'ab']), {\n *   '1': ['a', 'b'],\n *   '2': ['ab']\n * })\n *\n * @category combinators\n * @since 2.5.0\n */\nvar groupBy = function (f) { return function (as) {\n    var out = {};\n    for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n        var a = as_1[_i];\n        var k = f(a);\n        if (out.hasOwnProperty(k)) {\n            out[k].push(a);\n        }\n        else {\n            out[k] = [a];\n        }\n    }\n    return out;\n}; };\nexports.groupBy = groupBy;\n/**\n * @category combinators\n * @since 2.5.0\n */\nvar sort = function (O) { return function (as) {\n    return as.length === 1 ? as : as.slice().sort(O.compare);\n}; };\nexports.sort = sort;\n/**\n * @category combinators\n * @since 2.5.0\n */\nvar updateAt = function (i, a) {\n    return exports.modifyAt(i, function () { return a; });\n};\nexports.updateAt = updateAt;\n/**\n * @category combinators\n * @since 2.5.0\n */\nvar modifyAt = function (i, f) { return function (as) { return (exports.isOutOfBound(i, as) ? _.none : _.some(exports.unsafeUpdateAt(i, f(as[i]), as))); }; };\nexports.modifyAt = modifyAt;\n/**\n * @category combinators\n * @since 2.5.1\n */\nvar zipWith = function (as, bs, f) {\n    var cs = [f(as[0], bs[0])];\n    var len = Math.min(as.length, bs.length);\n    for (var i = 1; i < len; i++) {\n        cs[i] = f(as[i], bs[i]);\n    }\n    return cs;\n};\nexports.zipWith = zipWith;\nfunction zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return exports.zipWith(as, bs, function (a, b) { return [a, b]; });\n}\nexports.zip = zip;\n/**\n * @category combinators\n * @since 2.5.1\n */\nvar unzip = function (abs) {\n    var fa = [abs[0][0]];\n    var fb = [abs[0][1]];\n    for (var i = 1; i < abs.length; i++) {\n        fa[i] = abs[i][0];\n        fb[i] = abs[i][1];\n    }\n    return [fa, fb];\n};\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of a `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { prependAll } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\nvar prependAll = function (middle) { return function (as) {\n    var out = [middle, as[0]];\n    for (var i = 1; i < as.length; i++) {\n        out.push(middle, as[i]);\n    }\n    return out;\n}; };\nexports.prependAll = prependAll;\n/**\n * Places an element in between members of a `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nvar intersperse = function (middle) { return function (as) {\n    var rest = exports.tail(as);\n    return exports.isNonEmpty(rest) ? function_1.pipe(rest, exports.prependAll(middle), exports.prepend(exports.head(as))) : as;\n}; };\nexports.intersperse = intersperse;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar chainWithIndex = function (f) { return function (as) {\n    var out = _.fromReadonlyNonEmptyArray(f(0, exports.head(as)));\n    for (var i = 1; i < as.length; i++) {\n        out.push.apply(out, f(i, as[i]));\n    }\n    return out;\n}; };\nexports.chainWithIndex = chainWithIndex;\n/**\n * A useful recursion pattern for processing a `ReadonlyNonEmptyArray` to produce a new `ReadonlyNonEmptyArray`, often used for \"chopping\" up the input\n * `ReadonlyNonEmptyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyNonEmptyArray` and produce a\n * value and the tail of the `ReadonlyNonEmptyArray`.\n *\n * @category combinators\n * @since 2.10.0\n */\nvar chop = function (f) { return function (as) {\n    var _a = f(as), b = _a[0], rest = _a[1];\n    var out = [b];\n    var next = rest;\n    while (exports.isNonEmpty(next)) {\n        var _b = f(next), b_1 = _b[0], rest_2 = _b[1];\n        out.push(b_1);\n        next = rest_2;\n    }\n    return out;\n}; };\nexports.chop = chop;\n/**\n * Splits a `ReadonlyNonEmptyArray` into two pieces, the first piece has max `n` elements.\n *\n * @category combinators\n * @since 2.10.0\n */\nvar splitAt = function (n) { return function (as) {\n    var m = Math.max(1, n);\n    return m >= as.length ? [as, exports.empty] : [function_1.pipe(as.slice(1, m), exports.prepend(exports.head(as))), as.slice(m)];\n}; };\nexports.splitAt = splitAt;\n/**\n * Splits a `ReadonlyNonEmptyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `ReadonlyNonEmptyArray`.\n *\n * @category combinators\n * @since 2.10.0\n */\nvar chunksOf = function (n) { return exports.chop(exports.splitAt(n)); };\nexports.chunksOf = chunksOf;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.mapWithIndex(f)); };\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return function_1.pipe(wa, exports.extend(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = exports.foldMapWithIndex(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseWithIndexF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Pointed\n * @since 2.5.0\n */\nexports.of = _.singleton;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nvar altW = function (that) { return function (as) { return function_1.pipe(as, concatW(that())); }; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.6.2\n */\nexports.alt = exports.altW;\n/**\n * @category Apply\n * @since 2.5.0\n */\nvar ap = function (as) { return exports.chain(function (f) { return function_1.pipe(as, exports.map(f)); }); };\nexports.ap = ap;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\nvar chain = function (f) { return exports.chainWithIndex(function (_, a) { return f(a); }); };\nexports.chain = chain;\n/**\n * @category Extend\n * @since 2.5.0\n */\nvar extend = function (f) { return function (as) {\n    var next = exports.tail(as);\n    var out = [f(as)];\n    while (exports.isNonEmpty(next)) {\n        out.push(f(next));\n        next = exports.tail(next);\n    }\n    return out;\n}; };\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\nvar map = function (f) {\n    return exports.mapWithIndex(function (_, a) { return f(a); });\n};\nexports.map = map;\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\nvar mapWithIndex = function (f) { return function (as) {\n    var out = [f(0, exports.head(as))];\n    for (var i = 1; i < as.length; i++) {\n        out.push(f(i, as[i]));\n    }\n    return out;\n}; };\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar reduce = function (b, f) {\n    return exports.reduceWithIndex(b, function (_, b, a) { return f(b, a); });\n};\nexports.reduce = reduce;\n/**\n * **Note**. The constraint is relaxed: a `Semigroup` instead of a `Monoid`.\n *\n * @category Foldable\n * @since 2.5.0\n */\nvar foldMap = function (S) { return function (f) { return function (as) {\n    return as.slice(1).reduce(function (s, a) { return S.concat(s, f(a)); }, f(as[0]));\n}; }; };\nexports.foldMap = foldMap;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar reduceRight = function (b, f) {\n    return exports.reduceRightWithIndex(b, function (_, b, a) { return f(b, a); });\n};\nexports.reduceRight = reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar reduceWithIndex = function (b, f) { return function (as) {\n    return as.reduce(function (b, a, i) { return f(i, b, a); }, b);\n}; };\nexports.reduceWithIndex = reduceWithIndex;\n/**\n * **Note**. The constraint is relaxed: a `Semigroup` instead of a `Monoid`.\n *\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar foldMapWithIndex = function (S) { return function (f) { return function (as) { return as.slice(1).reduce(function (s, a, i) { return S.concat(s, f(i + 1, a)); }, f(0, as[0])); }; }; };\nexports.foldMapWithIndex = foldMapWithIndex;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar reduceRightWithIndex = function (b, f) { return function (as) { return as.reduceRight(function (b, a, i) { return f(i, a, b); }, b); }; };\nexports.reduceRightWithIndex = reduceRightWithIndex;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\nexports.traverse = traverse;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nvar sequence = function (F) { return exports.traverseWithIndex(F)(function_1.SK); };\nexports.sequence = sequence;\n/**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\nvar traverseWithIndex = function (F) { return function (f) { return function (as) {\n    var out = F.map(f(0, exports.head(as)), exports.of);\n    for (var i = 1; i < as.length; i++) {\n        out = F.ap(F.map(out, function (bs) { return function (b) { return function_1.pipe(bs, exports.append(b)); }; }), f(i, as[i]));\n    }\n    return out;\n}; }; };\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category Comonad\n * @since 2.6.3\n */\nexports.extract = _.head;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.5.0\n */\nexports.URI = 'ReadonlyNonEmptyArray';\n/**\n * @category instances\n * @since 2.5.0\n */\nvar getShow = function (S) { return ({\n    show: function (as) { return \"[\" + as.map(S.show).join(', ') + \"]\"; }\n}); };\nexports.getShow = getShow;\n/**\n * Builds a `Semigroup` instance for `ReadonlyNonEmptyArray`\n *\n * @category instances\n * @since 2.5.0\n */\nvar getSemigroup = function () { return ({\n    concat: concat\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * @example\n * import { getEq } from 'fp-ts/ReadonlyNonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals([1, 2], [1, 2]), true)\n * assert.strictEqual(E.equals([1, 2], [1, 3]), false)\n *\n * @category instances\n * @since 2.5.0\n */\nvar getEq = function (E) {\n    return Eq_1.fromEquals(function (xs, ys) { return xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); }); });\n};\nexports.getEq = getEq;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar getUnionSemigroup = function (E) {\n    var unionE = exports.union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\nexports.getUnionSemigroup = getUnionSemigroup;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#__PURE__*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Comonad = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend,\n    extract: exports.extract\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of(_.emptyRecord);\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.5.0\n */\nexports.head = exports.extract;\n/**\n * @since 2.5.0\n */\nexports.tail = _.tail;\n/**\n * @since 2.5.0\n */\nvar last = function (as) { return as[as.length - 1]; };\nexports.last = last;\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.5.0\n */\nvar init = function (as) { return as.slice(0, -1); };\nexports.init = init;\n/**\n * @since 2.5.0\n */\nvar min = function (O) {\n    var S = Se.min(O);\n    return function (as) { return as.reduce(S.concat); };\n};\nexports.min = min;\n/**\n * @since 2.5.0\n */\nvar max = function (O) {\n    var S = Se.max(O);\n    return function (as) { return as.reduce(S.concat); };\n};\nexports.max = max;\n/**\n * @since 2.10.0\n */\nvar concatAll = function (S) { return function (as) { return as.reduce(S.concat); }; };\nexports.concatAll = concatAll;\n/**\n * Break a `ReadonlyArray` into its first element and remaining elements.\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchLeft = function (f) { return function (as) {\n    return f(exports.head(as), exports.tail(as));\n}; };\nexports.matchLeft = matchLeft;\n/**\n * Break a `ReadonlyArray` into its initial elements and the last element.\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchRight = function (f) { return function (as) {\n    return f(exports.init(as), exports.last(as));\n}; };\nexports.matchRight = matchRight;\n/**\n * Apply a function to the head, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nvar modifyHead = function (f) { return function (as) { return __spreadArray([\n    f(exports.head(as))\n], exports.tail(as)); }; };\nexports.modifyHead = modifyHead;\n/**\n * Change the head, creating a new `ReadonlyNonEmptyArray`.\n *\n * @category combinators\n * @since 2.11.0\n */\nvar updateHead = function (a) { return exports.modifyHead(function () { return a; }); };\nexports.updateHead = updateHead;\n/**\n * Apply a function to the last element, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nvar modifyLast = function (f) { return function (as) {\n    return function_1.pipe(exports.init(as), exports.append(f(exports.last(as))));\n}; };\nexports.modifyLast = modifyLast;\n/**\n * Change the last element, creating a new `ReadonlyNonEmptyArray`.\n *\n * @category combinators\n * @since 2.11.0\n */\nvar updateLast = function (a) { return exports.modifyLast(function () { return a; }); };\nexports.updateLast = updateLast;\n/**\n * Places an element in between members of a `ReadonlyNonEmptyArray`, then folds the results using the provided `Semigroup`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(intercalate(S.Semigroup)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nvar intercalate = function (S) {\n    var concatAllS = exports.concatAll(S);\n    return function (middle) { return function_1.flow(exports.intersperse(middle), concatAllS); };\n};\nexports.intercalate = intercalate;\nfunction groupSort(O) {\n    var sortO = exports.sort(O);\n    var groupO = group(O);\n    return function (as) { return (exports.isNonEmpty(as) ? groupO(sortO(as)) : exports.empty); };\n}\nexports.groupSort = groupSort;\nfunction filter(predicate) {\n    return exports.filterWithIndex(function (_, a) { return predicate(a); });\n}\nexports.filter = filter;\n/**\n * Use [`filterWithIndex`](./ReadonlyArray.ts.html#filterwithindex) instead.\n *\n * @category combinators\n * @since 2.5.0\n * @deprecated\n */\nvar filterWithIndex = function (predicate) { return function (as) { return exports.fromReadonlyArray(as.filter(function (a, i) { return predicate(i, a); })); }; };\nexports.filterWithIndex = filterWithIndex;\n/**\n * Use [`unprepend`](#unprepend) instead.\n *\n * @category destructors\n * @since 2.10.0\n * @deprecated\n */\nexports.uncons = exports.unprepend;\n/**\n * Use [`unappend`](#unappend) instead.\n *\n * @category destructors\n * @since 2.10.0\n * @deprecated\n */\nexports.unsnoc = exports.unappend;\nfunction cons(head, tail) {\n    return tail === undefined ? exports.prepend(head) : function_1.pipe(tail, exports.prepend(head));\n}\nexports.cons = cons;\n/**\n * Use [`append`](./ReadonlyArray.ts.html#append) instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\nvar snoc = function (init, end) { return function_1.pipe(init, concat([end])); };\nexports.snoc = snoc;\n/**\n * Use [`insertAt`](./ReadonlyArray.ts.html#insertat) instead.\n *\n * @category combinators\n * @since 2.5.0\n * @deprecated\n */\nvar insertAt = function (i, a) { return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(exports.unsafeInsertAt(i, a, as));\n}; };\nexports.insertAt = insertAt;\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\nexports.prependToAll = exports.prependAll;\n/**\n * Use [`concatAll`](#concatall) instead.\n *\n * @since 2.5.0\n * @deprecated\n */\nexports.fold = exports.concatAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.5.0\n * @deprecated\n */\nexports.readonlyNonEmptyArray = {\n    URI: exports.URI,\n    of: exports.of,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    ap: _ap,\n    chain: _chain,\n    extend: _extend,\n    extract: exports.extract,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    alt: _alt\n};\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mapWithIndex = exports.map = exports.flatten = exports.duplicate = exports.extend = exports.chain = exports.ap = exports.alt = exports.altW = exports.chunksOf = exports.splitAt = exports.chop = exports.chainWithIndex = exports.foldMap = exports.foldMapWithIndex = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = exports.of = exports.copy = exports.modifyAt = exports.updateAt = exports.insertAt = exports.sort = exports.groupBy = exports.group = exports.reverse = exports.concat = exports.concatW = exports.unappend = exports.unprepend = exports.range = exports.replicate = exports.makeBy = exports.fromArray = exports.fromReadonlyNonEmptyArray = exports.rotate = exports.union = exports.sortBy = exports.uniq = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.append = exports.appendW = exports.prepend = exports.prependW = exports.isOutOfBound = exports.isNonEmpty = void 0;\nexports.filter = exports.groupSort = exports.intercalate = exports.updateLast = exports.modifyLast = exports.updateHead = exports.modifyHead = exports.matchRight = exports.matchLeft = exports.concatAll = exports.max = exports.min = exports.init = exports.last = exports.tail = exports.head = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.Comonad = exports.Alt = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.Monad = exports.chainFirst = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = exports.flap = exports.Functor = exports.getUnionSemigroup = exports.getEq = exports.getSemigroup = exports.getShow = exports.URI = exports.extract = exports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.reduce = void 0;\nexports.nonEmptyArray = exports.fold = exports.prependToAll = exports.snoc = exports.cons = exports.unsnoc = exports.uncons = exports.filterWithIndex = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar Ord_1 = require(\"./Ord\");\nvar RNEA = __importStar(require(\"./ReadonlyNonEmptyArray\"));\n// -------------------------------------------------------------------------------------\n// internal\n// -------------------------------------------------------------------------------------\n/**\n * @internal\n */\nvar isNonEmpty = function (as) { return as.length > 0; };\nexports.isNonEmpty = isNonEmpty;\n/**\n * @internal\n */\nvar isOutOfBound = function (i, as) { return i < 0 || i >= as.length; };\nexports.isOutOfBound = isOutOfBound;\n/**\n * @internal\n */\nvar prependW = function (head) { return function (tail) { return __spreadArray([head], tail); }; };\nexports.prependW = prependW;\n/**\n * @internal\n */\nexports.prepend = exports.prependW;\n/**\n * @internal\n */\nvar appendW = function (end) { return function (init) { return __spreadArray(__spreadArray([], init), [end]); }; };\nexports.appendW = appendW;\n/**\n * @internal\n */\nexports.append = exports.appendW;\n/**\n * @internal\n */\nvar unsafeInsertAt = function (i, a, as) {\n    if (exports.isNonEmpty(as)) {\n        var xs = exports.fromReadonlyNonEmptyArray(as);\n        xs.splice(i, 0, a);\n        return xs;\n    }\n    return [a];\n};\nexports.unsafeInsertAt = unsafeInsertAt;\n/**\n * @internal\n */\nvar unsafeUpdateAt = function (i, a, as) {\n    var xs = exports.fromReadonlyNonEmptyArray(as);\n    xs[i] = a;\n    return xs;\n};\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * Remove duplicates from a `NonEmptyArray`, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/NonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.11.0\n */\nvar uniq = function (E) { return function (as) {\n    if (as.length === 1) {\n        return exports.copy(as);\n    }\n    var out = [exports.head(as)];\n    var rest = exports.tail(as);\n    var _loop_1 = function (a) {\n        if (out.every(function (o) { return !E.equals(o, a); })) {\n            out.push(a);\n        }\n    };\n    for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {\n        var a = rest_1[_i];\n        _loop_1(a);\n    }\n    return out;\n}; };\nexports.uniq = uniq;\n/**\n * Sort the elements of a `NonEmptyArray` in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n *\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n *\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = NEA.sortBy([byName, byAge])\n *\n * const persons: NEA.NonEmptyArray<Person> = [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 },\n *   { name: 'b', age: 2 }\n * ]\n *\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.11.0\n */\nvar sortBy = function (ords) {\n    if (exports.isNonEmpty(ords)) {\n        var M = Ord_1.getMonoid();\n        return exports.sort(ords.reduce(M.concat, M.empty));\n    }\n    return exports.copy;\n};\nexports.sortBy = sortBy;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar union = function (E) {\n    var uniqE = exports.uniq(E);\n    return function (second) { return function (first) { return uniqE(function_1.pipe(first, concat(second))); }; };\n};\nexports.union = union;\n/**\n * Rotate a `NonEmptyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n * assert.deepStrictEqual(rotate(-2)([1, 2, 3, 4, 5]), [3, 4, 5, 1, 2])\n *\n * @category combinators\n * @since 2.11.0\n */\nvar rotate = function (n) { return function (as) {\n    var len = as.length;\n    var m = Math.round(n) % len;\n    if (exports.isOutOfBound(Math.abs(m), as) || m === 0) {\n        return exports.copy(as);\n    }\n    if (m < 0) {\n        var _a = exports.splitAt(-m)(as), f = _a[0], s = _a[1];\n        return function_1.pipe(s, concat(f));\n    }\n    else {\n        return exports.rotate(m - len)(as);\n    }\n}; };\nexports.rotate = rotate;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.10.0\n */\nexports.fromReadonlyNonEmptyArray = _.fromReadonlyNonEmptyArray;\n/**\n * Builds a `NonEmptyArray` from an `Array` returning `none` if `as` is an empty array\n *\n * @category constructors\n * @since 2.0.0\n */\nvar fromArray = function (as) { return (exports.isNonEmpty(as) ? _.some(as) : _.none); };\nexports.fromArray = fromArray;\n/**\n * Return a `NonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { makeBy } from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(pipe(5, makeBy(double)), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar makeBy = function (f) { return function (n) {\n    var j = Math.max(0, Math.floor(n));\n    var out = [f(0)];\n    for (var i = 1; i < j; i++) {\n        out.push(f(i));\n    }\n    return out;\n}; };\nexports.makeBy = makeBy;\n/**\n * Create a `NonEmptyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { replicate } from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(3, replicate('a')), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar replicate = function (a) { return exports.makeBy(function () { return a; }); };\nexports.replicate = replicate;\n/**\n * Create a `NonEmptyArray` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar range = function (start, end) {\n    return start <= end ? exports.makeBy(function (i) { return start + i; })(end - start + 1) : [start];\n};\nexports.range = range;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Return the tuple of the `head` and the `tail`.\n *\n * @example\n * import { unprepend } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(unprepend([1, 2, 3]), [1, [2, 3]])\n *\n * @category destructors\n * @since 2.9.0\n */\nvar unprepend = function (as) { return [exports.head(as), exports.tail(as)]; };\nexports.unprepend = unprepend;\n/**\n * Return the tuple of the `init` and the `last`.\n *\n * @example\n * import { unappend } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(unappend([1, 2, 3, 4]), [[1, 2, 3], 4])\n *\n * @category destructors\n * @since 2.9.0\n */\nvar unappend = function (as) { return [exports.init(as), exports.last(as)]; };\nexports.unappend = unappend;\nfunction concatW(second) {\n    return function (first) { return first.concat(second); };\n}\nexports.concatW = concatW;\nfunction concat(x, y) {\n    return y ? x.concat(y) : function (y) { return y.concat(x); };\n}\nexports.concat = concat;\n/**\n * @category combinators\n * @since 2.0.0\n */\nvar reverse = function (as) { return __spreadArray([exports.last(as)], as.slice(0, -1).reverse()); };\nexports.reverse = reverse;\nfunction group(E) {\n    return function (as) {\n        var len = as.length;\n        if (len === 0) {\n            return [];\n        }\n        var out = [];\n        var head = as[0];\n        var nea = [head];\n        for (var i = 1; i < len; i++) {\n            var a = as[i];\n            if (E.equals(a, head)) {\n                nea.push(a);\n            }\n            else {\n                out.push(nea);\n                head = a;\n                nea = [head];\n            }\n        }\n        out.push(nea);\n        return out;\n    };\n}\nexports.group = group;\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { groupBy } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['a', 'b', 'ab']), {\n *   '1': ['a', 'b'],\n *   '2': ['ab']\n * })\n *\n * @category combinators\n * @since 2.0.0\n */\nvar groupBy = function (f) { return function (as) {\n    var out = {};\n    for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n        var a = as_1[_i];\n        var k = f(a);\n        if (out.hasOwnProperty(k)) {\n            out[k].push(a);\n        }\n        else {\n            out[k] = [a];\n        }\n    }\n    return out;\n}; };\nexports.groupBy = groupBy;\n/**\n * @category combinators\n * @since 2.0.0\n */\nvar sort = function (O) { return function (as) {\n    return as.slice().sort(O.compare);\n}; };\nexports.sort = sort;\n/**\n * @category combinators\n * @since 2.0.0\n */\nvar insertAt = function (i, a) { return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(exports.unsafeInsertAt(i, a, as));\n}; };\nexports.insertAt = insertAt;\n/**\n * @category combinators\n * @since 2.0.0\n */\nvar updateAt = function (i, a) {\n    return exports.modifyAt(i, function () { return a; });\n};\nexports.updateAt = updateAt;\n/**\n * @category combinators\n * @since 2.0.0\n */\nvar modifyAt = function (i, f) { return function (as) {\n    return exports.isOutOfBound(i, as) ? _.none : _.some(exports.unsafeUpdateAt(i, f(as[i]), as));\n}; };\nexports.modifyAt = modifyAt;\n/**\n * @category combinators\n * @since 2.0.0\n */\nexports.copy = exports.fromReadonlyNonEmptyArray;\n/**\n * @category Pointed\n * @since 2.0.0\n */\nvar of = function (a) { return [a]; };\nexports.of = of;\n/**\n * @category combinators\n * @since 2.5.1\n */\nvar zipWith = function (as, bs, f) {\n    var cs = [f(as[0], bs[0])];\n    var len = Math.min(as.length, bs.length);\n    for (var i = 1; i < len; i++) {\n        cs[i] = f(as[i], bs[i]);\n    }\n    return cs;\n};\nexports.zipWith = zipWith;\nfunction zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return exports.zipWith(as, bs, function (a, b) { return [a, b]; });\n}\nexports.zip = zip;\n/**\n * @category combinators\n * @since 2.5.1\n */\nvar unzip = function (abs) {\n    var fa = [abs[0][0]];\n    var fb = [abs[0][1]];\n    for (var i = 1; i < abs.length; i++) {\n        fa[i] = abs[i][0];\n        fb[i] = abs[i][1];\n    }\n    return [fa, fb];\n};\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\nvar prependAll = function (middle) { return function (as) {\n    var out = [middle, as[0]];\n    for (var i = 1; i < as.length; i++) {\n        out.push(middle, as[i]);\n    }\n    return out;\n}; };\nexports.prependAll = prependAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nvar intersperse = function (middle) { return function (as) {\n    var rest = exports.tail(as);\n    return exports.isNonEmpty(rest) ? function_1.pipe(rest, exports.prependAll(middle), exports.prepend(exports.head(as))) : exports.copy(as);\n}; };\nexports.intersperse = intersperse;\n/**\n * @category combinators\n * @since 2.0.0\n */\nexports.foldMapWithIndex = RNEA.foldMapWithIndex;\n/**\n * @category combinators\n * @since 2.0.0\n */\nexports.foldMap = RNEA.foldMap;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar chainWithIndex = function (f) { return function (as) {\n    var out = exports.fromReadonlyNonEmptyArray(f(0, exports.head(as)));\n    for (var i = 1; i < as.length; i++) {\n        out.push.apply(out, f(i, as[i]));\n    }\n    return out;\n}; };\nexports.chainWithIndex = chainWithIndex;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar chop = function (f) { return function (as) {\n    var _a = f(as), b = _a[0], rest = _a[1];\n    var out = [b];\n    var next = rest;\n    while (exports.isNonEmpty(next)) {\n        var _b = f(next), b_1 = _b[0], rest_2 = _b[1];\n        out.push(b_1);\n        next = rest_2;\n    }\n    return out;\n}; };\nexports.chop = chop;\n/**\n * Splits a `NonEmptyArray` into two pieces, the first piece has max `n` elements.\n *\n * @category combinators\n * @since 2.10.0\n */\nvar splitAt = function (n) { return function (as) {\n    var m = Math.max(1, n);\n    return m >= as.length ? [exports.copy(as), []] : [function_1.pipe(as.slice(1, m), exports.prepend(exports.head(as))), as.slice(m)];\n}; };\nexports.splitAt = splitAt;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar chunksOf = function (n) { return exports.chop(exports.splitAt(n)); };\nexports.chunksOf = chunksOf;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.mapWithIndex(f)); };\n/* istanbul ignore next */\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\n/* istanbul ignore next */\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return function_1.pipe(wa, exports.extend(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = exports.foldMapWithIndex(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseWithIndexF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nvar altW = function (that) { return function (as) {\n    return function_1.pipe(as, concatW(that()));\n}; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.6.2\n */\nexports.alt = exports.altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nvar ap = function (as) {\n    return exports.chain(function (f) { return function_1.pipe(as, exports.map(f)); });\n};\nexports.ap = ap;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nvar chain = function (f) {\n    return exports.chainWithIndex(function (_, a) { return f(a); });\n};\nexports.chain = chain;\n/**\n * @category Extend\n * @since 2.0.0\n */\nvar extend = function (f) { return function (as) {\n    var next = exports.tail(as);\n    var out = [f(as)];\n    while (exports.isNonEmpty(next)) {\n        out.push(f(next));\n        next = exports.tail(next);\n    }\n    return out;\n}; };\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nvar map = function (f) { return exports.mapWithIndex(function (_, a) { return f(a); }); };\nexports.map = map;\n/**\n * @category FunctorWithIndex\n * @since 2.0.0\n */\nvar mapWithIndex = function (f) { return function (as) {\n    var out = [f(0, exports.head(as))];\n    for (var i = 1; i < as.length; i++) {\n        out.push(f(i, as[i]));\n    }\n    return out;\n}; };\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexports.reduce = RNEA.reduce;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexports.reduceWithIndex = RNEA.reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexports.reduceRight = RNEA.reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexports.reduceRightWithIndex = RNEA.reduceRightWithIndex;\n/**\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\nexports.traverse = traverse;\n/**\n * @since 2.6.3\n */\nvar sequence = function (F) { return exports.traverseWithIndex(F)(function (_, a) { return a; }); };\nexports.sequence = sequence;\n/**\n * @since 2.6.3\n */\nvar traverseWithIndex = function (F) { return function (f) { return function (as) {\n    var out = F.map(f(0, exports.head(as)), exports.of);\n    for (var i = 1; i < as.length; i++) {\n        out = F.ap(F.map(out, function (bs) { return function (b) { return function_1.pipe(bs, exports.append(b)); }; }), f(i, as[i]));\n    }\n    return out;\n}; }; };\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @since 2.7.0\n */\nexports.extract = RNEA.head;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'NonEmptyArray';\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.getShow = RNEA.getShow;\n/**\n * Builds a `Semigroup` instance for `NonEmptyArray`\n *\n * @category instances\n * @since 2.0.0\n */\nvar getSemigroup = function () { return ({\n    concat: concat\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * @example\n * import { getEq } from 'fp-ts/NonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals([1, 2], [1, 2]), true)\n * assert.strictEqual(E.equals([1, 2], [1, 3]), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexports.getEq = RNEA.getEq;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar getUnionSemigroup = function (E) {\n    var unionE = exports.union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\nexports.getUnionSemigroup = getUnionSemigroup;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#__PURE__*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Comonad = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend,\n    extract: exports.extract\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of(_.emptyRecord);\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.0.0\n */\nexports.head = RNEA.head;\n/**\n * @since 2.0.0\n */\nvar tail = function (as) { return as.slice(1); };\nexports.tail = tail;\n/**\n * @since 2.0.0\n */\nexports.last = RNEA.last;\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.2.0\n */\nvar init = function (as) { return as.slice(0, -1); };\nexports.init = init;\n/**\n * @since 2.0.0\n */\nexports.min = RNEA.min;\n/**\n * @since 2.0.0\n */\nexports.max = RNEA.max;\n/**\n * @since 2.10.0\n */\nvar concatAll = function (S) { return function (as) { return as.reduce(S.concat); }; };\nexports.concatAll = concatAll;\n/**\n * Break an `Array` into its first element and remaining elements.\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchLeft = function (f) { return function (as) { return f(exports.head(as), exports.tail(as)); }; };\nexports.matchLeft = matchLeft;\n/**\n * Break an `Array` into its initial elements and the last element.\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchRight = function (f) { return function (as) {\n    return f(exports.init(as), exports.last(as));\n}; };\nexports.matchRight = matchRight;\n/**\n * Apply a function to the head, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nvar modifyHead = function (f) { return function (as) { return __spreadArray([\n    f(exports.head(as))\n], exports.tail(as)); }; };\nexports.modifyHead = modifyHead;\n/**\n * Change the head, creating a new `NonEmptyArray`.\n *\n * @category combinators\n * @since 2.11.0\n */\nvar updateHead = function (a) { return exports.modifyHead(function () { return a; }); };\nexports.updateHead = updateHead;\n/**\n * Apply a function to the last element, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nvar modifyLast = function (f) { return function (as) {\n    return function_1.pipe(exports.init(as), exports.append(f(exports.last(as))));\n}; };\nexports.modifyLast = modifyLast;\n/**\n * Change the last element, creating a new `NonEmptyArray`.\n *\n * @category combinators\n * @since 2.11.0\n */\nvar updateLast = function (a) { return exports.modifyLast(function () { return a; }); };\nexports.updateLast = updateLast;\n/**\n * Places an element in between members of a `NonEmptyArray`, then folds the results using the provided `Semigroup`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(intercalate(S.Semigroup)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nexports.intercalate = RNEA.intercalate;\nfunction groupSort(O) {\n    var sortO = exports.sort(O);\n    var groupO = group(O);\n    return function (as) { return (exports.isNonEmpty(as) ? groupO(sortO(as)) : []); };\n}\nexports.groupSort = groupSort;\nfunction filter(predicate) {\n    return exports.filterWithIndex(function (_, a) { return predicate(a); });\n}\nexports.filter = filter;\n/**\n * Use [`filterWithIndex`](./Array.ts.html#filterwithindex) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nvar filterWithIndex = function (predicate) { return function (as) { return exports.fromArray(as.filter(function (a, i) { return predicate(i, a); })); }; };\nexports.filterWithIndex = filterWithIndex;\n/**\n * Use [`unprepend`](#unprepend) instead.\n *\n * @category destructors\n * @since 2.9.0\n * @deprecated\n */\nexports.uncons = exports.unprepend;\n/**\n * Use [`unappend`](#unappend) instead.\n *\n * @category destructors\n * @since 2.9.0\n * @deprecated\n */\nexports.unsnoc = exports.unappend;\nfunction cons(head, tail) {\n    return tail === undefined ? exports.prepend(head) : function_1.pipe(tail, exports.prepend(head));\n}\nexports.cons = cons;\n/**\n * Use [`append`](./Array.ts.html#append) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nvar snoc = function (init, end) { return function_1.pipe(init, exports.append(end)); };\nexports.snoc = snoc;\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\nexports.prependToAll = exports.prependAll;\n/**\n * Use [`concatAll`](#concatall) instead.\n *\n * @since 2.5.0\n * @deprecated\n */\nexports.fold = RNEA.concatAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.nonEmptyArray = {\n    URI: exports.URI,\n    of: exports.of,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    ap: _ap,\n    chain: _chain,\n    extend: _extend,\n    extract: exports.extract,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    alt: _alt\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Field = exports.MonoidProduct = exports.MonoidSum = exports.SemigroupProduct = exports.SemigroupSum = exports.MagmaSub = exports.Show = exports.Bounded = exports.Ord = exports.Eq = exports.isNumber = void 0;\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * @category refinements\n * @since 2.11.0\n */\nvar isNumber = function (u) { return typeof u === 'number'; };\nexports.isNumber = isNumber;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Eq = {\n    equals: function (first, second) { return first === second; }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Ord = {\n    equals: exports.Eq.equals,\n    compare: function (first, second) { return (first < second ? -1 : first > second ? 1 : 0); }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Bounded = {\n    equals: exports.Eq.equals,\n    compare: exports.Ord.compare,\n    top: Infinity,\n    bottom: -Infinity\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Show = {\n    show: function (n) { return JSON.stringify(n); }\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.MagmaSub = {\n    concat: function (first, second) { return first - second; }\n};\n/**\n * `number` semigroup under addition.\n *\n * @example\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(SemigroupSum.concat(2, 3), 5)\n *\n * @category instances\n * @since 2.10.0\n */\nexports.SemigroupSum = {\n    concat: function (first, second) { return first + second; }\n};\n/**\n * `number` semigroup under multiplication.\n *\n * @example\n * import { SemigroupProduct } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(SemigroupProduct.concat(2, 3), 6)\n *\n * @category instances\n * @since 2.10.0\n */\nexports.SemigroupProduct = {\n    concat: function (first, second) { return first * second; }\n};\n/**\n * `number` monoid under addition.\n *\n * The `empty` value is `0`.\n *\n * @example\n * import { MonoidSum } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(MonoidSum.concat(2, MonoidSum.empty), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nexports.MonoidSum = {\n    concat: exports.SemigroupSum.concat,\n    empty: 0\n};\n/**\n * `number` monoid under multiplication.\n *\n * The `empty` value is `1`.\n *\n * @example\n * import { MonoidProduct } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(MonoidProduct.concat(2, MonoidProduct.empty), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nexports.MonoidProduct = {\n    concat: exports.SemigroupProduct.concat,\n    empty: 1\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Field = {\n    add: exports.SemigroupSum.concat,\n    zero: 0,\n    mul: exports.SemigroupProduct.concat,\n    one: 1,\n    sub: exports.MagmaSub.concat,\n    degree: function (_) { return 1; },\n    div: function (first, second) { return first / second; },\n    mod: function (first, second) { return first % second; }\n};\n", "\"use strict\";\n/**\n * ```ts\n * interface Separated<E, A> {\n *    readonly left: E\n *    readonly right: A\n * }\n * ```\n *\n * Represents a result of separating a whole into two parts.\n *\n * @since 2.10.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.right = exports.left = exports.flap = exports.Functor = exports.Bifunctor = exports.URI = exports.bimap = exports.mapLeft = exports.map = exports.separated = void 0;\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.10.0\n */\nvar separated = function (left, right) { return ({ left: left, right: right }); };\nexports.separated = separated;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\nvar _mapLeft = function (fa, f) { return function_1.pipe(fa, exports.mapLeft(f)); };\nvar _bimap = function (fa, g, f) { return function_1.pipe(fa, exports.bimap(g, f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.10.0\n */\nvar map = function (f) { return function (fa) {\n    return exports.separated(exports.left(fa), f(exports.right(fa)));\n}; };\nexports.map = map;\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category Bifunctor\n * @since 2.10.0\n */\nvar mapLeft = function (f) { return function (fa) {\n    return exports.separated(f(exports.left(fa)), exports.right(fa));\n}; };\nexports.mapLeft = mapLeft;\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category Bifunctor\n * @since 2.10.0\n */\nvar bimap = function (f, g) { return function (fa) {\n    return exports.separated(f(exports.left(fa)), g(exports.right(fa)));\n}; };\nexports.bimap = bimap;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.URI = 'Separated';\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Bifunctor = {\n    URI: exports.URI,\n    mapLeft: _mapLeft,\n    bimap: _bimap\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#__PURE__*/\nFunctor_1.flap(exports.Functor);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.10.0\n */\nvar left = function (s) { return s.left; };\nexports.left = left;\n/**\n * @since 2.10.0\n */\nvar right = function (s) { return s.right; };\nexports.right = right;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.filterE = exports.witherDefault = exports.wiltDefault = void 0;\nvar _ = __importStar(require(\"./internal\"));\nfunction wiltDefault(T, C) {\n    return function (F) {\n        var traverseF = T.traverse(F);\n        return function (wa, f) { return F.map(traverseF(wa, f), C.separate); };\n    };\n}\nexports.wiltDefault = wiltDefault;\nfunction witherDefault(T, C) {\n    return function (F) {\n        var traverseF = T.traverse(F);\n        return function (wa, f) { return F.map(traverseF(wa, f), C.compact); };\n    };\n}\nexports.witherDefault = witherDefault;\nfunction filterE(W) {\n    return function (F) {\n        var witherF = W.wither(F);\n        return function (predicate) { return function (ga) { return witherF(ga, function (a) { return F.map(predicate(a), function (b) { return (b ? _.some(a) : _.none); }); }); }; };\n    };\n}\nexports.filterE = filterE;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.guard = void 0;\nfunction guard(F, P) {\n    return function (b) { return (b ? P.of(undefined) : F.zero()); };\n}\nexports.guard = guard;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sort = exports.lefts = exports.rights = exports.reverse = exports.modifyAt = exports.deleteAt = exports.updateAt = exports.insertAt = exports.findLastIndex = exports.findLastMap = exports.findLast = exports.findFirstMap = exports.findFirst = exports.findIndex = exports.dropLeftWhile = exports.dropRight = exports.dropLeft = exports.spanLeft = exports.takeLeftWhile = exports.takeRight = exports.takeLeft = exports.init = exports.tail = exports.last = exports.head = exports.lookup = exports.isOutOfBound = exports.size = exports.scanRight = exports.scanLeft = exports.chainWithIndex = exports.foldRight = exports.matchRight = exports.matchRightW = exports.foldLeft = exports.matchLeft = exports.matchLeftW = exports.match = exports.matchW = exports.fromEither = exports.fromOption = exports.fromPredicate = exports.replicate = exports.makeBy = exports.appendW = exports.append = exports.prependW = exports.prepend = exports.isNonEmpty = exports.isEmpty = void 0;\nexports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.foldMap = exports.reduce = exports.foldMapWithIndex = exports.duplicate = exports.extend = exports.filterWithIndex = exports.partitionMapWithIndex = exports.partitionMap = exports.partitionWithIndex = exports.partition = exports.compact = exports.filterMap = exports.filterMapWithIndex = exports.filter = exports.separate = exports.mapWithIndex = exports.map = exports.flatten = exports.chain = exports.ap = exports.alt = exports.altW = exports.zero = exports.of = exports._chainRecBreadthFirst = exports._chainRecDepthFirst = exports.difference = exports.intersection = exports.union = exports.concat = exports.concatW = exports.comprehension = exports.fromOptionK = exports.chunksOf = exports.splitAt = exports.chop = exports.sortBy = exports.uniq = exports.elem = exports.rotate = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = void 0;\nexports.toArray = exports.unsafeDeleteAt = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.fromEitherK = exports.FromEither = exports.filterE = exports.Witherable = exports.ChainRecBreadthFirst = exports.chainRecBreadthFirst = exports.ChainRecDepthFirst = exports.chainRecDepthFirst = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.FilterableWithIndex = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.guard = exports.Zero = exports.Alt = exports.Unfoldable = exports.chainFirst = exports.Monad = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = exports.flap = exports.Functor = exports.getDifferenceMagma = exports.getIntersectionSemigroup = exports.getUnionMonoid = exports.getUnionSemigroup = exports.getOrd = exports.getEq = exports.getMonoid = exports.getSemigroup = exports.getShow = exports.URI = exports.unfold = exports.wilt = exports.wither = exports.traverseWithIndex = void 0;\nexports.readonlyArray = exports.prependToAll = exports.snoc = exports.cons = exports.range = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.intercalate = exports.exists = exports.some = exports.every = exports.empty = exports.fromArray = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar Eq_1 = require(\"./Eq\");\nvar FromEither_1 = require(\"./FromEither\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar N = __importStar(require(\"./number\"));\nvar Ord_1 = require(\"./Ord\");\nvar RNEA = __importStar(require(\"./ReadonlyNonEmptyArray\"));\nvar Separated_1 = require(\"./Separated\");\nvar Witherable_1 = require(\"./Witherable\");\nvar Zero_1 = require(\"./Zero\");\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Test whether a `ReadonlyArray` is empty.\n *\n * @example\n * import { isEmpty } from 'fp-ts/ReadonlyArray'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @category refinements\n * @since 2.5.0\n */\nvar isEmpty = function (as) { return as.length === 0; };\nexports.isEmpty = isEmpty;\n/**\n * Test whether a `ReadonlyArray` is non empty.\n *\n * @category refinements\n * @since 2.5.0\n */\nexports.isNonEmpty = RNEA.isNonEmpty;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Prepend an element to the front of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { prepend } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\nexports.prepend = RNEA.prepend;\n/**\n * Less strict version of [`prepend`](#prepend).\n *\n * @category constructors\n * @since 2.11.0\n */\nexports.prependW = RNEA.prependW;\n/**\n * Append an element to the end of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { append } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\nexports.append = RNEA.append;\n/**\n * Less strict version of [`append`](#append).\n *\n * @category constructors\n * @since 2.11.0\n */\nexports.appendW = RNEA.appendW;\n/**\n * Return a `ReadonlyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyArray'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.5.0\n */\nvar makeBy = function (n, f) { return (n <= 0 ? exports.empty : RNEA.makeBy(f)(n)); };\nexports.makeBy = makeBy;\n/**\n * Create a `ReadonlyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.5.0\n */\nvar replicate = function (n, a) { return exports.makeBy(n, function () { return a; }); };\nexports.replicate = replicate;\nfunction fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? [a] : exports.empty); };\n}\nexports.fromPredicate = fromPredicate;\n// -------------------------------------------------------------------------------------\n// natural transformations\n// -------------------------------------------------------------------------------------\n/**\n * @category natural transformations\n * @since 2.11.0\n */\nvar fromOption = function (ma) { return (_.isNone(ma) ? exports.empty : [ma.value]); };\nexports.fromOption = fromOption;\n/**\n * Transforms an `Either` to a `ReadonlyArray`.\n *\n * @category natural transformations\n * @since 2.11.0\n */\nvar fromEither = function (e) { return (_.isLeft(e) ? exports.empty : [e.right]); };\nexports.fromEither = fromEither;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchW = function (onEmpty, onNonEmpty) { return function (as) { return (exports.isNonEmpty(as) ? onNonEmpty(as) : onEmpty()); }; };\nexports.matchW = matchW;\n/**\n * @category destructors\n * @since 2.11.0\n */\nexports.match = exports.matchW;\n/**\n * Less strict version of [`matchLeft`](#matchleft).\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchLeftW = function (onEmpty, onNonEmpty) { return function (as) { return (exports.isNonEmpty(as) ? onNonEmpty(RNEA.head(as), RNEA.tail(as)) : onEmpty()); }; };\nexports.matchLeftW = matchLeftW;\n/**\n * Break a `ReadonlyArray` into its first element and remaining elements.\n *\n * @example\n * import { matchLeft } from 'fp-ts/ReadonlyArray'\n *\n * const len: <A>(as: ReadonlyArray<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.matchLeft = exports.matchLeftW;\n/**\n * Alias of [`matchLeft`](#matchleft).\n *\n * @category destructors\n * @since 2.5.0\n */\nexports.foldLeft = exports.matchLeft;\n/**\n * Less strict version of [`matchRight`](#matchright).\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchRightW = function (onEmpty, onNonEmpty) { return function (as) { return (exports.isNonEmpty(as) ? onNonEmpty(RNEA.init(as), RNEA.last(as)) : onEmpty()); }; };\nexports.matchRightW = matchRightW;\n/**\n * Break a `ReadonlyArray` into its initial elements and the last element.\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.matchRight = exports.matchRightW;\n/**\n * Alias of [`matchRight`](#matchright).\n *\n * @category destructors\n * @since 2.5.0\n */\nexports.foldRight = exports.matchRight;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category combinators\n * @since 2.7.0\n */\nvar chainWithIndex = function (f) { return function (as) {\n    if (exports.isEmpty(as)) {\n        return exports.empty;\n    }\n    var out = [];\n    for (var i = 0; i < as.length; i++) {\n        out.push.apply(out, f(i, as[i]));\n    }\n    return out;\n}; };\nexports.chainWithIndex = chainWithIndex;\n/**\n * Same as `reduce` but it carries over the intermediate steps.\n *\n * @example\n * import { scanLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar scanLeft = function (b, f) { return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[0] = b;\n    for (var i = 0; i < len; i++) {\n        out[i + 1] = f(out[i], as[i]);\n    }\n    return out;\n}; };\nexports.scanLeft = scanLeft;\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar scanRight = function (b, f) { return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[len] = b;\n    for (var i = len - 1; i >= 0; i--) {\n        out[i] = f(as[i], out[i + 1]);\n    }\n    return out;\n}; };\nexports.scanRight = scanRight;\n/**\n * Calculate the number of elements in a `ReadonlyArray`.\n *\n * @since 2.10.0\n */\nvar size = function (as) { return as.length; };\nexports.size = size;\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.5.0\n */\nexports.isOutOfBound = RNEA.isOutOfBound;\nfunction lookup(i, as) {\n    return as === undefined ? function (as) { return lookup(i, as); } : exports.isOutOfBound(i, as) ? _.none : _.some(as[i]);\n}\nexports.lookup = lookup;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @since 2.5.0\n */\nvar head = function (as) { return (exports.isNonEmpty(as) ? _.some(RNEA.head(as)) : _.none); };\nexports.head = head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @since 2.5.0\n */\nvar last = function (as) { return (exports.isNonEmpty(as) ? _.some(RNEA.last(as)) : _.none); };\nexports.last = last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @since 2.5.0\n */\nvar tail = function (as) {\n    return exports.isNonEmpty(as) ? _.some(RNEA.tail(as)) : _.none;\n};\nexports.tail = tail;\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @since 2.5.0\n */\nvar init = function (as) {\n    return exports.isNonEmpty(as) ? _.some(RNEA.init(as)) : _.none;\n};\nexports.init = init;\n/**\n * Keep only a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.takeLeft(2)), [1, 2])\n *\n * // out of bounds\n * assert.strictEqual(pipe(input, RA.takeLeft(4)), input)\n * assert.strictEqual(pipe(input, RA.takeLeft(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\nvar takeLeft = function (n) { return function (as) {\n    return exports.isOutOfBound(n, as) ? as : n === 0 ? exports.empty : as.slice(0, n);\n}; };\nexports.takeLeft = takeLeft;\n/**\n * Keep only a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.takeRight(2)), [2, 3])\n *\n * // out of bounds\n * assert.strictEqual(pipe(input, RA.takeRight(4)), input)\n * assert.strictEqual(pipe(input, RA.takeRight(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\nvar takeRight = function (n) { return function (as) {\n    return exports.isOutOfBound(n, as) ? as : n === 0 ? exports.empty : as.slice(-n);\n}; };\nexports.takeRight = takeRight;\nfunction takeLeftWhile(predicate) {\n    return function (as) {\n        var out = [];\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            if (!predicate(a)) {\n                break;\n            }\n            out.push(a);\n        }\n        var len = out.length;\n        return len === as.length ? as : len === 0 ? exports.empty : out;\n    };\n}\nexports.takeLeftWhile = takeLeftWhile;\nvar spanLeftIndex = function (as, predicate) {\n    var l = as.length;\n    var i = 0;\n    for (; i < l; i++) {\n        if (!predicate(as[i])) {\n            break;\n        }\n    }\n    return i;\n};\nfunction spanLeft(predicate) {\n    return function (as) {\n        var _a = exports.splitAt(spanLeftIndex(as, predicate))(as), init = _a[0], rest = _a[1];\n        return { init: init, rest: rest };\n    };\n}\nexports.spanLeft = spanLeft;\n/**\n * Drop a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.dropLeft(2)), [3])\n * assert.strictEqual(pipe(input, RA.dropLeft(0)), input)\n * assert.strictEqual(pipe(input, RA.dropLeft(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\nvar dropLeft = function (n) { return function (as) {\n    return n <= 0 || exports.isEmpty(as) ? as : n >= as.length ? exports.empty : as.slice(n, as.length);\n}; };\nexports.dropLeft = dropLeft;\n/**\n * Drop a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.dropRight(2)), [1])\n * assert.strictEqual(pipe(input, RA.dropRight(0)), input)\n * assert.strictEqual(pipe(input, RA.dropRight(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\nvar dropRight = function (n) { return function (as) {\n    return n <= 0 || exports.isEmpty(as) ? as : n >= as.length ? exports.empty : as.slice(0, as.length - n);\n}; };\nexports.dropRight = dropRight;\nfunction dropLeftWhile(predicate) {\n    return function (as) {\n        var i = spanLeftIndex(as, predicate);\n        return i === 0 ? as : i === as.length ? exports.empty : as.slice(i);\n    };\n}\nexports.dropLeftWhile = dropLeftWhile;\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.5.0\n */\nvar findIndex = function (predicate) { return function (as) {\n    for (var i = 0; i < as.length; i++) {\n        if (predicate(as[i])) {\n            return _.some(i);\n        }\n    }\n    return _.none;\n}; };\nexports.findIndex = findIndex;\nfunction findFirst(predicate) {\n    return function (as) {\n        for (var i = 0; i < as.length; i++) {\n            if (predicate(as[i])) {\n                return _.some(as[i]);\n            }\n        }\n        return _.none;\n    };\n}\nexports.findFirst = findFirst;\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @since 2.5.0\n */\nvar findFirstMap = function (f) { return function (as) {\n    for (var i = 0; i < as.length; i++) {\n        var out = f(as[i]);\n        if (_.isSome(out)) {\n            return out;\n        }\n    }\n    return _.none;\n}; };\nexports.findFirstMap = findFirstMap;\nfunction findLast(predicate) {\n    return function (as) {\n        for (var i = as.length - 1; i >= 0; i--) {\n            if (predicate(as[i])) {\n                return _.some(as[i]);\n            }\n        }\n        return _.none;\n    };\n}\nexports.findLast = findLast;\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @since 2.5.0\n */\nvar findLastMap = function (f) { return function (as) {\n    for (var i = as.length - 1; i >= 0; i--) {\n        var out = f(as[i]);\n        if (_.isSome(out)) {\n            return out;\n        }\n    }\n    return _.none;\n}; };\nexports.findLastMap = findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   readonly a: number\n *   readonly b: number\n * }\n * const xs: ReadonlyArray<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.5.0\n */\nvar findLastIndex = function (predicate) { return function (as) {\n    for (var i = as.length - 1; i >= 0; i--) {\n        if (predicate(as[i])) {\n            return _.some(i);\n        }\n    }\n    return _.none;\n}; };\nexports.findLastIndex = findLastIndex;\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/ReadonlyArray'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.5.0\n */\nvar insertAt = function (i, a) { return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(RNEA.unsafeInsertAt(i, a, as));\n}; };\nexports.insertAt = insertAt;\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.5.0\n */\nvar updateAt = function (i, a) {\n    return exports.modifyAt(i, function () { return a; });\n};\nexports.updateAt = updateAt;\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.5.0\n */\nvar deleteAt = function (i) { return function (as) {\n    return exports.isOutOfBound(i, as) ? _.none : _.some(exports.unsafeDeleteAt(i, as));\n}; };\nexports.deleteAt = deleteAt;\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.5.0\n */\nvar modifyAt = function (i, f) { return function (as) {\n    return exports.isOutOfBound(i, as) ? _.none : _.some(exports.unsafeUpdateAt(i, f(as[i]), as));\n}; };\nexports.modifyAt = modifyAt;\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar reverse = function (as) { return (as.length <= 1 ? as : as.slice().reverse()); };\nexports.reverse = reverse;\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/ReadonlyArray'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar rights = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Right') {\n            r.push(a.right);\n        }\n    }\n    return r;\n};\nexports.rights = rights;\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/ReadonlyArray'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar lefts = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Left') {\n            r.push(a.left);\n        }\n    }\n    return r;\n};\nexports.lefts = lefts;\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar sort = function (O) { return function (as) {\n    return as.length <= 1 ? as : as.slice().sort(O.compare);\n}; };\nexports.sort = sort;\n// TODO: curry and make data-last in v3\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar zipWith = function (fa, fb, f) {\n    var fc = [];\n    var len = Math.min(fa.length, fb.length);\n    for (var i = 0; i < len; i++) {\n        fc[i] = f(fa[i], fb[i]);\n    }\n    return fc;\n};\nexports.zipWith = zipWith;\nfunction zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return exports.zipWith(as, bs, function (a, b) { return [a, b]; });\n}\nexports.zip = zip;\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar unzip = function (as) {\n    var fa = [];\n    var fb = [];\n    for (var i = 0; i < as.length; i++) {\n        fa[i] = as[i][0];\n        fb[i] = as[i][1];\n    }\n    return [fa, fb];\n};\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\nvar prependAll = function (middle) {\n    var f = RNEA.prependAll(middle);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : as); };\n};\nexports.prependAll = prependAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nvar intersperse = function (middle) {\n    var f = RNEA.intersperse(middle);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : as); };\n};\nexports.intersperse = intersperse;\n/**\n * Rotate a `ReadonlyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar rotate = function (n) {\n    var f = RNEA.rotate(n);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : as); };\n};\nexports.rotate = rotate;\nfunction elem(E) {\n    return function (a, as) {\n        if (as === undefined) {\n            var elemE_1 = elem(E);\n            return function (as) { return elemE_1(a, as); };\n        }\n        var predicate = function (element) { return E.equals(element, a); };\n        var i = 0;\n        for (; i < as.length; i++) {\n            if (predicate(as[i])) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\nexports.elem = elem;\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar uniq = function (E) {\n    var f = RNEA.uniq(E);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : as); };\n};\nexports.uniq = uniq;\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/ReadonlyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar sortBy = function (ords) {\n    var f = RNEA.sortBy(ords);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : as); };\n};\nexports.sortBy = sortBy;\n/**\n * A useful recursion pattern for processing a `ReadonlyArray` to produce a new `ReadonlyArray`, often used for \"chopping\" up the input\n * `ReadonlyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyArray` and produce a\n * value and the tail of the `ReadonlyArray`.\n *\n * @example\n * import { Eq } from 'fp-ts/Eq'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * const group = <A>(S: Eq<A>): ((as: ReadonlyArray<A>) => ReadonlyArray<ReadonlyArray<A>>) => {\n *   return RA.chop(as => {\n *     const { init, rest } = pipe(as, RA.spanLeft((a: A) => S.equals(a, as[0])))\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar chop = function (f) {\n    var g = RNEA.chop(f);\n    return function (as) { return (exports.isNonEmpty(as) ? g(as) : exports.empty); };\n};\nexports.chop = chop;\n/**\n * Splits a `ReadonlyArray` into two pieces, the first piece has max `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar splitAt = function (n) { return function (as) {\n    return n >= 1 && exports.isNonEmpty(as) ? RNEA.splitAt(n)(as) : exports.isEmpty(as) ? [as, exports.empty] : [exports.empty, as];\n}; };\nexports.splitAt = splitAt;\n/**\n * Splits a `ReadonlyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `ReadonlyArray`. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that:\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `as`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar chunksOf = function (n) {\n    var f = RNEA.chunksOf(n);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : exports.empty); };\n};\nexports.chunksOf = chunksOf;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar fromOptionK = function (f) { return function () {\n    var a = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        a[_i] = arguments[_i];\n    }\n    return exports.fromOption(f.apply(void 0, a));\n}; };\nexports.fromOptionK = fromOptionK;\nfunction comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    var go = function (scope, input) {\n        return exports.isNonEmpty(input)\n            ? function_1.pipe(RNEA.head(input), exports.chain(function (x) { return go(function_1.pipe(scope, exports.append(x)), RNEA.tail(input)); }))\n            : g.apply(void 0, scope) ? [f.apply(void 0, scope)]\n                : exports.empty;\n    };\n    return go(exports.empty, input);\n}\nexports.comprehension = comprehension;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar concatW = function (second) { return function (first) {\n    return exports.isEmpty(first) ? second : exports.isEmpty(second) ? first : first.concat(second);\n}; };\nexports.concatW = concatW;\n/**\n * @category combinators\n * @since 2.11.0\n */\nexports.concat = exports.concatW;\nfunction union(E) {\n    var unionE = RNEA.union(E);\n    return function (first, second) {\n        if (second === undefined) {\n            var unionE_1 = union(E);\n            return function (second) { return unionE_1(second, first); };\n        }\n        return exports.isNonEmpty(first) && exports.isNonEmpty(second) ? unionE(second)(first) : exports.isNonEmpty(first) ? first : second;\n    };\n}\nexports.union = union;\nfunction intersection(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (ys) { return intersectionE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return elemE(a, ys); });\n    };\n}\nexports.intersection = intersection;\nfunction difference(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var differenceE_1 = difference(E);\n            return function (ys) { return differenceE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return !elemE(a, ys); });\n    };\n}\nexports.difference = difference;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\nvar _mapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.mapWithIndex(f)); };\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\nvar _filter = function (fa, predicate) {\n    return function_1.pipe(fa, exports.filter(predicate));\n};\nvar _filterMap = function (fa, f) { return function_1.pipe(fa, exports.filterMap(f)); };\nvar _partition = function (fa, predicate) {\n    return function_1.pipe(fa, exports.partition(predicate));\n};\nvar _partitionMap = function (fa, f) { return function_1.pipe(fa, exports.partitionMap(f)); };\nvar _partitionWithIndex = function (fa, predicateWithIndex) { return function_1.pipe(fa, exports.partitionWithIndex(predicateWithIndex)); };\nvar _partitionMapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.partitionMapWithIndex(f)); };\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\nvar _foldMap = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\nvar _reduceWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceWithIndex(b, f));\n};\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = exports.foldMapWithIndex(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapWithIndexM(f)); };\n};\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\nvar _filterMapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.filterMapWithIndex(f)); };\nvar _filterWithIndex = function (fa, predicateWithIndex) { return function_1.pipe(fa, exports.filterWithIndex(predicateWithIndex)); };\nvar _extend = function (fa, f) { return function_1.pipe(fa, exports.extend(f)); };\nvar _traverse = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseWithIndexF(f)); };\n};\n/** @internal */\nvar _chainRecDepthFirst = function (a, f) { return function_1.pipe(a, exports.chainRecDepthFirst(f)); };\nexports._chainRecDepthFirst = _chainRecDepthFirst;\n/** @internal */\nvar _chainRecBreadthFirst = function (a, f) { return function_1.pipe(a, exports.chainRecBreadthFirst(f)); };\nexports._chainRecBreadthFirst = _chainRecBreadthFirst;\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Pointed\n * @since 2.5.0\n */\nexports.of = RNEA.of;\n/**\n * @category Zero\n * @since 2.7.0\n */\nvar zero = function () { return exports.empty; };\nexports.zero = zero;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nvar altW = function (that) { return function (fa) {\n    return fa.concat(that());\n}; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.5.0\n */\nexports.alt = exports.altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.5.0\n */\nvar ap = function (fa) {\n    return exports.chain(function (f) { return function_1.pipe(fa, exports.map(f)); });\n};\nexports.ap = ap;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\nvar chain = function (f) { return function (ma) {\n    return function_1.pipe(ma, exports.chainWithIndex(function (_, a) { return f(a); }));\n}; };\nexports.chain = chain;\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\nvar map = function (f) { return function (fa) {\n    return fa.map(function (a) { return f(a); });\n}; };\nexports.map = map;\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\nvar mapWithIndex = function (f) { return function (fa) { return fa.map(function (a, i) { return f(i, a); }); }; };\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category Compactable\n * @since 2.5.0\n */\nvar separate = function (fa) {\n    var left = [];\n    var right = [];\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var e = fa_1[_i];\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return Separated_1.separated(left, right);\n};\nexports.separate = separate;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar filter = function (predicate) { return function (as) { return as.filter(predicate); }; };\nexports.filter = filter;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar filterMapWithIndex = function (f) { return function (fa) {\n    var out = [];\n    for (var i = 0; i < fa.length; i++) {\n        var optionB = f(i, fa[i]);\n        if (_.isSome(optionB)) {\n            out.push(optionB.value);\n        }\n    }\n    return out;\n}; };\nexports.filterMapWithIndex = filterMapWithIndex;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar filterMap = function (f) {\n    return exports.filterMapWithIndex(function (_, a) { return f(a); });\n};\nexports.filterMap = filterMap;\n/**\n * @category Compactable\n * @since 2.5.0\n */\nexports.compact = \n/*#__PURE__*/\nexports.filterMap(function_1.identity);\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar partition = function (predicate) {\n    return exports.partitionWithIndex(function (_, a) { return predicate(a); });\n};\nexports.partition = partition;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar partitionWithIndex = function (predicateWithIndex) { return function (as) {\n    var left = [];\n    var right = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (predicateWithIndex(i, a)) {\n            right.push(a);\n        }\n        else {\n            left.push(a);\n        }\n    }\n    return Separated_1.separated(left, right);\n}; };\nexports.partitionWithIndex = partitionWithIndex;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar partitionMap = function (f) {\n    return exports.partitionMapWithIndex(function (_, a) { return f(a); });\n};\nexports.partitionMap = partitionMap;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar partitionMapWithIndex = function (f) { return function (fa) {\n    var left = [];\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n        var e = f(i, fa[i]);\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return Separated_1.separated(left, right);\n}; };\nexports.partitionMapWithIndex = partitionMapWithIndex;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar filterWithIndex = function (predicateWithIndex) { return function (as) {\n    return as.filter(function (a, i) { return predicateWithIndex(i, a); });\n}; };\nexports.filterWithIndex = filterWithIndex;\n/**\n * @category Extend\n * @since 2.5.0\n */\nvar extend = function (f) { return function (wa) { return wa.map(function (_, i) { return f(wa.slice(i)); }); }; };\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar foldMapWithIndex = function (M) { return function (f) { return function (fa) {\n    return fa.reduce(function (b, a, i) { return M.concat(b, f(i, a)); }, M.empty);\n}; }; };\nexports.foldMapWithIndex = foldMapWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar reduce = function (b, f) {\n    return exports.reduceWithIndex(b, function (_, b, a) { return f(b, a); });\n};\nexports.reduce = reduce;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar foldMap = function (M) {\n    var foldMapWithIndexM = exports.foldMapWithIndex(M);\n    return function (f) { return foldMapWithIndexM(function (_, a) { return f(a); }); };\n};\nexports.foldMap = foldMap;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar reduceWithIndex = function (b, f) { return function (fa) {\n    var len = fa.length;\n    var out = b;\n    for (var i = 0; i < len; i++) {\n        out = f(i, out, fa[i]);\n    }\n    return out;\n}; };\nexports.reduceWithIndex = reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar reduceRight = function (b, f) {\n    return exports.reduceRightWithIndex(b, function (_, a, b) { return f(a, b); });\n};\nexports.reduceRight = reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar reduceRightWithIndex = function (b, f) { return function (fa) { return fa.reduceRight(function (b, a, i) { return f(i, a, b); }, b); }; };\nexports.reduceRightWithIndex = reduceRightWithIndex;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\nexports.traverse = traverse;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nvar sequence = function (F) { return function (ta) {\n    return _reduce(ta, F.of(exports.zero()), function (fas, fa) {\n        return F.ap(F.map(fas, function (as) { return function (a) { return function_1.pipe(as, exports.append(a)); }; }), fa);\n    });\n}; };\nexports.sequence = sequence;\n/**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\nvar traverseWithIndex = function (F) { return function (f) {\n    return exports.reduceWithIndex(F.of(exports.zero()), function (i, fbs, a) {\n        return F.ap(F.map(fbs, function (bs) { return function (b) { return function_1.pipe(bs, exports.append(b)); }; }), f(i, a));\n    });\n}; };\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wither = function (F) {\n    var _witherF = _wither(F);\n    return function (f) { return function (fa) { return _witherF(fa, f); }; };\n};\nexports.wither = wither;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wilt = function (F) {\n    var _wiltF = _wilt(F);\n    return function (f) { return function (fa) { return _wiltF(fa, f); }; };\n};\nexports.wilt = wilt;\n/**\n * @category Unfoldable\n * @since 2.6.6\n */\nvar unfold = function (b, f) {\n    var out = [];\n    var bb = b;\n    while (true) {\n        var mt = f(bb);\n        if (_.isSome(mt)) {\n            var _a = mt.value, a = _a[0], b_1 = _a[1];\n            out.push(a);\n            bb = b_1;\n        }\n        else {\n            break;\n        }\n    }\n    return out;\n};\nexports.unfold = unfold;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.5.0\n */\nexports.URI = 'ReadonlyArray';\n/**\n * @category instances\n * @since 2.5.0\n */\nvar getShow = function (S) { return ({\n    show: function (as) { return \"[\" + as.map(S.show).join(', ') + \"]\"; }\n}); };\nexports.getShow = getShow;\n/**\n * @category instances\n * @since 2.5.0\n */\nvar getSemigroup = function () { return ({\n    concat: function (first, second) { return (exports.isEmpty(first) ? second : exports.isEmpty(second) ? first : first.concat(second)); }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * Returns a `Monoid` for `ReadonlyArray<A>`.\n *\n * @example\n * import { getMonoid } from 'fp-ts/ReadonlyArray'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.5.0\n */\nvar getMonoid = function () { return ({\n    concat: exports.getSemigroup().concat,\n    empty: exports.empty\n}); };\nexports.getMonoid = getMonoid;\n/**\n * Derives an `Eq` over the `ReadonlyArray` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { getEq } from 'fp-ts/ReadonlyArray'\n *\n * const E = getEq(S.Eq)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.5.0\n */\nvar getEq = function (E) {\n    return Eq_1.fromEquals(function (xs, ys) { return xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); }); });\n};\nexports.getEq = getEq;\n/**\n * Derives an `Ord` over the `ReadonlyArray` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/ReadonlyArray'\n * import * as S from 'fp-ts/string'\n *\n * const O = getOrd(S.Ord)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n *\n * @category instances\n * @since 2.5.0\n */\nvar getOrd = function (O) {\n    return Ord_1.fromCompare(function (a, b) {\n        var aLen = a.length;\n        var bLen = b.length;\n        var len = Math.min(aLen, bLen);\n        for (var i = 0; i < len; i++) {\n            var ordering = O.compare(a[i], b[i]);\n            if (ordering !== 0) {\n                return ordering;\n            }\n        }\n        return N.Ord.compare(aLen, bLen);\n    });\n};\nexports.getOrd = getOrd;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getUnionSemigroup = function (E) {\n    var unionE = union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\nexports.getUnionSemigroup = getUnionSemigroup;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getUnionMonoid = function (E) { return ({\n    concat: exports.getUnionSemigroup(E).concat,\n    empty: exports.empty\n}); };\nexports.getUnionMonoid = getUnionMonoid;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getIntersectionSemigroup = function (E) {\n    var intersectionE = intersection(E);\n    return {\n        concat: function (first, second) { return intersectionE(second)(first); }\n    };\n};\nexports.getIntersectionSemigroup = getIntersectionSemigroup;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getDifferenceMagma = function (E) {\n    var differenceE = difference(E);\n    return {\n        concat: function (first, second) { return differenceE(second)(first); }\n    };\n};\nexports.getDifferenceMagma = getDifferenceMagma;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#__PURE__*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Unfoldable = {\n    URI: exports.URI,\n    unfold: exports.unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.Zero = {\n    URI: exports.URI,\n    zero: exports.zero\n};\n/**\n * @category constructors\n * @since 2.11.0\n */\nexports.guard = \n/*#__PURE__*/\nZero_1.guard(exports.Zero, exports.Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alternative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    alt: _alt,\n    zero: exports.zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Compactable = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Filterable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FilterableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category ChainRec\n * @since 2.11.0\n */\nvar chainRecDepthFirst = function (f) { return function (a) {\n    var todo = __spreadArray([], f(a));\n    var out = [];\n    while (todo.length > 0) {\n        var e = todo.shift();\n        if (_.isLeft(e)) {\n            todo.unshift.apply(todo, f(e.left));\n        }\n        else {\n            out.push(e.right);\n        }\n    }\n    return out;\n}; };\nexports.chainRecDepthFirst = chainRecDepthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.ChainRecDepthFirst = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: exports._chainRecDepthFirst\n};\n/**\n * @category ChainRec\n * @since 2.11.0\n */\nvar chainRecBreadthFirst = function (f) { return function (a) {\n    var initial = f(a);\n    var todo = [];\n    var out = [];\n    function go(e) {\n        if (_.isLeft(e)) {\n            f(e.left).forEach(function (v) { return todo.push(v); });\n        }\n        else {\n            out.push(e.right);\n        }\n    }\n    for (var _i = 0, initial_1 = initial; _i < initial_1.length; _i++) {\n        var e = initial_1[_i];\n        go(e);\n    }\n    while (todo.length > 0) {\n        go(todo.shift());\n    }\n    return out;\n}; };\nexports.chainRecBreadthFirst = chainRecBreadthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.ChainRecBreadthFirst = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: exports._chainRecBreadthFirst\n};\nvar _wither = \n/*#__PURE__*/\nWitherable_1.witherDefault(exports.Traversable, exports.Compactable);\nvar _wilt = \n/*#__PURE__*/\nWitherable_1.wiltDefault(exports.Traversable, exports.Compactable);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Witherable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * Filter values inside a context.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as T from 'fp-ts/Task'\n *\n * const filterE = RA.filterE(T.ApplicativePar)\n * async function test() {\n *   assert.deepStrictEqual(\n *     await pipe(\n *       [-1, 2, 3],\n *       filterE((n) => T.of(n > 0))\n *     )(),\n *     [2, 3]\n *   )\n * }\n * test()\n *\n * @since 2.11.0\n */\nexports.filterE = \n/*#__PURE__*/\nWitherable_1.filterE(exports.Witherable);\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.FromEither = {\n    URI: exports.URI,\n    fromEither: exports.fromEither\n};\n/**\n * @category combinators\n * @since 2.11.0\n */\nexports.fromEitherK = \n/*#__PURE__*/\nFromEither_1.fromEitherK(exports.FromEither);\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexports.unsafeInsertAt = RNEA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\nvar unsafeUpdateAt = function (i, a, as) {\n    return exports.isNonEmpty(as) ? RNEA.unsafeUpdateAt(i, a, as) : as;\n};\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\nvar unsafeDeleteAt = function (i, as) {\n    var xs = as.slice();\n    xs.splice(i, 1);\n    return xs;\n};\nexports.unsafeDeleteAt = unsafeDeleteAt;\n// -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n/**\n * @category interop\n * @since 2.5.0\n */\nvar toArray = function (as) { return as.slice(); };\nexports.toArray = toArray;\n/**\n * @category interop\n * @since 2.5.0\n */\nvar fromArray = function (as) { return (exports.isEmpty(as) ? exports.empty : as.slice()); };\nexports.fromArray = fromArray;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * An empty array\n *\n * @since 2.5.0\n */\nexports.empty = RNEA.empty;\nfunction every(predicate) {\n    return function (as) { return as.every(predicate); };\n}\nexports.every = every;\n/**\n * Check if a predicate holds true for any array member.\n *\n * @example\n * import { some } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([-1, -2, 3], some(isPositive)), true)\n * assert.deepStrictEqual(pipe([-1, -2, -3], some(isPositive)), false)\n *\n * @since 2.9.0\n */\nvar some = function (predicate) { return function (as) {\n    return as.some(predicate);\n}; };\nexports.some = some;\n/**\n * Alias of [`some`](#some)\n *\n * @since 2.11.0\n */\nexports.exists = exports.some;\n/**\n * Places an element in between members of a `ReadonlyArray`, then folds the results using the provided `Monoid`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intercalate(S.Monoid)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nvar intercalate = function (M) {\n    var intercalateM = RNEA.intercalate(M);\n    return function (middle) { return exports.match(function () { return M.empty; }, intercalateM(middle)); };\n};\nexports.intercalate = intercalate;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of(_.emptyRecord);\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n/**\n * Use `ReadonlyNonEmptyArray` module instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\nexports.range = RNEA.range;\n/**\n * Use [`prepend`](#prepend) instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\nexports.cons = RNEA.cons;\n/**\n * Use [`append`](#append) instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\nexports.snoc = RNEA.snoc;\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\nexports.prependToAll = exports.prependAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.5.0\n * @deprecated\n */\nexports.readonlyArray = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    mapWithIndex: _mapWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    alt: _alt,\n    zero: exports.zero,\n    unfold: exports.unfold,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    extend: _extend,\n    wither: _wither,\n    wilt: _wilt\n};\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.lefts = exports.rights = exports.reverse = exports.modifyAt = exports.deleteAt = exports.updateAt = exports.insertAt = exports.copy = exports.findLastIndex = exports.findLastMap = exports.findLast = exports.findFirstMap = exports.findFirst = exports.findIndex = exports.dropLeftWhile = exports.dropRight = exports.dropLeft = exports.spanLeft = exports.takeLeftWhile = exports.takeRight = exports.takeLeft = exports.init = exports.tail = exports.last = exports.head = exports.lookup = exports.isOutOfBound = exports.size = exports.scanRight = exports.scanLeft = exports.chainWithIndex = exports.foldRight = exports.matchRight = exports.matchRightW = exports.foldLeft = exports.matchLeft = exports.matchLeftW = exports.match = exports.matchW = exports.fromEither = exports.fromOption = exports.fromPredicate = exports.replicate = exports.makeBy = exports.appendW = exports.append = exports.prependW = exports.prepend = exports.isNonEmpty = exports.isEmpty = void 0;\nexports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.reduce = exports.foldMapWithIndex = exports.foldMap = exports.duplicate = exports.extend = exports.filterWithIndex = exports.alt = exports.altW = exports.partitionMapWithIndex = exports.partitionMap = exports.partitionWithIndex = exports.partition = exports.filter = exports.separate = exports.compact = exports.filterMap = exports.filterMapWithIndex = exports.mapWithIndex = exports.flatten = exports.chain = exports.ap = exports.map = exports.zero = exports.of = exports.difference = exports.intersection = exports.union = exports.concat = exports.concatW = exports.comprehension = exports.fromOptionK = exports.chunksOf = exports.splitAt = exports.chop = exports.sortBy = exports.uniq = exports.elem = exports.rotate = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = exports.sort = void 0;\nexports.some = exports.every = exports.unsafeDeleteAt = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.fromEitherK = exports.FromEither = exports.filterE = exports.ChainRecBreadthFirst = exports.chainRecBreadthFirst = exports.ChainRecDepthFirst = exports.chainRecDepthFirst = exports.Witherable = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.FilterableWithIndex = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.guard = exports.Zero = exports.Alt = exports.Unfoldable = exports.Monad = exports.chainFirst = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = exports.flap = exports.Functor = exports.getDifferenceMagma = exports.getIntersectionSemigroup = exports.getUnionMonoid = exports.getUnionSemigroup = exports.getOrd = exports.getEq = exports.getMonoid = exports.getSemigroup = exports.getShow = exports.URI = exports.unfold = exports.wilt = exports.wither = void 0;\nexports.array = exports.prependToAll = exports.snoc = exports.cons = exports.empty = exports.range = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.intercalate = exports.exists = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar FromEither_1 = require(\"./FromEither\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar NEA = __importStar(require(\"./NonEmptyArray\"));\nvar RA = __importStar(require(\"./ReadonlyArray\"));\nvar Separated_1 = require(\"./Separated\");\nvar Witherable_1 = require(\"./Witherable\");\nvar Zero_1 = require(\"./Zero\");\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Test whether an array is empty\n *\n * @example\n * import { isEmpty } from 'fp-ts/Array'\n *\n * assert.strictEqual(isEmpty([]), true)\n * assert.strictEqual(isEmpty(['a']), false)\n *\n * @category refinements\n * @since 2.0.0\n */\nvar isEmpty = function (as) { return as.length === 0; };\nexports.isEmpty = isEmpty;\n/**\n * Test whether an array is non empty narrowing down the type to `NonEmptyArray<A>`\n *\n * @example\n * import { isNonEmpty } from 'fp-ts/Array'\n *\n * assert.strictEqual(isNonEmpty([]), false)\n * assert.strictEqual(isNonEmpty(['a']), true)\n *\n * @category refinements\n * @since 2.0.0\n */\nexports.isNonEmpty = NEA.isNonEmpty;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Prepend an element to the front of a `Array`, creating a new `NonEmptyArray`.\n *\n * @example\n * import { prepend } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\nexports.prepend = NEA.prepend;\n/**\n * Less strict version of [`prepend`](#prepend).\n *\n * @example\n * import { prependW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prependW(\"a\")), [\"a\", 2, 3, 4]);\n *\n * @category constructors\n * @since 2.11.0\n */\nexports.prependW = NEA.prependW;\n/**\n * Append an element to the end of a `Array`, creating a new `NonEmptyArray`.\n *\n * @example\n * import { append } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\nexports.append = NEA.append;\n/**\n * Less strict version of [`append`](#append).\n *\n * @example\n * import { appendW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], appendW(\"d\")), [1, 2, 3, \"d\"]);\n *\n * @category constructors\n * @since 2.11.0\n */\nexports.appendW = NEA.appendW;\n/**\n * Return a `Array` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { makeBy } from 'fp-ts/Array'\n *\n * const double = (i: number): number => i * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n * assert.deepStrictEqual(makeBy(-3, double), [])\n * assert.deepStrictEqual(makeBy(4.32164, double), [0, 2, 4, 6])\n *\n * @category constructors\n * @since 2.0.0\n */\nvar makeBy = function (n, f) { return (n <= 0 ? [] : NEA.makeBy(f)(n)); };\nexports.makeBy = makeBy;\n/**\n * Create a `Array` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { replicate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n * assert.deepStrictEqual(replicate(-3, 'a'), [])\n * assert.deepStrictEqual(replicate(2.985647, 'a'), ['a', 'a'])\n *\n * @category constructors\n * @since 2.0.0\n */\nvar replicate = function (n, a) { return exports.makeBy(n, function () { return a; }); };\nexports.replicate = replicate;\nfunction fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? [a] : []); };\n}\nexports.fromPredicate = fromPredicate;\n// -------------------------------------------------------------------------------------\n// natural transformations\n// -------------------------------------------------------------------------------------\n/**\n * Create an array from an `Option`. The resulting array will contain the content of the\n * `Option` if it is `Some` and it will be empty if the `Option` is `None`.\n *\n * @example\n * import { fromOption } from 'fp-ts/Array'\n * import { option } from \"fp-ts\";\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(option.some(\"a\"), fromOption),[\"a\"])\n * assert.deepStrictEqual(pipe(option.none, fromOption),[])\n *\n * @category natural transformations\n * @since 2.11.0\n */\nvar fromOption = function (ma) { return (_.isNone(ma) ? [] : [ma.value]); };\nexports.fromOption = fromOption;\n/**\n * Create an array from an `Either`. The resulting array will contain the content of the\n * `Either` if it is `Right` and it will be empty if the `Either` is `Left`.\n *\n * @example\n * import { fromEither } from 'fp-ts/Array'\n * import { either } from \"fp-ts\";\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(either.right(\"r\"), fromEither), [\"r\"]);\n * assert.deepStrictEqual(pipe(either.left(\"l\"), fromEither), []);\n *\n * @category natural transformations\n * @since 2.11.0\n */\nvar fromEither = function (e) { return (_.isLeft(e) ? [] : [e.right]); };\nexports.fromEither = fromEither;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`match`](#match). It will work when `onEmpty` and `onNonEmpty`\n * have different return types.\n *\n * @example\n * import { matchW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const matcherW = matchW(\n *   () => \"No elements\",\n *   (as) => as.length\n * );\n * assert.deepStrictEqual(pipe([1, 2, 3, 4], matcherW), 4);\n * assert.deepStrictEqual(pipe([], matcherW), \"No elements\");\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchW = function (onEmpty, onNonEmpty) { return function (as) {\n    return exports.isNonEmpty(as) ? onNonEmpty(as) : onEmpty();\n}; };\nexports.matchW = matchW;\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` and returns the result.\n *\n * @example\n * import { match } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const matcher = match(\n *   () => \"No elements\",\n *   (as) => `Found ${as.length} element(s)`\n * );\n * assert.deepStrictEqual(pipe([1, 2, 3, 4], matcher), \"Found 4 element(s)\");\n * assert.deepStrictEqual(pipe([], matcher), \"No elements\");\n *\n * @category destructors\n * @since 2.11.0\n */\nexports.match = exports.matchW;\n/**\n * Less strict version of [`matchLeft`](#matchleft). It will work when `onEmpty` and\n * `onNonEmpty` have different return types.\n *\n * @example\n * import { matchLeftW } from 'fp-ts/Array'\n *\n * const f = matchLeftW(\n *   () => 0,\n *   (head: string, tail: string[]) => `Found \"${head}\" followed by ${tail.length} elements`\n * );\n * assert.strictEqual(f([\"a\", \"b\", \"c\"]), 'Found \"a\" followed by 2 elements');\n * assert.strictEqual(f([]), 0);\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchLeftW = function (onEmpty, onNonEmpty) { return function (as) { return (exports.isNonEmpty(as) ? onNonEmpty(NEA.head(as), NEA.tail(as)) : onEmpty()); }; };\nexports.matchLeftW = matchLeftW;\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` broken into its first element and remaining elements.\n *\n * @example\n * import { matchLeft } from 'fp-ts/Array'\n *\n * const len: <A>(as: Array<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.matchLeft = exports.matchLeftW;\n/**\n * Alias of [`matchLeft`](#matchleft).\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.foldLeft = exports.matchLeft;\n/**\n * Less strict version of [`matchRight`](#matchright). It will work when `onEmpty` and\n * `onNonEmpty` have different return types.\n *\n * @example\n * import { matchRightW } from 'fp-ts/Array'\n *\n * const f = matchRightW(\n *   () => 0,\n *   (head: string[], tail: string) => `Found ${head.length} elements folllowed by \"${tail}\"`\n * );\n * assert.strictEqual(f([\"a\", \"b\", \"c\"]), 'Found 2 elements folllowed by \"c\"');\n * assert.strictEqual(f([]), 0);\n *\n * @category destructors\n * @since 2.11.0\n */\nvar matchRightW = function (onEmpty, onNonEmpty) { return function (as) { return (exports.isNonEmpty(as) ? onNonEmpty(NEA.init(as), NEA.last(as)) : onEmpty()); }; };\nexports.matchRightW = matchRightW;\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` broken  into its initial elements and the last element.\n *\n * @example\n * import { matchRight } from 'fp-ts/Array'\n *\n * const len: <A>(as: Array<A>) => number = matchRight(\n *   () => 0,\n *   (head, _) => 1 + len(head)\n * );\n * assert.strictEqual(len([1, 2, 3]), 3);\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.matchRight = exports.matchRightW;\n/**\n * Alias of [`matchRight`](#matchright).\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.foldRight = exports.matchRight;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Same as [`chain`](#chain), but passing also the index to the iterating function.\n *\n * @example\n * import { chainWithIndex, replicate } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (index: number, x: string) => replicate(2, `${x}${index}`);\n * assert.deepStrictEqual(pipe([\"a\", \"b\", \"c\"], chainWithIndex(f)), [\"a0\", \"a0\", \"b1\", \"b1\", \"c2\", \"c2\"]);\n *\n * @category combinators\n * @since 2.7.0\n */\nvar chainWithIndex = function (f) { return function (as) {\n    var out = [];\n    for (var i = 0; i < as.length; i++) {\n        out.push.apply(out, f(i, as[i]));\n    }\n    return out;\n}; };\nexports.chainWithIndex = chainWithIndex;\n/**\n * Same as `reduce` but it carries over the intermediate steps\n *\n * @example\n * import { scanLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar scanLeft = function (b, f) { return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[0] = b;\n    for (var i = 0; i < len; i++) {\n        out[i + 1] = f(out[i], as[i]);\n    }\n    return out;\n}; };\nexports.scanLeft = scanLeft;\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar scanRight = function (b, f) { return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[len] = b;\n    for (var i = len - 1; i >= 0; i--) {\n        out[i] = f(as[i], out[i + 1]);\n    }\n    return out;\n}; };\nexports.scanRight = scanRight;\n/**\n * Calculate the number of elements in a `Array`.\n *\n * @example\n * import { size } from 'fp-ts/Array'\n *\n * assert.strictEqual(size([\"a\",\"b\",\"c\"]),3)\n *\n * @since 2.10.0\n */\nvar size = function (as) { return as.length; };\nexports.size = size;\n/**\n * Test whether an array contains a particular index\n *\n * @example\n * import { isOutOfBound } from 'fp-ts/Array'\n *\n * assert.strictEqual(isOutOfBound(1,[\"a\",\"b\",\"c\"]),false)\n * assert.strictEqual(isOutOfBound(-1,[\"a\",\"b\",\"c\"]),true)\n * assert.strictEqual(isOutOfBound(3,[\"a\",\"b\",\"c\"]),true)\n *\n * @since 2.0.0\n */\nexports.isOutOfBound = NEA.isOutOfBound;\n// TODO: remove non-curried overloading in v3\n/**\n * This function provides a safe way to read a value at a particular index from an array.\n * It returns a `none` if the index is out of bounds, and a `some` of the element if the\n * index is valid.\n *\n * @example\n * import { lookup } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(1)), some(2))\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(3)), none)\n *\n * @since 2.0.0\n */\nexports.lookup = RA.lookup;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.head = RA.head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.last = RA.last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nvar tail = function (as) { return (exports.isNonEmpty(as) ? _.some(NEA.tail(as)) : _.none); };\nexports.tail = tail;\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nvar init = function (as) { return (exports.isNonEmpty(as) ? _.some(NEA.init(as)) : _.none); };\nexports.init = init;\n/**\n * Keep only a max number of elements from the start of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { takeLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeLeft(2)([1, 2, 3, 4, 5]), [1, 2]);\n * assert.deepStrictEqual(takeLeft(7)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n * assert.deepStrictEqual(takeLeft(0)([1, 2, 3, 4, 5]), []);\n * assert.deepStrictEqual(takeLeft(-1)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n *\n * @category combinators\n * @since 2.0.0\n */\nvar takeLeft = function (n) { return function (as) { return (exports.isOutOfBound(n, as) ? exports.copy(as) : as.slice(0, n)); }; };\nexports.takeLeft = takeLeft;\n/**\n * Keep only a max number of elements from the end of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { takeRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5]);\n * assert.deepStrictEqual(takeRight(7)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n * assert.deepStrictEqual(takeRight(0)([1, 2, 3, 4, 5]), []);\n * assert.deepStrictEqual(takeRight(-1)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n *\n * @category combinators\n * @since 2.0.0\n */\nvar takeRight = function (n) { return function (as) {\n    return exports.isOutOfBound(n, as) ? exports.copy(as) : n === 0 ? [] : as.slice(-n);\n}; };\nexports.takeRight = takeRight;\nfunction takeLeftWhile(predicate) {\n    return function (as) {\n        var out = [];\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            if (!predicate(a)) {\n                break;\n            }\n            out.push(a);\n        }\n        return out;\n    };\n}\nexports.takeLeftWhile = takeLeftWhile;\nvar spanLeftIndex = function (as, predicate) {\n    var l = as.length;\n    var i = 0;\n    for (; i < l; i++) {\n        if (!predicate(as[i])) {\n            break;\n        }\n    }\n    return i;\n};\nfunction spanLeft(predicate) {\n    return function (as) {\n        var _a = exports.splitAt(spanLeftIndex(as, predicate))(as), init = _a[0], rest = _a[1];\n        return { init: init, rest: rest };\n    };\n}\nexports.spanLeft = spanLeft;\n/**\n * Creates a new `Array` which is a copy of the input dropping a max number of elements from the start.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { dropLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3]);\n * assert.deepStrictEqual(dropLeft(5)([1, 2, 3]), []);\n * assert.deepStrictEqual(dropLeft(0)([1, 2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(dropLeft(-2)([1, 2, 3]), [1, 2, 3]);\n *\n * @category combinators\n * @since 2.0.0\n */\nvar dropLeft = function (n) { return function (as) {\n    return n <= 0 || exports.isEmpty(as) ? exports.copy(as) : n >= as.length ? [] : as.slice(n, as.length);\n}; };\nexports.dropLeft = dropLeft;\n/**\n * Creates a new `Array` which is a copy of the input dropping a max number of elements from the end.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { dropRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropRight(2)([1, 2, 3]), [1]);\n * assert.deepStrictEqual(dropRight(5)([1, 2, 3]), []);\n * assert.deepStrictEqual(dropRight(0)([1, 2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(dropRight(-2)([1, 2, 3]), [1, 2, 3]);\n *\n * @category combinators\n * @since 2.0.0\n */\nvar dropRight = function (n) { return function (as) {\n    return n <= 0 || exports.isEmpty(as) ? exports.copy(as) : n >= as.length ? [] : as.slice(0, as.length - n);\n}; };\nexports.dropRight = dropRight;\nfunction dropLeftWhile(predicate) {\n    return function (as) { return as.slice(spanLeftIndex(as, predicate)); };\n}\nexports.dropLeftWhile = dropLeftWhile;\n/**\n * `findIndex` returns an `Option` containing the first index for which a predicate holds.\n * It returns `None` if no element satisfies the predicate.\n * Similar to [`findFirst`](#findFirst) but returning the index instead of the element.\n *\n * @example\n * import { findIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.0.0\n */\nexports.findIndex = RA.findIndex;\nfunction findFirst(predicate) {\n    return RA.findFirst(predicate);\n}\nexports.findFirst = findFirst;\n/**\n * Given a selector function which takes an element and returns an option,\n * this function applies the selector to each element of the array and\n * returns the first `Some` result. Otherwise it returns `None`.\n *\n * @example\n * import { findFirstMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string;\n *   readonly age: number;\n * }\n *\n * const persons: Array<Person> = [\n *   { name: \"John\", age: 16 },\n *   { name: \"Mary\", age: 45 },\n *   { name: \"Joey\", age: 28 },\n * ];\n *\n * const nameOfPersonAbove18 = (p: Person) => (p.age <= 18 ? none : some(p.name));\n * const nameOfPersonAbove70 = (p: Person) => (p.age <= 70 ? none : some(p.name));\n * assert.deepStrictEqual(findFirstMap(nameOfPersonAbove18)(persons), some(\"Mary\"));\n * assert.deepStrictEqual(findFirstMap(nameOfPersonAbove70)(persons), none);\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.findFirstMap = RA.findFirstMap;\nfunction findLast(predicate) {\n    return RA.findLast(predicate);\n}\nexports.findLast = findLast;\n/**\n * Given a selector function which takes an element and returns an option,\n * this function applies the selector to each element of the array starting from the\n * end and returns the last `Some` result. Otherwise it returns `None`.\n *\n * @example\n * import { findLastMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string;\n *   readonly age: number;\n * }\n *\n * const persons: Array<Person> = [\n *   { name: \"John\", age: 16 },\n *   { name: \"Mary\", age: 45 },\n *   { name: \"Joey\", age: 28 },\n * ];\n *\n * const nameOfPersonAbove18 = (p: Person) => (p.age <= 18 ? none : some(p.name));\n * const nameOfPersonAbove70 = (p: Person) => (p.age <= 70 ? none : some(p.name));\n * assert.deepStrictEqual(findLastMap(nameOfPersonAbove18)(persons), some(\"Joey\"));\n * assert.deepStrictEqual(findLastMap(nameOfPersonAbove70)(persons), none);\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.findLastMap = RA.findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate.\n * It returns an `Option` containing the index or `None` if not found.\n *\n * @example\n * import { findLastIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   readonly a: number\n *   readonly b: number\n * }\n * const xs: Array<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)\n *\n * @since 2.0.0\n */\nexports.findLastIndex = RA.findLastIndex;\n/**\n * This function takes an array and makes a new array containing the same elements.\n *\n * @category combinators\n * @since 2.0.0\n */\nvar copy = function (as) { return as.slice(); };\nexports.copy = copy;\n/**\n * Insert an element at the specified index, creating a new array,\n * or returning `None` if the index is out of bounds.\n *\n * @example\n * import { insertAt } from 'fp-ts/Array'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.0.0\n */\nvar insertAt = function (i, a) { return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(exports.unsafeInsertAt(i, a, as));\n}; };\nexports.insertAt = insertAt;\n/**\n * Change the element at the specified index, creating a new array,\n * or returning `None` if the index is out of bounds.\n *\n * @example\n * import { updateAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.0.0\n */\nvar updateAt = function (i, a) { return exports.modifyAt(i, function () { return a; }); };\nexports.updateAt = updateAt;\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds.\n *\n * @example\n * import { deleteAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.0.0\n */\nvar deleteAt = function (i) { return function (as) {\n    return exports.isOutOfBound(i, as) ? _.none : _.some(exports.unsafeDeleteAt(i, as));\n}; };\nexports.deleteAt = deleteAt;\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds.\n *\n * @example\n * import { modifyAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.0.0\n */\nvar modifyAt = function (i, f) { return function (as) {\n    return exports.isOutOfBound(i, as) ? _.none : _.some(exports.unsafeUpdateAt(i, f(as[i]), as));\n}; };\nexports.modifyAt = modifyAt;\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar reverse = function (as) { return (exports.isEmpty(as) ? [] : as.slice().reverse()); };\nexports.reverse = reverse;\n/**\n * Takes an `Array` of `Either` and produces a new `Array` containing\n * the values of all the `Right` elements in the same order.\n *\n * @example\n * import { rights } from 'fp-ts/Array'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar rights = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Right') {\n            r.push(a.right);\n        }\n    }\n    return r;\n};\nexports.rights = rights;\n/**\n * Takes an `Array` of `Either` and produces a new `Array` containing\n * the values of all the `Left` elements in the same order.\n *\n * @example\n * import { lefts } from 'fp-ts/Array'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar lefts = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Left') {\n            r.push(a.left);\n        }\n    }\n    return r;\n};\nexports.lefts = lefts;\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar sort = function (O) { return function (as) {\n    return as.length <= 1 ? exports.copy(as) : as.slice().sort(O.compare);\n}; };\nexports.sort = sort;\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar zipWith = function (fa, fb, f) {\n    var fc = [];\n    var len = Math.min(fa.length, fb.length);\n    for (var i = 0; i < len; i++) {\n        fc[i] = f(fa[i], fb[i]);\n    }\n    return fc;\n};\nexports.zipWith = zipWith;\nfunction zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return exports.zipWith(as, bs, function (a, b) { return [a, b]; });\n}\nexports.zip = zip;\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.0.0\n */\nvar unzip = function (as) {\n    var fa = [];\n    var fb = [];\n    for (var i = 0; i < as.length; i++) {\n        fa[i] = as[i][0];\n        fb[i] = as[i][1];\n    }\n    return [fa, fb];\n};\nexports.unzip = unzip;\n/**\n * Creates a new `Array`, prepending an element to every member of the input `Array`.\n *\n * @example\n * import { prependAll } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\nvar prependAll = function (middle) {\n    var f = NEA.prependAll(middle);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : []); };\n};\nexports.prependAll = prependAll;\n/**\n * Creates a new `Array` placing an element in between members of the input `Array`.\n *\n * @example\n * import { intersperse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nvar intersperse = function (middle) {\n    var f = NEA.intersperse(middle);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : exports.copy(as)); };\n};\nexports.intersperse = intersperse;\n/**\n * Creates a new `Array` rotating the input `Array` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar rotate = function (n) {\n    var f = NEA.rotate(n);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : exports.copy(as)); };\n};\nexports.rotate = rotate;\n// TODO: remove non-curried overloading in v3\n/**\n * Test if a value is a member of an `Array`. Takes a `Eq<A>` as a single\n * argument which returns the function to use to search for a value of type `A` in\n * an `Array<A>`.\n *\n * @example\n * import { elem } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(2)), true)\n * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(0)), false)\n *\n * @since 2.0.0\n */\nexports.elem = RA.elem;\n/**\n * Creates a new `Array` removing duplicate elements, keeping the first occurrence of an element,\n * based on a `Eq<A>`.\n *\n * @example\n * import { uniq } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar uniq = function (E) {\n    var f = NEA.uniq(E);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : exports.copy(as)); };\n};\nexports.uniq = uniq;\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/Array'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar sortBy = function (ords) {\n    var f = NEA.sortBy(ords);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : exports.copy(as)); };\n};\nexports.sortBy = sortBy;\n/**\n * A useful recursion pattern for processing an array to produce a new array, often used for \"chopping\" up the input\n * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a\n * value and the rest of the array.\n *\n * @example\n * import { Eq } from 'fp-ts/Eq'\n * import * as A from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * const group = <A>(S: Eq<A>): ((as: Array<A>) => Array<Array<A>>) => {\n *   return A.chop(as => {\n *     const { init, rest } = pipe(as, A.spanLeft((a: A) => S.equals(a, as[0])))\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar chop = function (f) {\n    var g = NEA.chop(f);\n    return function (as) { return (exports.isNonEmpty(as) ? g(as) : []); };\n};\nexports.chop = chop;\n/**\n * Splits an `Array` into two pieces, the first piece has max `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar splitAt = function (n) { return function (as) {\n    return n >= 1 && exports.isNonEmpty(as) ? NEA.splitAt(n)(as) : exports.isEmpty(as) ? [exports.copy(as), []] : [[], exports.copy(as)];\n}; };\nexports.splitAt = splitAt;\n/**\n * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `xs`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar chunksOf = function (n) {\n    var f = NEA.chunksOf(n);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : []); };\n};\nexports.chunksOf = chunksOf;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar fromOptionK = function (f) { return function () {\n    var a = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        a[_i] = arguments[_i];\n    }\n    return exports.fromOption(f.apply(void 0, a));\n}; };\nexports.fromOptionK = fromOptionK;\nfunction comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    var go = function (scope, input) {\n        return exports.isNonEmpty(input)\n            ? function_1.pipe(NEA.head(input), exports.chain(function (x) { return go(function_1.pipe(scope, exports.append(x)), NEA.tail(input)); }))\n            : g.apply(void 0, scope) ? [f.apply(void 0, scope)]\n                : [];\n    };\n    return go([], input);\n}\nexports.comprehension = comprehension;\n/**\n * @category combinators\n * @since 2.11.0\n */\nvar concatW = function (second) { return function (first) {\n    return exports.isEmpty(first) ? exports.copy(second) : exports.isEmpty(second) ? exports.copy(first) : first.concat(second);\n}; };\nexports.concatW = concatW;\n/**\n * @category combinators\n * @since 2.11.0\n */\nexports.concat = exports.concatW;\nfunction union(E) {\n    var unionE = NEA.union(E);\n    return function (first, second) {\n        if (second === undefined) {\n            var unionE_1 = union(E);\n            return function (second) { return unionE_1(second, first); };\n        }\n        return exports.isNonEmpty(first) && exports.isNonEmpty(second)\n            ? unionE(second)(first)\n            : exports.isNonEmpty(first)\n                ? exports.copy(first)\n                : exports.copy(second);\n    };\n}\nexports.union = union;\nfunction intersection(E) {\n    var elemE = exports.elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (ys) { return intersectionE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return elemE(a, ys); });\n    };\n}\nexports.intersection = intersection;\nfunction difference(E) {\n    var elemE = exports.elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var differenceE_1 = difference(E);\n            return function (ys) { return differenceE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return !elemE(a, ys); });\n    };\n}\nexports.difference = difference;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.mapWithIndex(f)); };\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\n/* istanbul ignore next */\nvar _filter = function (fa, predicate) { return function_1.pipe(fa, exports.filter(predicate)); };\n/* istanbul ignore next */\nvar _filterMap = function (fa, f) { return function_1.pipe(fa, exports.filterMap(f)); };\n/* istanbul ignore next */\nvar _partition = function (fa, predicate) {\n    return function_1.pipe(fa, exports.partition(predicate));\n};\n/* istanbul ignore next */\nvar _partitionMap = function (fa, f) { return function_1.pipe(fa, exports.partitionMap(f)); };\n/* istanbul ignore next */\nvar _partitionWithIndex = function (fa, predicateWithIndex) { return function_1.pipe(fa, exports.partitionWithIndex(predicateWithIndex)); };\n/* istanbul ignore next */\nvar _partitionMapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.partitionMapWithIndex(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = exports.foldMapWithIndex(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _filterMapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.filterMapWithIndex(f)); };\n/* istanbul ignore next */\nvar _filterWithIndex = function (fa, predicateWithIndex) { return function_1.pipe(fa, exports.filterWithIndex(predicateWithIndex)); };\n/* istanbul ignore next */\nvar _extend = function (fa, f) { return function_1.pipe(fa, exports.extend(f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseWithIndexF(f)); };\n};\nvar _chainRecDepthFirst = RA._chainRecDepthFirst;\nvar _chainRecBreadthFirst = RA._chainRecBreadthFirst;\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * Given an element of the base type, `of` builds an `Array` containing just that\n * element of the base type (this is useful for building a `Monad`).\n *\n * @example\n * import { of } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(of(\"a\"), [\"a\"]);\n *\n * @category Pointed\n * @since 2.0.0\n */\nexports.of = NEA.of;\n/**\n * Makes an empty `Array`, useful for building a [`Monoid`](#Monoid)\n *\n * @category Zero\n * @since 2.7.0\n */\nvar zero = function () { return []; };\nexports.zero = zero;\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: Array<A>) => Array<B>`.\n * In practice it applies the base function to each element of the array and collects the\n * results in a new array.\n *\n * @example\n * import { map } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (n: number) => n * 2;\n * assert.deepStrictEqual(pipe([1, 2, 3], map(f)), [2, 4, 6]);\n *\n * @category Functor\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) { return fa.map(function (a) { return f(a); }); }; };\nexports.map = map;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * It can be used to extend the concept of [`map`](#map) to a function that\n * takes more than one parameter as described\n * read [here](https://dev.to/gcanti/getting-started-with-fp-ts-applicative-1kb3)\n *\n * @example\n * import { ap, map, of } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * // a curried function with 3 input parameteres\n * const f = (s1: string) => (n: number) => (s2: string) => s1 + n + s2;\n *\n * // let's use `ap` to iterate `f` over an array for each input parameter\n * assert.deepStrictEqual(pipe([\"a\", \"b\"], map(f), ap([1, 2]), ap([\"\uD83D\uDE00\", \"\uD83D\uDE2B\", \"\uD83D\uDE0E\"])), [\n *   \"a1\uD83D\uDE00\", \"a1\uD83D\uDE2B\", \"a1\uD83D\uDE0E\",\n *   \"a2\uD83D\uDE00\", \"a2\uD83D\uDE2B\", \"a2\uD83D\uDE0E\",\n *   \"b1\uD83D\uDE00\", \"b1\uD83D\uDE2B\", \"b1\uD83D\uDE0E\",\n *   \"b2\uD83D\uDE00\", \"b2\uD83D\uDE2B\", \"b2\uD83D\uDE0E\",\n * ]);\n *\n * // given Array implements the Applicative interface with the `of` method,\n * // we can write exactly the same thing in a more symmetric way\n * // using `of` on `f` and `ap` on each array in input\n * assert.deepStrictEqual(\n *   pipe(of(f), ap([\"a\", \"b\"]), ap([1, 2]), ap([\"\uD83D\uDE00\", \"\uD83D\uDE2B\", \"\uD83D\uDE0E\"])),\n *   pipe([\"a\", \"b\"], map(f), ap([1, 2]), ap([\"\uD83D\uDE00\", \"\uD83D\uDE2B\", \"\uD83D\uDE0E\"]))\n * );\n *\n * @category Apply\n * @since 2.0.0\n */\nvar ap = function (fa) { return exports.chain(function (f) { return function_1.pipe(fa, exports.map(f)); }); };\nexports.ap = ap;\n/**\n * Composes computations in sequence, using the return value of one computation to\n * determine the next computation.\n *\n * In other words it takes a function `f` that produces an array from a single element of\n * the base type `A` and returns a new function which applies `f` to each element of the\n * input array (like [`map`](#map)) and, instead of returning an array of arrays, concatenates the\n * results into a single array (like [`flatten`](#flatten)).\n *\n * This is the `chain` component of the array `Monad`.\n *\n * @example\n * import { chain, map, replicate } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (n: number) => replicate(n, `${n}`);\n * assert.deepStrictEqual(pipe([1, 2, 3], map(f)), [[\"1\"], [\"2\", \"2\"], [\"3\", \"3\", \"3\"]]);\n * assert.deepStrictEqual(pipe([1, 2, 3], chain(f)), [\"1\", \"2\", \"2\", \"3\", \"3\", \"3\"]);\n *\n * @category Monad\n * @since 2.0.0\n */\nvar chain = function (f) { return function (ma) {\n    return function_1.pipe(ma, exports.chainWithIndex(function (_, a) { return f(a); }));\n}; };\nexports.chain = chain;\n/**\n * Takes an array of arrays of `A` and flattens them into an array of `A`\n * by concatenating the elements of each array in order.\n *\n * Derivable from [`chain`](#chain).\n *\n * @example\n * import { flatten } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(flatten([[\"a\"], [\"b\", \"c\"], [\"d\", \"e\", \"f\"]]), [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]);\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * Same as [`map`](#map), but the iterating function takes both the index and the value\n * of the element.\n *\n * @example\n * import { mapWithIndex } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (i: number, s: string) => `${s} - ${i}`;\n * assert.deepStrictEqual(pipe([\"a\", \"b\", \"c\"], mapWithIndex(f)), [\"a - 0\", \"b - 1\", \"c - 2\"]);\n *\n * @category FunctorWithIndex\n * @since 2.0.0\n */\nvar mapWithIndex = function (f) { return function (fa) {\n    return fa.map(function (a, i) { return f(i, a); });\n}; };\nexports.mapWithIndex = mapWithIndex;\n/**\n * Maps an array with an iterating function that takes the index and the value of\n * each element and returns an `Option`. It keeps only the `Some` values discarding\n * the `None`s.\n *\n * Same as [`filterMap`](#filterMap), but with an iterating function which takes also\n * the index as input.\n *\n * @example\n * import { filterMapWithIndex } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n * import { option } from \"fp-ts\";\n *\n * const f = (i: number, s: string) => (i % 2 === 1 ? option.some(s.toUpperCase()) : option.none);\n * assert.deepStrictEqual(pipe([\"a\", \"no\", \"neither\", \"b\"], filterMapWithIndex(f)), [\"NO\", \"B\"]);\n *\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nvar filterMapWithIndex = function (f) { return function (fa) {\n    var out = [];\n    for (var i = 0; i < fa.length; i++) {\n        var optionB = f(i, fa[i]);\n        if (_.isSome(optionB)) {\n            out.push(optionB.value);\n        }\n    }\n    return out;\n}; };\nexports.filterMapWithIndex = filterMapWithIndex;\n/**\n * Maps an array with an iterating function that returns an `Option`\n * and it keeps only the `Some` values discarding the `None`s.\n *\n * @example\n * import { filterMap } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n * import { option } from \"fp-ts\";\n *\n * const f = (s: string) => s.length === 1 ? option.some(s.toUpperCase()) : option.none;\n * assert.deepStrictEqual(pipe([\"a\", \"no\", \"neither\", \"b\"], filterMap(f)), [\"A\", \"B\"]);\n *\n * @category Filterable\n * @since 2.0.0\n */\nvar filterMap = function (f) {\n    return exports.filterMapWithIndex(function (_, a) { return f(a); });\n};\nexports.filterMap = filterMap;\n/**\n * Compact an array of `Option`s discarding the `None` values and\n * keeping the `Some` values. It returns a new array containing the values of\n * the `Some` options.\n *\n * @example\n * import { compact } from 'fp-ts/Array'\n * import { option } from \"fp-ts\";\n *\n * assert.deepStrictEqual(compact([option.some(\"a\"), option.none, option.some(\"b\")]), [\"a\", \"b\"]);\n *\n * @category Compactable\n * @since 2.0.0\n */\nexports.compact = \n/*#__PURE__*/\nexports.filterMap(function_1.identity);\n/**\n * Separate an array of `Either`s into `Left`s and `Right`s, creating two new arrays:\n * one containing all the left values and one containing all the right values.\n *\n * @example\n * import { separate } from 'fp-ts/Array'\n * import { either } from \"fp-ts\";\n *\n * assert.deepStrictEqual(separate([either.right(\"r1\"), either.left(\"l1\"), either.right(\"r2\")]), {\n *   left: [\"l1\"],\n *   right: [\"r1\", \"r2\"],\n * });\n *\n * @category Compactable\n * @since 2.0.0\n */\nvar separate = function (fa) {\n    var left = [];\n    var right = [];\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var e = fa_1[_i];\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return Separated_1.separated(left, right);\n};\nexports.separate = separate;\n/**\n * Given an iterating function that is a `Predicate` or a `Refinement`,\n * `filter` creates a new `Array` containing the elements of the original\n * `Array` for which the iterating function is `true`.\n *\n * @example\n * import { filter } from 'fp-ts/Array'\n * import { isString } from \"fp-ts/lib/string\";\n *\n * assert.deepStrictEqual(filter(isString)([\"a\", 1, {}, \"b\", 5]), [\"a\", \"b\"]);\n * assert.deepStrictEqual(filter((x:number) => x > 0)([-3, 1, -2, 5]), [1, 5]);\n *\n * @category Filterable\n * @since 2.0.0\n */\nvar filter = function (predicate) { return function (as) { return as.filter(predicate); }; };\nexports.filter = filter;\n/**\n * Given an iterating function that is a `Predicate` or a `Refinement`,\n * `partition` creates two new `Array`s: `right` containing the elements of the original\n * `Array` for which the iterating function is `true`, `left` containing the elements\n * for which it is false.\n *\n * @example\n * import { partition } from 'fp-ts/Array'\n * import { isString } from \"fp-ts/lib/string\";\n *\n * assert.deepStrictEqual(partition(isString)([\"a\", 1, {}, \"b\", 5]), { left: [1, {}, 5], right: [\"a\", \"b\"] });\n * assert.deepStrictEqual(partition((x: number) => x > 0)([-3, 1, -2, 5]), { left: [-3, -2], right: [1, 5] });\n *\n * @category Filterable\n * @since 2.0.0\n */\nvar partition = function (predicate) {\n    return exports.partitionWithIndex(function (_, a) { return predicate(a); });\n};\nexports.partition = partition;\n/**\n * Same as [`partition`](#partition), but passing also the index to the iterating function.\n *\n * @example\n * import { partitionWithIndex } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(partitionWithIndex((index, x: number) => index < 3 && x > 0)([-2, 5, 6, 7]), {\n *   left: [-2, 7],\n *   right: [5, 6],\n * });\n *\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nvar partitionWithIndex = function (predicateWithIndex) { return function (as) {\n    var left = [];\n    var right = [];\n    for (var i = 0; i < as.length; i++) {\n        var b = as[i];\n        if (predicateWithIndex(i, b)) {\n            right.push(b);\n        }\n        else {\n            left.push(b);\n        }\n    }\n    return Separated_1.separated(left, right);\n}; };\nexports.partitionWithIndex = partitionWithIndex;\n/**\n * Given an iterating function that returns an `Either`,\n * `partitionMap` applies the iterating function to each element and it creates two `Array`s:\n * `right` containing the values of `Right` results, `left` containing the values of `Left` results.\n *\n * @example\n * import { partitionMap } from 'fp-ts/Array'\n * import { Either, left, right } from \"fp-ts/lib/Either\";\n *\n * const upperIfString = <B>(x: B): Either<B, string> =>\n *   typeof x === \"string\" ? right(x.toUpperCase()) : left(x);\n * assert.deepStrictEqual(partitionMap(upperIfString)([-2, \"hello\", 6, 7, \"world\"]), {\n *   left: [-2, 6, 7],\n *   right: [ 'HELLO', 'WORLD' ],\n * });\n *\n * @category Filterable\n * @since 2.0.0\n */\nvar partitionMap = function (f) { return exports.partitionMapWithIndex(function (_, a) { return f(a); }); };\nexports.partitionMap = partitionMap;\n/**\n * Same as [`partitionMap`](#partitionMap), but passing also the index to the iterating function.\n *\n * @example\n * import { partitionMapWithIndex } from 'fp-ts/Array'\n * import { Either, left, right } from \"fp-ts/lib/Either\";\n *\n * const upperIfStringBefore3 = <B>(index: number, x: B): Either<B, string> =>\n *   index < 3 && typeof x === \"string\" ? right(x.toUpperCase()) : left(x);\n * assert.deepStrictEqual(partitionMapWithIndex(upperIfStringBefore3)([-2, \"hello\", 6, 7, \"world\"]), {\n *   left: [-2, 6, 7, \"world\"],\n *   right: [\"HELLO\"],\n * });\n *\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nvar partitionMapWithIndex = function (f) { return function (fa) {\n    var left = [];\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n        var e = f(i, fa[i]);\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return Separated_1.separated(left, right);\n}; };\nexports.partitionMapWithIndex = partitionMapWithIndex;\n/**\n * Less strict version of [`alt`](#alt), it can concatenate `Array`s of different base types.\n *\n * @example\n * import { altW } from 'fp-ts/Array';\n *\n * assert.deepStrictEqual(altW(() => [2, 3, 4])([\"a\"]), [\"a\", 2, 3, 4]);\n *\n * @category Alt\n * @since 2.9.0\n */\nvar altW = function (that) { return function (fa) { return fa.concat(that()); }; };\nexports.altW = altW;\n/**\n * `alt` implements the `Alt` iterface by concatenation of `Array`s.\n * `Alt` interface is similar to `Semigroup` for higher-kinded types such\n * as `Array` and `Option`: the example below shows both `Alt`'s `alt` and\n * `Semigroup`'s `concat` functions.\n *\n * @example\n * import { alt, concat } from 'fp-ts/Array';\n *\n * assert.deepStrictEqual(alt(() => [2, 3, 4])([1]), [1, 2, 3, 4]);\n * assert.deepStrictEqual(concat([2, 3, 4])([1]), [1, 2, 3, 4]);\n *\n * @category Alt\n * @since 2.0.0\n */\nexports.alt = exports.altW;\n/**\n * Same as [`filter`](#filter), but passing also the index to the iterating function.\n *\n * @example\n * import { filterWithIndex } from 'fp-ts/Array';\n *\n * const f = (index: number, x: number) => x > 0 && index <= 2;\n * assert.deepStrictEqual(filterWithIndex(f)([-3, 1, -2, 5]), [1]);\n *\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nvar filterWithIndex = function (predicateWithIndex) { return function (as) {\n    return as.filter(function (b, i) { return predicateWithIndex(i, b); });\n}; };\nexports.filterWithIndex = filterWithIndex;\n/**\n * Given an iterating function that takes `Array<A>` as input, `extend` returns\n * an array containing the results of the iterating function applied to the whole input\n * `Array`, then to the input `Array` without the first element, then to the input\n * `Array` without the first two elements, etc.\n *\n * @example\n * import { extend } from 'fp-ts/Array'\n *\n * const f = (a: string[]) => a.join(\",\");\n * assert.deepStrictEqual(extend(f)([\"a\", \"b\", \"c\"]), [\"a,b,c\", \"b,c\", \"c\"]);\n *\n * @category Extend\n * @since 2.0.0\n */\nvar extend = function (f) { return function (wa) {\n    return wa.map(function (_, i) { return f(wa.slice(i)); });\n}; };\nexports.extend = extend;\n/**\n * `duplicate` returns an array containing the whole input `Array`,\n * then to the input `Array` dropping the first element, then to the input\n * `Array` dropping the first two elements, etc.\n * Derivable from `Extend`.\n *\n * @example\n * import { duplicate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(duplicate([\"a\", \"b\", \"c\"]), [[\"a\", \"b\", \"c\"], [\"b\", \"c\"], [\"c\"]]);\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * Map and fold an `Array`.\n * Map the `Array` passing each value to the iterating function.\n * Then fold the results using the provided `Monoid`.\n *\n * @example\n * import { foldMap } from 'fp-ts/Array'\n *\n * const monoid = { concat: (a: string, b: string) => a + b, empty: \"\" };\n * const f = (s: string) => s.toUpperCase()\n * assert.deepStrictEqual(foldMap(monoid)(f)([\"a\", \"b\", \"c\"]), \"ABC\");\n *\n * @category Foldable\n * @since 2.0.0\n */\nexports.foldMap = RA.foldMap;\n/**\n * Same as [`foldMap`](#foldMap) but passing also the index to the iterating function.\n *\n * @example\n * import { foldMapWithIndex } from 'fp-ts/Array'\n *\n * const monoid = { concat: (a: string, b: string) => a + b, empty: \"\" };\n * const f = (index:number, s: string) => `${s.toUpperCase()}(${index})`\n * assert.deepStrictEqual(foldMapWithIndex(monoid)(f)([\"a\", \"b\", \"c\"]), \"A(0)B(1)C(2)\");\n *\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexports.foldMapWithIndex = RA.foldMapWithIndex;\n/**\n * Reduces an `Array`.\n *\n * `reduce` executes the supplied iterating function on each element of the array,\n * in order, passing in the element and the return value from the calculation on the preceding element.\n *\n * The first time that the iterating function is called there is no \"return value of the\n * previous calculation\", the initial value is used in its place.\n *\n * @example\n * import { reduce } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reduce(5, (acc: number, cur: number) => acc * cur)([2, 3]), 5 * 2 * 3);\n *\n * @category Foldable\n * @since 2.0.0\n */\nexports.reduce = RA.reduce;\n/**\n * Same as [`reduce`](#reduce) but passing also the index to the iterating function.\n *\n * @example\n * import { reduceWithIndex } from 'fp-ts/Array'\n *\n * const f = (index: number, acc: string, cur: unknown) =>\n *   acc + (typeof cur === \"string\" ? cur.toUpperCase() + index : \"\");\n * assert.deepStrictEqual(reduceWithIndex(\"\", f)([2, \"a\", \"b\", null]), \"A1B2\");\n *\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexports.reduceWithIndex = RA.reduceWithIndex;\n/**\n * Same as [`reduce`](#reduce) but applied from the end to the start.\n *\n * *Note*: the iterating function in this case takes the accumulator as the last argument.\n *\n * @example\n * import { reduceRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reduceRight(\"\", (cur: string, acc: string) => acc + cur)([\"a\", \"b\", \"c\"]), \"cba\");\n *\n * @category Foldable\n * @since 2.0.0\n */\nexports.reduceRight = RA.reduceRight;\n/**\n * Same as [`reduceRight`](#reduceRight) but passing also the index to the iterating function.\n *\n * @example\n * import { reduceRightWithIndex } from 'fp-ts/Array'\n *\n * const f = (index: number, cur: unknown, acc: string) =>\n *   acc + (typeof cur === \"string\" ? cur.toUpperCase() + index : \"\");\n * assert.deepStrictEqual(reduceRightWithIndex(\"\", f)([2, \"a\", \"b\", null]), \"B2A1\");\n *\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexports.reduceRightWithIndex = RA.reduceRightWithIndex;\n/**\n * Given an iterating function that returns a `HKT` (higher kinded type), `traverse`\n * applies the iterating function to each element of the `Array` and then [`sequence`](#sequence)-s\n * the results using the provided `Applicative`.\n *\n * E.g. suppose you have an `Array` and you want to format each element with a function\n * that returns a result or an error as `f = (a: A) => Either<Error, B>`, using `traverse`\n * you can apply `f` to all elements and directly obtain as a result an `Either<Error,Array<B>>`\n * i.e. an `Array<B>` if all the results are `B`, or an `Error` if some of the results\n * are `Error`s.\n *\n * @example\n * import { traverse } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/lib/Either\";\n *\n * const f = (x: unknown) =>\n *   typeof x === \"string\" ? right(x.toUpperCase()) : left(new Error(\"not a string\"));\n * assert.deepStrictEqual(traverse(Applicative)(f)([\"a\", \"b\"]), right([\"A\", \"B\"]));\n * assert.deepStrictEqual(traverse(Applicative)(f)([\"a\", 5]), left(new Error(\"not a string\")));\n *\n * @category Traversable\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\nexports.traverse = traverse;\n/**\n * `sequence` takes an `Array` where elements are `HKT<A>` (higher kinded type) and,\n * using an applicative of that `HKT`, returns an `HKT` of `Array<A>`.\n * E.g. it can turn an `Array<Either<Error, string>>` into an `Either<Error, Array<string>>`.\n *\n * `sequence` requires an `Applicative` of the `HKT` you are targeting, e.g. to turn an\n * `Array<Either<E, A>>` into an `Either<E, Array<A>>`, it needs an\n * `Applicative` for `Either`, to to turn an `Array<Option<A>>` into an `Option<Array<A>>`,\n * it needs an `Applicative` for `Option`.\n *\n * @example\n * import { sequence } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/lib/Either\";\n *\n * assert.deepStrictEqual(sequence(Applicative)([right(\"a\"), right(\"b\")]), right([\"a\", \"b\"]));\n * assert.deepStrictEqual(\n *   sequence(Applicative)([right(\"a\"), left(new Error(\"not a string\"))]),\n *   left(new Error(\"not a string\"))\n * );\n *\n * @category Traversable\n * @since 2.6.3\n */\nvar sequence = function (F) { return function (ta) {\n    return _reduce(ta, F.of(exports.zero()), function (fas, fa) {\n        return F.ap(F.map(fas, function (as) { return function (a) { return function_1.pipe(as, exports.append(a)); }; }), fa);\n    });\n}; };\nexports.sequence = sequence;\n/**\n * Same as [`traverse`](#traverse) but passing also the index to the iterating function.\n *\n * @example\n * import { traverseWithIndex } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/lib/Either\";\n *\n * const f = (index:number, x:unknown) =>\n *   typeof x === \"string\" ? right(x.toUpperCase() + index) : left(new Error(\"not a string\"));\n * assert.deepStrictEqual(traverseWithIndex(Applicative)(f)([\"a\", \"b\"]), right([\"A0\", \"B1\"]));\n * assert.deepStrictEqual(traverseWithIndex(Applicative)(f)([\"a\", 5]), left(new Error(\"not a string\")));\n *\n * @category TraversableWithIndex\n * @since 2.6.3\n */\nvar traverseWithIndex = function (F) { return function (f) {\n    return exports.reduceWithIndex(F.of(exports.zero()), function (i, fbs, a) {\n        return F.ap(F.map(fbs, function (bs) { return function (b) { return function_1.pipe(bs, exports.append(b)); }; }), f(i, a));\n    });\n}; };\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wither = function (F) {\n    var _witherF = _wither(F);\n    return function (f) { return function (fa) { return _witherF(fa, f); }; };\n};\nexports.wither = wither;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wilt = function (F) {\n    var _wiltF = _wilt(F);\n    return function (f) { return function (fa) { return _wiltF(fa, f); }; };\n};\nexports.wilt = wilt;\n/**\n * `unfold` takes a function `f` which returns an `Option` of a tuple containing an outcome\n * value and an input for the following iteration.\n * `unfold` applies `f` to the initial value `b` and then recursively to the second\n * element of the tuple contained in the returned `option` of the previous\n * calculation until `f` returns `Option.none`.\n *\n * @example\n * import { unfold } from 'fp-ts/Array'\n * import { option } from 'fp-ts'\n *\n * const f = (n: number) => {\n *   if (n <= 0) return option.none;\n *   const returnValue = n * 2;\n *   const inputForNextRound = n - 1;\n *   return option.some([returnValue, inputForNextRound] as const);\n * };\n * assert.deepStrictEqual(unfold(5, f), [10, 8, 6, 4, 2]);\n *\n * @category Unfoldable\n * @since 2.6.6\n */\nvar unfold = function (b, f) {\n    var out = [];\n    var bb = b;\n    while (true) {\n        var mt = f(bb);\n        if (_.isSome(mt)) {\n            var _a = mt.value, a = _a[0], b_1 = _a[1];\n            out.push(a);\n            bb = b_1;\n        }\n        else {\n            break;\n        }\n    }\n    return out;\n};\nexports.unfold = unfold;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Array';\n/**\n * `getShow` makes a `Show` for an `Array<A>` from a `Show` for\n * an `A`.\n *\n * @example\n * import { getShow } from 'fp-ts/Array'\n *\n * const numShow = { show: (n: number) => (n >= 0 ? `${n}` : `(${-n})`) };\n * assert.deepStrictEqual(getShow(numShow).show([-2, -1, 0, 1]), \"[(2), (1), 0, 1]\");\n *\n * @category instances\n * @since 2.0.0\n */\nexports.getShow = RA.getShow;\n/**\n * Get a `Semigroup` based on the concatenation of `Array`s.\n * See also [`getMonoid`](#getMonoid).\n *\n * @example\n * import { getSemigroup } from 'fp-ts/Array'\n *\n * const S = getSemigroup<number>();\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1, 2, 2, 3]);\n *\n * @category instances\n * @since 2.10.0\n */\nvar getSemigroup = function () { return ({\n    concat: function (first, second) { return first.concat(second); }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * Returns a `Monoid` for `Array<A>` based on the concatenation of `Array`s.\n *\n * @example\n * import { getMonoid } from 'fp-ts/Array'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.0.0\n */\nvar getMonoid = function () { return ({\n    concat: exports.getSemigroup().concat,\n    empty: []\n}); };\nexports.getMonoid = getMonoid;\n/**\n * Derives an `Eq` over the `Array` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { getEq } from 'fp-ts/Array'\n *\n * const E = getEq(S.Eq)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexports.getEq = RA.getEq;\n/**\n * Derives an `Ord` over the `Array` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/Array'\n * import * as S from 'fp-ts/string'\n *\n * const O = getOrd(S.Ord)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n * @category instances\n * @since 2.0.0\n */\nexports.getOrd = RA.getOrd;\n/**\n * Get a `Semigroup` based on the union of the elements of `Array`s.\n * Elements which equal according to the provided `Eq` are included\n * only once in the result.\n * See also [`getUnionMonoid`](#getUnionMonoid).\n *\n * @example\n * import { getUnionSemigroup } from 'fp-ts/Array';\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getUnionSemigroup<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1, 2, 3]);\n *\n * @category instances\n * @since 2.11.0\n */\nvar getUnionSemigroup = function (E) {\n    var unionE = union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\nexports.getUnionSemigroup = getUnionSemigroup;\n/**\n * Get a `Monoid` based on the union of the elements of `Array`s.\n * Elements which equal according to the provided `Eq` are included\n * only once in the result.\n *\n * @example\n * import { getUnionMonoid } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const M = getUnionMonoid<number>(Eq);\n * assert.deepStrictEqual(M.concat([1, 2], [2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(M.empty,[]);\n *\n * @category instances\n * @since 2.11.0\n */\nvar getUnionMonoid = function (E) { return ({\n    concat: exports.getUnionSemigroup(E).concat,\n    empty: []\n}); };\nexports.getUnionMonoid = getUnionMonoid;\n/**\n * Get a `Semigroup` based on the intersection of the elements of `Array`s.\n * Only elements present in the two arrays which are equal according to the\n * provided `Eq` are included in the result.\n *\n * @example\n * import { getIntersectionSemigroup } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getIntersectionSemigroup<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [2]);\n *\n * @category instances\n * @since 2.11.0\n */\nvar getIntersectionSemigroup = function (E) {\n    var intersectionE = intersection(E);\n    return {\n        concat: function (first, second) { return intersectionE(second)(first); }\n    };\n};\nexports.getIntersectionSemigroup = getIntersectionSemigroup;\n/**\n * Get a `Magma` for `Array` where the `concat` function is the differnce between\n * the first and the second array, i.e. the result contains all the elements of the\n * first array for which their is no equal element in the second array according\n * to the `Eq` provided.\n *\n *\n * @example\n * import { getDifferenceMagma } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getDifferenceMagma<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1]);\n *\n * @category instances\n * @since 2.11.0\n */\nvar getDifferenceMagma = function (E) {\n    var differenceE = difference(E);\n    return {\n        concat: function (first, second) { return differenceE(second)(first); }\n    };\n};\nexports.getDifferenceMagma = getDifferenceMagma;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Given an input an `Array` of functions, `flap` returns an `Array` containing\n * the results of applying each function to the given input.\n *\n * @example\n * import { flap } from 'fp-ts/Array'\n *\n * const funs = [\n *   (n: number) => `Double: ${n * 2}`,\n *   (n: number) => `Triple: ${n * 3}`,\n *   (n: number) => `Square: ${n * n}`,\n * ];\n * assert.deepStrictEqual(flap(4)(funs), ['Double: 8', 'Triple: 12', 'Square: 16']);\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#__PURE__*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Unfoldable = {\n    URI: exports.URI,\n    unfold: exports.unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.Zero = {\n    URI: exports.URI,\n    zero: exports.zero\n};\n/**\n * @category constructors\n * @since 2.11.0\n */\nexports.guard = \n/*#__PURE__*/\nZero_1.guard(exports.Zero, exports.Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alternative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    alt: _alt,\n    zero: exports.zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Compactable = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Filterable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FilterableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    traverseWithIndex: _traverseWithIndex\n};\nvar _wither = \n/*#__PURE__*/\nWitherable_1.witherDefault(exports.Traversable, exports.Compactable);\nvar _wilt = \n/*#__PURE__*/\nWitherable_1.wiltDefault(exports.Traversable, exports.Compactable);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Witherable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * @category ChainRec\n * @since 2.11.0\n */\nexports.chainRecDepthFirst = RA.chainRecDepthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.ChainRecDepthFirst = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRecDepthFirst\n};\n/**\n * @category ChainRec\n * @since 2.11.0\n */\nexports.chainRecBreadthFirst = RA.chainRecBreadthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.ChainRecBreadthFirst = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRecBreadthFirst\n};\n/**\n * Filter values inside a context.\n *\n * @since 2.11.0\n */\nexports.filterE = \n/*#__PURE__*/\nWitherable_1.filterE(exports.Witherable);\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.FromEither = {\n    URI: exports.URI,\n    fromEither: exports.fromEither\n};\n/**\n * @category combinators\n * @since 2.11.0\n */\nexports.fromEitherK = \n/*#__PURE__*/\nFromEither_1.fromEitherK(exports.FromEither);\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.0.0\n */\nexports.unsafeInsertAt = NEA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.0.0\n */\nvar unsafeUpdateAt = function (i, a, as) {\n    return exports.isNonEmpty(as) ? NEA.unsafeUpdateAt(i, a, as) : [];\n};\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * @category unsafe\n * @since 2.0.0\n */\nvar unsafeDeleteAt = function (i, as) {\n    var xs = as.slice();\n    xs.splice(i, 1);\n    return xs;\n};\nexports.unsafeDeleteAt = unsafeDeleteAt;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * `every` tells if the provided predicate holds true for every element in the `Array`.\n *\n * @example\n * import { every } from 'fp-ts/Array'\n *\n * assert.equal(every((x: number) => x >= 0)([1, 2, 3]), true);\n * assert.equal(every((x: number) => x >= 0)([-1, 2, 3]), false);\n *\n * @since 2.9.0\n */\nexports.every = RA.every;\n/**\n * `some` tells if the provided predicate holds true at least for one element in the `Array`.\n *\n * @example\n * import { some } from 'fp-ts/Array'\n *\n * assert.equal(some((x: number) => x >= 0)([1, 2, 3]), true);\n * assert.equal(some((x: number) => x >= 10)([1, 2, 3]), false);\n *\n * @since 2.9.0\n */\nvar some = function (predicate) { return function (as) { return as.some(predicate); }; };\nexports.some = some;\n/**\n * Alias of [`some`](#some)\n *\n * @since 2.11.0\n */\nexports.exists = exports.some;\n/**\n * Places an element in between members of an `Array`, then folds the results using the provided `Monoid`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(intercalate(S.Monoid)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nexports.intercalate = RA.intercalate;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of(_.emptyRecord);\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n/**\n * Use `NonEmptyArray` module instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexports.range = NEA.range;\n/**\n * Use a new `[]` instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nexports.empty = [];\n/**\n * Use `prepend` instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexports.cons = NEA.cons;\n/**\n * Use `append` instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexports.snoc = NEA.snoc;\n/**\n * Use `prependAll` instead\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\nexports.prependToAll = exports.prependAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.array = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    mapWithIndex: _mapWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    alt: _alt,\n    zero: exports.zero,\n    unfold: exports.unfold,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    extend: _extend,\n    wither: _wither,\n    wilt: _wilt\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getApplicativeComposition = exports.getApplicativeMonoid = void 0;\n/**\n * The `Applicative` type class extends the `Apply` type class with a `of` function, which can be used to create values\n * of type `f a` from values of type `a`.\n *\n * Where `Apply` provides the ability to lift functions of two or more arguments to functions whose arguments are\n * wrapped using `f`, and `Functor` provides the ability to lift functions of one argument, `pure` can be seen as the\n * function which lifts functions of _zero_ arguments. That is, `Applicative` functors support a lifting operation for\n * any number of function arguments.\n *\n * Instances must satisfy the following laws in addition to the `Apply` laws:\n *\n * 1. Identity: `A.ap(A.of(a => a), fa) <-> fa`\n * 2. Homomorphism: `A.ap(A.of(ab), A.of(a)) <-> A.of(ab(a))`\n * 3. Interchange: `A.ap(fab, A.of(a)) <-> A.ap(A.of(ab => ab(a)), fab)`\n *\n * Note. `Functor`'s `map` can be derived: `A.map(x, f) = A.ap(A.of(f), x)`\n *\n * @since 2.0.0\n */\nvar Apply_1 = require(\"./Apply\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nfunction getApplicativeMonoid(F) {\n    var f = Apply_1.getApplySemigroup(F);\n    return function (M) { return ({\n        concat: f(M).concat,\n        empty: F.of(M.empty)\n    }); };\n}\nexports.getApplicativeMonoid = getApplicativeMonoid;\n/** @deprecated */\nfunction getApplicativeComposition(F, G) {\n    var map = Functor_1.getFunctorComposition(F, G).map;\n    var _ap = Apply_1.ap(F, G);\n    return {\n        map: map,\n        of: function (a) { return F.of(G.of(a)); },\n        ap: function (fgab, fga) { return function_1.pipe(fgab, _ap(fga)); }\n    };\n}\nexports.getApplicativeComposition = getApplicativeComposition;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.and = exports.or = exports.not = exports.Contravariant = exports.getMonoidAll = exports.getSemigroupAll = exports.getMonoidAny = exports.getSemigroupAny = exports.URI = exports.contramap = void 0;\nvar function_1 = require(\"./function\");\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\nvar contramap_ = function (predicate, f) { return function_1.pipe(predicate, exports.contramap(f)); };\n/**\n * @category Contravariant\n * @since 2.11.0\n */\nvar contramap = function (f) { return function (predicate) { return function_1.flow(f, predicate); }; };\nexports.contramap = contramap;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.URI = 'Predicate';\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getSemigroupAny = function () { return ({\n    concat: function (first, second) { return function_1.pipe(first, exports.or(second)); }\n}); };\nexports.getSemigroupAny = getSemigroupAny;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getMonoidAny = function () { return ({\n    concat: exports.getSemigroupAny().concat,\n    empty: function_1.constFalse\n}); };\nexports.getMonoidAny = getMonoidAny;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getSemigroupAll = function () { return ({\n    concat: function (first, second) { return function_1.pipe(first, exports.and(second)); }\n}); };\nexports.getSemigroupAll = getSemigroupAll;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getMonoidAll = function () { return ({\n    concat: exports.getSemigroupAll().concat,\n    empty: function_1.constTrue\n}); };\nexports.getMonoidAll = getMonoidAll;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.Contravariant = {\n    URI: exports.URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nvar not = function (predicate) { return function (a) { return !predicate(a); }; };\nexports.not = not;\n/**\n * @since 2.11.0\n */\nvar or = function (second) { return function (first) { return function (a) { return first(a) || second(a); }; }; };\nexports.or = or;\n/**\n * @since 2.11.0\n */\nvar and = function (second) { return function (first) { return function (a) { return first(a) && second(a); }; }; };\nexports.and = and;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromEither = exports.MonadThrow = exports.throwError = exports.Witherable = exports.wilt = exports.wither = exports.Traversable = exports.sequence = exports.traverse = exports.Filterable = exports.partitionMap = exports.partition = exports.filterMap = exports.filter = exports.Compactable = exports.separate = exports.compact = exports.Extend = exports.extend = exports.Alternative = exports.guard = exports.Zero = exports.zero = exports.Alt = exports.alt = exports.altW = exports.Foldable = exports.reduceRight = exports.foldMap = exports.reduce = exports.Monad = exports.Chain = exports.chain = exports.Applicative = exports.Apply = exports.ap = exports.Pointed = exports.of = exports.Functor = exports.map = exports.getMonoid = exports.getOrd = exports.getEq = exports.getShow = exports.URI = exports.getRight = exports.getLeft = exports.fromPredicate = exports.some = exports.none = void 0;\nexports.getLastMonoid = exports.getFirstMonoid = exports.getApplyMonoid = exports.getApplySemigroup = exports.option = exports.mapNullable = exports.getRefinement = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.traverseReadonlyArrayWithIndex = exports.traverseReadonlyNonEmptyArrayWithIndex = exports.ApT = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.exists = exports.elem = exports.toUndefined = exports.toNullable = exports.chainNullableK = exports.fromNullableK = exports.tryCatchK = exports.tryCatch = exports.fromNullable = exports.chainFirstEitherK = exports.chainEitherK = exports.fromEitherK = exports.duplicate = exports.chainFirst = exports.flatten = exports.apSecond = exports.apFirst = exports.flap = exports.getOrElse = exports.getOrElseW = exports.fold = exports.match = exports.foldW = exports.matchW = exports.isNone = exports.isSome = exports.FromEither = void 0;\nvar Applicative_1 = require(\"./Applicative\");\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar FromEither_1 = require(\"./FromEither\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar Predicate_1 = require(\"./Predicate\");\nvar Semigroup_1 = require(\"./Semigroup\");\nvar Separated_1 = require(\"./Separated\");\nvar Witherable_1 = require(\"./Witherable\");\nvar Zero_1 = require(\"./Zero\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * `None` doesn't have a constructor, instead you can use it directly as a value. Represents a missing value.\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.none = _.none;\n/**\n * Constructs a `Some`. Represents an optional value that exists.\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.some = _.some;\nfunction fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? exports.some(a) : exports.none); };\n}\nexports.fromPredicate = fromPredicate;\n/**\n * Returns the `Left` value of an `Either` if possible.\n *\n * @example\n * import { getLeft, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getLeft(right(1)), none)\n * assert.deepStrictEqual(getLeft(left('a')), some('a'))\n *\n * @category constructors\n * @since 2.0.0\n */\nvar getLeft = function (ma) { return (ma._tag === 'Right' ? exports.none : exports.some(ma.left)); };\nexports.getLeft = getLeft;\n/**\n * Returns the `Right` value of an `Either` if possible.\n *\n * @example\n * import { getRight, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getRight(right(1)), some(1))\n * assert.deepStrictEqual(getRight(left('a')), none)\n *\n * @category constructors\n * @since 2.0.0\n */\nvar getRight = function (ma) { return (ma._tag === 'Left' ? exports.none : exports.some(ma.right)); };\nexports.getRight = getRight;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\nvar _foldMap = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\nvar _traverse = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\nvar _filter = function (fa, predicate) { return function_1.pipe(fa, exports.filter(predicate)); };\n/* istanbul ignore next */\nvar _filterMap = function (fa, f) { return function_1.pipe(fa, exports.filterMap(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return function_1.pipe(wa, exports.extend(f)); };\n/* istanbul ignore next */\nvar _partition = function (fa, predicate) {\n    return function_1.pipe(fa, exports.partition(predicate));\n};\n/* istanbul ignore next */\nvar _partitionMap = function (fa, f) { return function_1.pipe(fa, exports.partitionMap(f)); };\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Option';\n/**\n * @category instances\n * @since 2.0.0\n */\nvar getShow = function (S) { return ({\n    show: function (ma) { return (exports.isNone(ma) ? 'none' : \"some(\" + S.show(ma.value) + \")\"); }\n}); };\nexports.getShow = getShow;\n/**\n * @example\n * import { none, some, getEq } from 'fp-ts/Option'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals(none, none), true)\n * assert.strictEqual(E.equals(none, some(1)), false)\n * assert.strictEqual(E.equals(some(1), none), false)\n * assert.strictEqual(E.equals(some(1), some(2)), false)\n * assert.strictEqual(E.equals(some(1), some(1)), true)\n *\n * @category instances\n * @since 2.0.0\n */\nvar getEq = function (E) { return ({\n    equals: function (x, y) { return x === y || (exports.isNone(x) ? exports.isNone(y) : exports.isNone(y) ? false : E.equals(x.value, y.value)); }\n}); };\nexports.getEq = getEq;\n/**\n * The `Ord` instance allows `Option` values to be compared with\n * `compare`, whenever there is an `Ord` instance for\n * the type the `Option` contains.\n *\n * `None` is considered to be less than any `Some` value.\n *\n *\n * @example\n * import { none, some, getOrd } from 'fp-ts/Option'\n * import * as N from 'fp-ts/number'\n *\n * const O = getOrd(N.Ord)\n * assert.strictEqual(O.compare(none, none), 0)\n * assert.strictEqual(O.compare(none, some(1)), -1)\n * assert.strictEqual(O.compare(some(1), none), 1)\n * assert.strictEqual(O.compare(some(1), some(2)), -1)\n * assert.strictEqual(O.compare(some(1), some(1)), 0)\n *\n * @category instances\n * @since 2.0.0\n */\nvar getOrd = function (O) { return ({\n    equals: exports.getEq(O).equals,\n    compare: function (x, y) { return (x === y ? 0 : exports.isSome(x) ? (exports.isSome(y) ? O.compare(x.value, y.value) : 1) : -1); }\n}); };\nexports.getOrd = getOrd;\n/**\n * Monoid returning the left-most non-`None` value. If both operands are `Some`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * | x       | y       | concat(x, y)       |\n * | ------- | ------- | ------------------ |\n * | none    | none    | none               |\n * | some(a) | none    | some(a)            |\n * | none    | some(b) | some(b)            |\n * | some(a) | some(b) | some(concat(a, b)) |\n *\n * @example\n * import { getMonoid, some, none } from 'fp-ts/Option'\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * const M = getMonoid(SemigroupSum)\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(3))\n *\n * @category instances\n * @since 2.0.0\n */\nvar getMonoid = function (S) { return ({\n    concat: function (x, y) { return (exports.isNone(x) ? y : exports.isNone(y) ? x : exports.some(S.concat(x.value, y.value))); },\n    empty: exports.none\n}); };\nexports.getMonoid = getMonoid;\n/**\n * @category instance operations\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) {\n    return exports.isNone(fa) ? exports.none : exports.some(f(fa.value));\n}; };\nexports.map = map;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * @category instance operations\n * @since 2.7.0\n */\nexports.of = exports.some;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\nvar ap = function (fa) { return function (fab) {\n    return exports.isNone(fab) ? exports.none : exports.isNone(fa) ? exports.none : exports.some(fab.value(fa.value));\n}; };\nexports.ap = ap;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category instance operations\n * @since 2.0.0\n */\nvar chain = function (f) { return function (ma) {\n    return exports.isNone(ma) ? exports.none : f(ma.value);\n}; };\nexports.chain = chain;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\nvar reduce = function (b, f) { return function (fa) {\n    return exports.isNone(fa) ? b : f(b, fa.value);\n}; };\nexports.reduce = reduce;\n/**\n * @category instance operations\n * @since 2.0.0\n */\nvar foldMap = function (M) { return function (f) { return function (fa) {\n    return exports.isNone(fa) ? M.empty : f(fa.value);\n}; }; };\nexports.foldMap = foldMap;\n/**\n * @category instance operations\n * @since 2.0.0\n */\nvar reduceRight = function (b, f) { return function (fa) {\n    return exports.isNone(fa) ? b : f(fa.value, b);\n}; };\nexports.reduceRight = reduceRight;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category instance operations\n * @since 2.9.0\n */\nvar altW = function (that) { return function (fa) {\n    return exports.isNone(fa) ? that() : fa;\n}; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `Option` returns the left-most non-`None` value.\n *\n * @example\n * import * as O from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some('a'),\n *     O.alt(() => O.some('b'))\n *   ),\n *   O.some('a')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none,\n *     O.alt(() => O.some('b'))\n *   ),\n *   O.some('b')\n * )\n *\n * @category instance operations\n * @since 2.0.0\n */\nexports.alt = exports.altW;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instance operations\n * @since 2.7.0\n */\nvar zero = function () { return exports.none; };\nexports.zero = zero;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.Zero = {\n    URI: exports.URI,\n    zero: exports.zero\n};\n/**\n * @category constructors\n * @since 2.11.0\n */\nexports.guard = \n/*#__PURE__*/\nZero_1.guard(exports.Zero, exports.Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alternative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    alt: _alt,\n    zero: exports.zero\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\nvar extend = function (f) { return function (wa) {\n    return exports.isNone(wa) ? exports.none : exports.some(f(wa));\n}; };\nexports.extend = extend;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexports.compact = \n/*#__PURE__*/\nexports.chain(function_1.identity);\nvar defaultSeparated = \n/*#__PURE__*/\nSeparated_1.separated(exports.none, exports.none);\n/**\n * @category instance operations\n * @since 2.0.0\n */\nvar separate = function (ma) {\n    return exports.isNone(ma) ? defaultSeparated : Separated_1.separated(exports.getLeft(ma.value), exports.getRight(ma.value));\n};\nexports.separate = separate;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Compactable = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\nvar filter = function (predicate) { return function (fa) { return (exports.isNone(fa) ? exports.none : predicate(fa.value) ? fa : exports.none); }; };\nexports.filter = filter;\n/**\n * @category instance operations\n * @since 2.0.0\n */\nvar filterMap = function (f) { return function (fa) {\n    return exports.isNone(fa) ? exports.none : f(fa.value);\n}; };\nexports.filterMap = filterMap;\n/**\n * @category instance operations\n * @since 2.0.0\n */\nvar partition = function (predicate) { return function (fa) { return Separated_1.separated(_filter(fa, Predicate_1.not(predicate)), _filter(fa, predicate)); }; };\nexports.partition = partition;\n/**\n * @category instance operations\n * @since 2.0.0\n */\nvar partitionMap = function (f) { return function_1.flow(exports.map(f), exports.separate); };\nexports.partitionMap = partitionMap;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Filterable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instance operations\n * @since 2.6.3\n */\nvar traverse = function (F) { return function (f) { return function (ta) { return (exports.isNone(ta) ? F.of(exports.none) : F.map(f(ta.value), exports.some)); }; }; };\nexports.traverse = traverse;\n/**\n * @category instance operations\n * @since 2.6.3\n */\nvar sequence = function (F) { return function (ta) { return (exports.isNone(ta) ? F.of(exports.none) : F.map(ta.value, exports.some)); }; };\nexports.sequence = sequence;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\nvar _wither = \n/*#__PURE__*/\nWitherable_1.witherDefault(exports.Traversable, exports.Compactable);\nvar _wilt = \n/*#__PURE__*/\nWitherable_1.wiltDefault(exports.Traversable, exports.Compactable);\n/**\n * @category instance operations\n * @since 2.6.5\n */\nvar wither = function (F) {\n    var _witherF = _wither(F);\n    return function (f) { return function (fa) { return _witherF(fa, f); }; };\n};\nexports.wither = wither;\n/**\n * @category instance operations\n * @since 2.6.5\n */\nvar wilt = function (F) {\n    var _wiltF = _wilt(F);\n    return function (f) { return function (fa) { return _wiltF(fa, f); }; };\n};\nexports.wilt = wilt;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Witherable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * @category instance operations\n * @since 2.7.0\n */\nvar throwError = function () { return exports.none; };\nexports.throwError = throwError;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.MonadThrow = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain,\n    throwError: exports.throwError\n};\n/**\n * Transforms an `Either` to an `Option` discarding the error.\n *\n * Alias of [getRight](#getright)\n *\n * @category natural transformations\n * @since 2.0.0\n */\nexports.fromEither = exports.getRight;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.FromEither = {\n    URI: exports.URI,\n    fromEither: exports.fromEither\n};\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if the option is an instance of `Some`, `false` otherwise.\n *\n * @example\n * import { some, none, isSome } from 'fp-ts/Option'\n *\n * assert.strictEqual(isSome(some(1)), true)\n * assert.strictEqual(isSome(none), false)\n *\n * @category refinements\n * @since 2.0.0\n */\nexports.isSome = _.isSome;\n/**\n * Returns `true` if the option is `None`, `false` otherwise.\n *\n * @example\n * import { some, none, isNone } from 'fp-ts/Option'\n *\n * assert.strictEqual(isNone(some(1)), false)\n * assert.strictEqual(isNone(none), true)\n *\n * @category refinements\n * @since 2.0.0\n */\nvar isNone = function (fa) { return fa._tag === 'None'; };\nexports.isNone = isNone;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.10.0\n */\nvar matchW = function (onNone, onSome) { return function (ma) {\n    return exports.isNone(ma) ? onNone() : onSome(ma.value);\n}; };\nexports.matchW = matchW;\n/**\n * Alias of [`matchW`](#matchw).\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.foldW = exports.matchW;\n/**\n * Takes a (lazy) default value, a function, and an `Option` value, if the `Option` value is `None` the default value is\n * returned, otherwise the function is applied to the value inside the `Some` and the result is returned.\n *\n * @example\n * import { some, none, match } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     match(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a some containing 1'\n * )\n *\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     match(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a none'\n * )\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.match = exports.matchW;\n/**\n * Alias of [`match`](#match).\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.fold = exports.match;\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * @category destructors\n * @since 2.6.0\n */\nvar getOrElseW = function (onNone) { return function (ma) { return (exports.isNone(ma) ? onNone() : ma.value); }; };\nexports.getOrElseW = getOrElseW;\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns the given default value\n *\n * @example\n * import { some, none, getOrElse } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.getOrElse = exports.getOrElseW;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#__PURE__*/\nFunctor_1.flap(exports.Functor);\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.flatten = exports.compact;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * @category combinators\n * @since 2.11.0\n */\nexports.fromEitherK = \n/*#__PURE__*/\nFromEither_1.fromEitherK(exports.FromEither);\n/**\n * @category combinators\n * @since 2.11.0\n */\nexports.chainEitherK = \n/*#__PURE__*/\nFromEither_1.chainEitherK(exports.FromEither, exports.Chain);\n/**\n * @category combinators\n * @since 2.12.0\n */\nexports.chainFirstEitherK = \n/*#__PURE__*/\nFromEither_1.chainFirstEitherK(exports.FromEither, exports.Chain);\n// -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n/**\n * Constructs a new `Option` from a nullable type. If the value is `null` or `undefined`, returns `None`, otherwise\n * returns the value wrapped in a `Some`.\n *\n * @example\n * import { none, some, fromNullable } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(fromNullable(undefined), none)\n * assert.deepStrictEqual(fromNullable(null), none)\n * assert.deepStrictEqual(fromNullable(1), some(1))\n *\n * @category interop\n * @since 2.0.0\n */\nvar fromNullable = function (a) { return (a == null ? exports.none : exports.some(a)); };\nexports.fromNullable = fromNullable;\n/**\n * Transforms an exception into an `Option`. If `f` throws, returns `None`, otherwise returns the output wrapped in a\n * `Some`.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @example\n * import { none, some, tryCatch } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   tryCatch(() => {\n *     throw new Error()\n *   }),\n *   none\n * )\n * assert.deepStrictEqual(tryCatch(() => 1), some(1))\n *\n * @category interop\n * @since 2.0.0\n */\nvar tryCatch = function (f) {\n    try {\n        return exports.some(f());\n    }\n    catch (e) {\n        return exports.none;\n    }\n};\nexports.tryCatch = tryCatch;\n/**\n * Converts a function that may throw to one returning a `Option`.\n *\n * @category interop\n * @since 2.10.0\n */\nvar tryCatchK = function (f) { return function () {\n    var a = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        a[_i] = arguments[_i];\n    }\n    return exports.tryCatch(function () { return f.apply(void 0, a); });\n}; };\nexports.tryCatchK = tryCatchK;\n/**\n * Returns a *smart constructor* from a function that returns a nullable value.\n *\n * @example\n * import { fromNullableK, none, some } from 'fp-ts/Option'\n *\n * const f = (s: string): number | undefined => {\n *   const n = parseFloat(s)\n *   return isNaN(n) ? undefined : n\n * }\n *\n * const g = fromNullableK(f)\n *\n * assert.deepStrictEqual(g('1'), some(1))\n * assert.deepStrictEqual(g('a'), none)\n *\n * @category interop\n * @since 2.9.0\n */\nvar fromNullableK = function (f) { return function_1.flow(f, exports.fromNullable); };\nexports.fromNullableK = fromNullableK;\n/**\n * This is `chain` + `fromNullable`, useful when working with optional values.\n *\n * @example\n * import { some, none, fromNullable, chainNullableK } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Employee {\n *   readonly company?: {\n *     readonly address?: {\n *       readonly street?: {\n *         readonly name?: string\n *       }\n *     }\n *   }\n * }\n *\n * const employee1: Employee = { company: { address: { street: { name: 'high street' } } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee1.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   some('high street')\n * )\n *\n * const employee2: Employee = { company: { address: { street: {} } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee2.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   none\n * )\n *\n * @category interop\n * @since 2.9.0\n */\nvar chainNullableK = function (f) { return function (ma) {\n    return exports.isNone(ma) ? exports.none : exports.fromNullable(f(ma.value));\n}; };\nexports.chainNullableK = chainNullableK;\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `null`.\n *\n * @example\n * import { some, none, toNullable } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toNullable\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toNullable\n *   ),\n *   null\n * )\n *\n * @category interop\n * @since 2.0.0\n */\nexports.toNullable = \n/*#__PURE__*/\nexports.match(function_1.constNull, function_1.identity);\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `undefined`.\n *\n * @example\n * import { some, none, toUndefined } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toUndefined\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toUndefined\n *   ),\n *   undefined\n * )\n *\n * @category interop\n * @since 2.0.0\n */\nexports.toUndefined = \n/*#__PURE__*/\nexports.match(function_1.constUndefined, function_1.identity);\nfunction elem(E) {\n    return function (a, ma) {\n        if (ma === undefined) {\n            var elemE_1 = elem(E);\n            return function (ma) { return elemE_1(a, ma); };\n        }\n        return exports.isNone(ma) ? false : E.equals(a, ma.value);\n    };\n}\nexports.elem = elem;\n/**\n * Returns `true` if the predicate is satisfied by the wrapped value\n *\n * @example\n * import { some, none, exists } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 0)\n *   ),\n *   true\n * )\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 1)\n *   ),\n *   false\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     exists(n => n > 0)\n *   ),\n *   false\n * )\n *\n * @since 2.0.0\n */\nvar exists = function (predicate) { return function (ma) {\n    return exports.isNone(ma) ? false : predicate(ma.value);\n}; };\nexports.exists = exists;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of(_.emptyRecord);\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n// -------------------------------------------------------------------------------------\n// sequence T\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexports.ApT = \n/*#__PURE__*/\nexports.of(_.emptyReadonlyArray);\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyNonEmptyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.11.0\n */\nvar traverseReadonlyNonEmptyArrayWithIndex = function (f) { return function (as) {\n    var o = f(0, _.head(as));\n    if (exports.isNone(o)) {\n        return exports.none;\n    }\n    var out = [o.value];\n    for (var i = 1; i < as.length; i++) {\n        var o_1 = f(i, as[i]);\n        if (exports.isNone(o_1)) {\n            return exports.none;\n        }\n        out.push(o_1.value);\n    }\n    return exports.some(out);\n}; };\nexports.traverseReadonlyNonEmptyArrayWithIndex = traverseReadonlyNonEmptyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.11.0\n */\nvar traverseReadonlyArrayWithIndex = function (f) {\n    var g = exports.traverseReadonlyNonEmptyArrayWithIndex(f);\n    return function (as) { return (_.isNonEmpty(as) ? g(as) : exports.ApT); };\n};\nexports.traverseReadonlyArrayWithIndex = traverseReadonlyArrayWithIndex;\n/**\n * @since 2.9.0\n */\nexports.traverseArrayWithIndex = exports.traverseReadonlyArrayWithIndex;\n/**\n * @since 2.9.0\n */\nvar traverseArray = function (f) {\n    return exports.traverseReadonlyArrayWithIndex(function (_, a) { return f(a); });\n};\nexports.traverseArray = traverseArray;\n/**\n * @since 2.9.0\n */\nexports.sequenceArray = \n/*#__PURE__*/\nexports.traverseArray(function_1.identity);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n/**\n * Use `Refinement` module instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nfunction getRefinement(getOption) {\n    return function (a) { return exports.isSome(getOption(a)); };\n}\nexports.getRefinement = getRefinement;\n/**\n * Use [`chainNullableK`](#chainnullablek) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.mapNullable = exports.chainNullableK;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.option = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _ap,\n    chain: _chain,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    zero: exports.zero,\n    alt: _alt,\n    extend: _extend,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    wither: _wither,\n    wilt: _wilt,\n    throwError: exports.throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplySemigroup = \n/*#__PURE__*/\nApply_1.getApplySemigroup(exports.Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplyMonoid = \n/*#__PURE__*/\nApplicative_1.getApplicativeMonoid(exports.Applicative);\n/**\n * Use\n *\n * ```ts\n * import { first } from 'fp-ts/Semigroup'\n * import { getMonoid } from 'fp-ts/Option'\n *\n * getMonoid(first())\n * ```\n *\n * instead.\n *\n * Monoid returning the left-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(b) | some(b)      |\n * | some(a) | some(b) | some(a)      |\n *\n * @example\n * import { getFirstMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getFirstMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(2)), some(2))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(1))\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nvar getFirstMonoid = function () { return exports.getMonoid(Semigroup_1.first()); };\nexports.getFirstMonoid = getFirstMonoid;\n/**\n * Use\n *\n * ```ts\n * import { last } from 'fp-ts/Semigroup'\n * import { getMonoid } from 'fp-ts/Option'\n *\n * getMonoid(last())\n * ```\n *\n * instead.\n *\n * Monoid returning the right-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(b) | some(b)      |\n * | some(a) | some(b) | some(b)      |\n *\n * @example\n * import { getLastMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getLastMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(2)), some(2))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(2))\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nvar getLastMonoid = function () { return exports.getMonoid(Semigroup_1.last()); };\nexports.getLastMonoid = getLastMonoid;\n", "import * as A from 'fp-ts/lib/Array';\nimport * as O from 'fp-ts/lib/Option';\nimport { constVoid, pipe } from 'fp-ts/lib/function';\n\nimport { setElementStyle } from './dom';\nimport { type SceneInfo } from './sceneInfo';\n\nconst setElementScrollHeight = (sceneInfo: SceneInfo) =>\n  pipe(\n    sceneInfo.objs.container,\n    O.map((element) =>\n      pipe(\n        sceneInfo.scrollHeight,\n        O.fromPredicate((scrollHeight) => scrollHeight !== 0),\n        O.match(\n          () => constVoid,\n          (scrollHeight) =>\n            setElementStyle('height', scrollHeight, '{value}px'),\n        ),\n        (apply) => apply(element),\n      ),\n    ),\n  );\n\nconst setLayout = (sceneInfoArray: SceneInfo[]) =>\n  pipe(sceneInfoArray, A.map(setElementScrollHeight));\n\nexport { setLayout };\n", "import * as O from 'fp-ts/lib/Option';\nimport { pipe } from 'fp-ts/lib/function';\n\nconst getElementById = (id: string) => (document: Document) =>\n  pipe(document.getElementById(id), O.fromNullable);\n\nconst querySelector =\n  <T extends Element>(element: T) =>\n  (selector: string) =>\n    pipe(element.querySelector(selector), O.fromNullable);\n\nconst querySelectorAll =\n  <T extends Element>(element: T) =>\n  (selector: string) =>\n    Array.from(element.querySelectorAll(selector)) as HTMLElement[];\n\nconst addClassName =\n  <T extends Element>(className: string) =>\n  (element: T) => (element.classList.add(className), element);\n\nconst removeClassName =\n  <T extends Element>(className: string) =>\n  (element: T) => (element.classList.remove(className), element);\n\nconst setAttribute =\n  <T extends Element>(attribute: string, value: string) =>\n  (element: T) => (element.setAttribute(attribute, value), element);\n\nconst setElementStyle =\n  <T extends HTMLElement>(property: string, value: number, template?: string) =>\n  (element: T) =>\n    element.style.setProperty(\n      property,\n      template\n        ? template.replace('{value}', value.toString())\n        : value.toString(),\n    );\n\nconst removeChild =\n  <T extends Element>(child: Node) =>\n  (element: T) => (element.removeChild(child), element);\n\nconst addClassNameToBody = (className: string) => (document: Document) =>\n  pipe(document.body, addClassName(className));\n\nconst removeClassNameToBody = (className: string) => (document: Document) =>\n  pipe(document.body, removeClassName(className));\n\nconst setAttributeToBody =\n  (attribute: string, value: string) => (document: Document) =>\n    pipe(document.body, setAttribute(attribute, value));\n\nconst removeChildToBody = (child: Node) => (document: Document) =>\n  pipe(document.body, removeChild(child));\n\nconst addElementEventListener =\n  <K extends keyof HTMLElementEventMap>(\n    type: K,\n    listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => unknown,\n    options?: boolean | AddEventListenerOptions | undefined,\n  ) =>\n  (element: HTMLElement) => (\n    element.addEventListener(type, listener, options), element\n  );\n\nexport {\n  getElementById,\n  querySelector,\n  querySelectorAll,\n  addClassName,\n  removeClassName,\n  setAttribute,\n  removeChild,\n  setElementStyle,\n  addClassNameToBody,\n  removeClassNameToBody,\n  setAttributeToBody,\n  removeChildToBody,\n  addElementEventListener,\n};\n", "import type * as CSS from 'csstype';\nimport * as A from 'fp-ts/lib/Array';\nimport * as O from 'fp-ts/lib/Option';\nimport { pipe, constVoid } from 'fp-ts/lib/function';\n\nimport { SceneInfo } from './sceneInfo';\nimport { setElementStyle } from './dom';\nimport { playVideo } from './video';\n\ntype CSSValue = number;\ntype AnimationValue = {\n  start: CSSValue;\n  end: CSSValue;\n  template?: string;\n};\ntype AnimationValueWithTiming = {\n  start: CSSValue;\n  end: CSSValue;\n  template?: string;\n  timing: { start: number; end: number };\n};\ntype Animation = {\n  [key in keyof CSS.Properties]?:\n    | { in: AnimationValueWithTiming; out: AnimationValueWithTiming }\n    | AnimationValue;\n};\n\nconst getValue = (start: CSSValue, end: CSSValue) => (ratio: number) => {\n  if (typeof start === 'number' && typeof end === 'number') {\n    return O.some((end - start) * ratio + start);\n  }\n  return O.none;\n};\n\nconst getCalculatedCSSValue = (\n  value: AnimationValue | AnimationValueWithTiming,\n  currentSceneScrollHeight: number,\n  currentSceneScrollY: number,\n) =>\n  pipe(\n    value,\n    O.fromNullable,\n    O.match(\n      () => O.none,\n      (value) => {\n        const { start, end } = value;\n        const getValueByRatio = getValue(start, end);\n        if ('timing' in value) {\n          const { timing } = value;\n          const startHeight = timing.start * currentSceneScrollHeight;\n          const endHeight = timing.end * currentSceneScrollHeight;\n\n          if (\n            startHeight <= currentSceneScrollY &&\n            currentSceneScrollY <= endHeight\n          ) {\n            return getValueByRatio(\n              (currentSceneScrollY - startHeight) / (endHeight - startHeight),\n            );\n          }\n          if (currentSceneScrollY < startHeight) {\n            return O.some(start);\n          }\n          if (currentSceneScrollY > endHeight) {\n            return O.some(end);\n          }\n        }\n        return getValueByRatio(currentSceneScrollY / currentSceneScrollHeight);\n      },\n    ),\n  );\n\ntype InOutAnimationEntry = [\n  string,\n  Exclude<Animation[keyof CSS.Properties], undefined>,\n];\nconst getInOrOutAnimation =\n  (scrollRatio: number) =>\n  ([key, value]: InOutAnimationEntry) => {\n    if ('in' in value && 'out' in value) {\n      return pipe(\n        (value.in.timing.end + value.out.timing.start) / 2,\n        O.fromPredicate((median) => scrollRatio <= median),\n        O.match(\n          () => [key, value.out] as const,\n          () => [key, value.in] as const,\n        ),\n      );\n    }\n\n    return [key, value] as const;\n  };\n\ntype AnimationEntry = ReturnType<ReturnType<typeof getInOrOutAnimation>>;\nconst getCalculatedAnimationObject =\n  (currentSceneScrollHeight: number, currentSceneScrollY: number) =>\n  ([key, value]: AnimationEntry) => {\n    return {\n      key,\n      template: value.template,\n      value: getCalculatedCSSValue(\n        value,\n        currentSceneScrollHeight,\n        currentSceneScrollY,\n      ),\n    };\n  };\n\nconst getCalculatedAnimationObjects =\n  (currentSceneScrollHeight: number, currentSceneScrollY: number) =>\n  (animation: Animation) => {\n    const scrollRatio = currentSceneScrollY / currentSceneScrollHeight;\n    return pipe(\n      Object.entries(animation),\n      A.map((animationEntry) =>\n        pipe(\n          animationEntry,\n          getInOrOutAnimation(scrollRatio),\n          getCalculatedAnimationObject(\n            currentSceneScrollHeight,\n            currentSceneScrollY,\n          ),\n        ),\n      ),\n    );\n  };\n\ntype AnimationObjects = ReturnType<\n  ReturnType<typeof getCalculatedAnimationObjects>\n>;\nconst applyAnimationObjectStyleToElement =\n  (element: HTMLElement) => (animationObjects: AnimationObjects) =>\n    pipe(\n      animationObjects,\n      A.map(({ key, value, template }) =>\n        pipe(\n          value,\n          O.match(\n            () => constVoid,\n            (cssValue) => setElementStyle(key, cssValue, template),\n          ),\n          (setStyle) => setStyle(element),\n        ),\n      ),\n    );\n\nconst playAnimation =\n  (sceneInfoArray: SceneInfo[]) =>\n  (currentScene: number, prevScrollHeight: number, scrollY: number) =>\n    pipe(\n      sceneInfoArray[currentScene],\n      O.fromNullable,\n      O.match(\n        constVoid,\n        ({ objs: { elements }, animations, scrollHeight, type, canvas }) => {\n          const currentSceneScrollY = scrollY - prevScrollHeight;\n          if (type === 'sticky') {\n            pipe(\n              animations,\n              A.map(\n                getCalculatedAnimationObjects(\n                  scrollHeight,\n                  currentSceneScrollY,\n                ),\n              ),\n              A.zip(elements),\n              A.map(([animationObjects, element]) =>\n                pipe(\n                  animationObjects,\n                  applyAnimationObjectStyleToElement(element),\n                ),\n              ),\n            );\n          }\n\n          pipe(canvas, playVideo(scrollHeight, currentSceneScrollY));\n        },\n      ),\n    );\n\nexport {\n  type AnimationValue,\n  type Animation,\n  playAnimation,\n  getCalculatedCSSValue,\n};\n", "import { constUndefined, flow, identity, pipe } from 'fp-ts/lib/function';\nimport * as O from 'fp-ts/lib/Option';\nimport * as NEA from 'fp-ts/lib/NonEmptyArray';\nimport { setAttribute } from './dom';\n\nimport { type SceneInfo } from './sceneInfo';\nimport { getCalculatedCSSValue } from './animation';\nimport { setSceneInfoValue } from './scene';\n\nconst getCanvasContext = (canvasElement: HTMLCanvasElement) =>\n  canvasElement.getContext('2d');\n\nconst drawImageToConvasContext =\n  (image: HTMLImageElement) =>\n  (canvasContext: ReturnType<typeof getCanvasContext>) =>\n    pipe(\n      canvasContext,\n      O.fromNullable,\n      O.map((canvasContext) => canvasContext.drawImage(image, 0, 0)),\n    );\n\nconst getImagePath = (folder: string) => (num: number) =>\n  `${folder}/${num.toString().padStart(4, '0')}.JPG`;\n\nconst createImage = (src: string) =>\n  pipe(new Image(), setAttribute('src', src));\n\nconst getVideoImages = (sceneInfo: SceneInfo) =>\n  pipe(\n    sceneInfo.canvas,\n    O.fromNullable,\n    O.map((canvas) =>\n      pipe(\n        NEA.range(0, canvas.videoImageCount - 1),\n        NEA.mapWithIndex(getImagePath(canvas.folder)),\n        NEA.map(createImage),\n      ),\n    ),\n  );\n\nconst setVideoImages = (sceneInfo: SceneInfo) =>\n  pipe(\n    sceneInfo,\n    getVideoImages,\n    O.match(() => [] as Array<HTMLImageElement>, identity),\n    (videoImages) =>\n      pipe(\n        sceneInfo.canvas,\n        O.fromNullable,\n        O.match(constUndefined, (canvas) => ({ ...canvas, videoImages })),\n        setSceneInfoValue('canvas', sceneInfo),\n      ),\n  );\n\nconst playVideo =\n  (currentSceneScrollHeight: number, currentSceneScrollY: number) =>\n  (canvas: SceneInfo['canvas']) => {\n    pipe(\n      canvas,\n      O.fromNullable,\n      O.map(({ imageSequence, element, videoImages }) =>\n        pipe(\n          getCalculatedCSSValue(\n            imageSequence,\n            currentSceneScrollHeight,\n            currentSceneScrollY,\n          ),\n          O.map(Math.round),\n          O.map((calculatedImageSequence) =>\n            pipe(\n              element,\n              O.map(\n                flow(\n                  getCanvasContext,\n                  drawImageToConvasContext(\n                    videoImages[calculatedImageSequence],\n                  ),\n                ),\n              ),\n            ),\n          ),\n        ),\n      ),\n    );\n  };\n\nexport { getVideoImages, setVideoImages, playVideo };\n", "import { constUndefined, pipe } from 'fp-ts/lib/function';\nimport * as A from 'fp-ts/lib/Array';\nimport * as O from 'fp-ts/lib/Option';\nimport { getElementById, querySelector, querySelectorAll } from './dom';\nimport { type SceneInfo } from './sceneInfo';\nimport { setVideoImages } from './video';\n\nconst getScrollSectionId = (index: number) => `scroll-section-${index}`;\n\nconst getScrollSectionElement = (document: Document) => (index: number) =>\n  pipe(document, getElementById(getScrollSectionId(index)));\n\nconst setSceneInfoElementObject =\n  (document: Document) => (index: number, sceneInfo: SceneInfo) =>\n    pipe(index, getScrollSectionElement(document), (optionElement) =>\n      pipe(\n        optionElement,\n        O.match(\n          () => sceneInfo,\n          (element) =>\n            pipe(\n              sceneInfo.selectors,\n              A.map(querySelectorAll(element)),\n              A.flatten,\n              (elements) => ({\n                ...sceneInfo.objs,\n                container: optionElement,\n                elements,\n              }),\n              setSceneInfoValue('objs', sceneInfo),\n            ),\n        ),\n      ),\n    );\n\nconst setCanvasElement =\n  (document: Document) => (index: number, sceneInfo: SceneInfo) =>\n    pipe(\n      sceneInfo.canvas,\n      O.fromNullable,\n      O.match(constUndefined, (canvas) =>\n        pipe(index, getScrollSectionElement(document), (optionElement) =>\n          pipe(\n            optionElement,\n            O.match(constUndefined, (element) =>\n              pipe(\n                querySelector(element)(\n                  '.video-canvas',\n                ) as O.Option<HTMLCanvasElement>,\n                (element) => ({ ...canvas, element }),\n              ),\n            ),\n          ),\n        ),\n      ),\n      setSceneInfoValue('canvas', sceneInfo),\n    );\n\nconst setSceneInfoValue =\n  <T extends keyof SceneInfo>(key: T, sceneInfo: SceneInfo) =>\n  (value: SceneInfo[T]) => ({ ...sceneInfo, [key]: value });\n\nconst getSceneInfoValue =\n  <T extends keyof SceneInfo>(key: T) =>\n  (sceneInfo: SceneInfo) =>\n    sceneInfo[key];\n\nconst getElementScrollHeight =\n  (innerHeight: number) => (sceneInfo: SceneInfo) =>\n    pipe(\n      sceneInfo,\n      O.fromPredicate((sceneInfo) => sceneInfo.type === 'sticky'),\n      O.match(\n        () =>\n          pipe(\n            sceneInfo.objs.container,\n            O.match(\n              () => O.none,\n              (element) => O.some(element.offsetHeight),\n            ),\n          ),\n        () => O.some(innerHeight * sceneInfo.heightMultiple),\n      ),\n    );\n\nconst setScrollHeight = (innerHeight: number) => (sceneInfo: SceneInfo) =>\n  pipe(\n    sceneInfo,\n    getElementScrollHeight(innerHeight),\n    O.match(() => sceneInfo, setSceneInfoValue('scrollHeight', sceneInfo)),\n  );\n\nconst getCalculatedSceneInfoArray = (\n  window: Window,\n  sceneInfoArray: SceneInfo[],\n  isFirstLoad = false,\n) =>\n  pipe(\n    isFirstLoad,\n    O.fromPredicate(Boolean),\n    O.match(\n      () => sceneInfoArray,\n      () =>\n        pipe(\n          sceneInfoArray,\n          A.map(setVideoImages),\n          A.mapWithIndex(setSceneInfoElementObject(window.document)),\n          A.mapWithIndex(setCanvasElement(window.document)),\n        ),\n    ),\n    A.map(setScrollHeight(window.innerHeight)),\n  );\n\nexport { setSceneInfoValue, getSceneInfoValue, getCalculatedSceneInfoArray };\n", "import type { Animation, AnimationValue } from './animation';\nimport * as O from 'fp-ts/lib/Option';\n\ntype SceneType = 'sticky' | 'normal';\ntype SceneInfo = {\n  // \uBE0C\uB77C\uC6B0\uC800 \uB192\uC774\uC758 \uBC30\uC218\n  heightMultiple: number;\n  scrollHeight: number;\n  type: SceneType;\n  selectors: Array<string>;\n  canvas?: {\n    element: O.Option<HTMLCanvasElement>;\n    folder: string;\n    videoImageCount: number;\n    imageSequence: AnimationValue;\n    videoImages: Array<HTMLImageElement>;\n  };\n  objs: {\n    container: O.Option<HTMLElement>;\n    elements: Array<HTMLElement>;\n  };\n  animations: Array<Animation>;\n};\n\nconst sceneInfoArray: SceneInfo[] = [\n  {\n    // #scroll-section-0\n    type: 'sticky',\n    heightMultiple: 5,\n    scrollHeight: 0,\n    selectors: ['.sticky-element:not(.sticky-element-canvas)'],\n    canvas: {\n      element: O.none,\n      videoImageCount: 300,\n      folder: './video/001',\n      imageSequence: { start: 0, end: 299 },\n      videoImages: [],\n    },\n    objs: {\n      container: O.none,\n      elements: [],\n    },\n    animations: [\n      {\n        // #scroll-section-0 .sticky-element:nth-child(1)\n        opacity: {\n          in: { start: 0, end: 1, timing: { start: 0.1, end: 0.2 } },\n          out: { start: 1, end: 0, timing: { start: 0.25, end: 0.3 } },\n        },\n        transform: {\n          in: {\n            start: 20,\n            end: 0,\n            template: 'translate3d(0, {value}%, 0)',\n            timing: { start: 0.1, end: 0.2 },\n          },\n          out: {\n            start: 0,\n            end: -20,\n            template: 'translate3d(0, {value}%, 0)',\n            timing: { start: 0.25, end: 0.3 },\n          },\n        },\n      },\n      {\n        // #scroll-section-0 .sticky-element:nth-child(2)\n        opacity: {\n          in: { start: 0, end: 1, timing: { start: 0.3, end: 0.4 } },\n          out: { start: 1, end: 0, timing: { start: 0.45, end: 0.5 } },\n        },\n        transform: {\n          in: {\n            start: 20,\n            end: 0,\n            template: 'translate3d(0, {value}%, 0)',\n            timing: { start: 0.3, end: 0.4 },\n          },\n          out: {\n            start: 0,\n            end: -20,\n            template: 'translate3d(0, {value}%, 0)',\n            timing: { start: 0.45, end: 0.5 },\n          },\n        },\n      },\n      {\n        // #scroll-section-0 .sticky-element:nth-child(3)\n        opacity: {\n          in: { start: 0, end: 1, timing: { start: 0.5, end: 0.6 } },\n          out: { start: 1, end: 0, timing: { start: 0.65, end: 0.7 } },\n        },\n        transform: {\n          in: {\n            start: 20,\n            end: 0,\n            template: 'translate3d(0, {value}%, 0)',\n            timing: { start: 0.5, end: 0.6 },\n          },\n          out: {\n            start: 0,\n            end: -20,\n            template: 'translate3d(0, {value}%, 0)',\n            timing: { start: 0.65, end: 0.7 },\n          },\n        },\n      },\n      {\n        // #scroll-section-0 .sticky-element:nth-child(4)\n        opacity: {\n          in: { start: 0, end: 1, timing: { start: 0.7, end: 0.8 } },\n          out: { start: 1, end: 0, timing: { start: 0.85, end: 0.9 } },\n        },\n        transform: {\n          in: {\n            start: 20,\n            end: 0,\n            template: 'translate3d(0, {value}%, 0)',\n            timing: { start: 0.7, end: 0.8 },\n          },\n          out: {\n            start: 0,\n            end: -20,\n            template: 'translate3d(0, {value}%, 0)',\n            timing: { start: 0.85, end: 0.9 },\n          },\n        },\n      },\n    ],\n  },\n  {\n    // #scroll-section-1\n    type: 'normal',\n    heightMultiple: 5,\n    scrollHeight: 0,\n    selectors: [],\n    objs: {\n      container: O.none,\n      elements: [],\n    },\n    animations: [],\n  },\n  {\n    // #scroll-section-2\n    type: 'sticky',\n    heightMultiple: 5,\n    scrollHeight: 0,\n    selectors: ['.sticky-element', '.pin'],\n    objs: {\n      container: O.none,\n      elements: [],\n    },\n    animations: [\n      {\n        // #scroll-section-2 .sticky-element:nth-child(1)\n        opacity: {\n          in: { start: 0, end: 1, timing: { start: 0.15, end: 0.2 } },\n          out: { start: 1, end: 0, timing: { start: 0.3, end: 0.35 } },\n        },\n        transform: {\n          in: {\n            start: 20,\n            end: 0,\n            template: 'translate3d(0, {value}%, 0)',\n            timing: { start: 0.15, end: 0.2 },\n          },\n          out: {\n            start: 0,\n            end: -20,\n            template: 'translate3d(0, {value}%, 0)',\n            timing: { start: 0.3, end: 0.35 },\n          },\n        },\n      },\n      {\n        // #scroll-section-2 .sticky-element:nth-child(2)\n        opacity: {\n          in: { start: 0, end: 1, timing: { start: 0.5, end: 0.55 } },\n          out: { start: 1, end: 0, timing: { start: 0.58, end: 0.63 } },\n        },\n        transform: {\n          in: {\n            start: 30,\n            end: 0,\n            template: 'translate3d(0, {value}%, 0)',\n            timing: { start: 0.5, end: 0.55 },\n          },\n          out: {\n            start: 0,\n            end: -20,\n            template: 'translate3d(0, {value}%, 0)',\n            timing: { start: 0.58, end: 0.63 },\n          },\n        },\n      },\n      {\n        // #scroll-section-2 .sticky-element:nth-child(3)\n        opacity: {\n          in: { start: 0, end: 1, timing: { start: 0.72, end: 0.77 } },\n          out: { start: 1, end: 0, timing: { start: 0.85, end: 0.9 } },\n        },\n        transform: {\n          in: {\n            start: 30,\n            end: 0,\n            template: 'translate3d(0, {value}%, 0)',\n            timing: { start: 0.72, end: 0.77 },\n          },\n          out: {\n            start: 0,\n            end: -20,\n            template: 'translate3d(0, {value}%, 0)',\n            timing: { start: 0.85, end: 0.9 },\n          },\n        },\n      },\n      {\n        // #scroll-section-2 .pin:nth-child(1)\n        opacity: {\n          in: { start: 0, end: 1, timing: { start: 0.5, end: 0.55 } },\n          out: { start: 1, end: 0, timing: { start: 0.58, end: 0.63 } },\n        },\n        transform: {\n          in: {\n            start: 0.5,\n            end: 1,\n            template: 'scaleY({value})',\n            timing: { start: 0.5, end: 0.55 },\n          },\n          out: {\n            start: 0.5,\n            end: 1,\n            template: 'scaleY({value})',\n            timing: { start: 0.5, end: 0.55 },\n          },\n        },\n      },\n      {\n        // #scroll-section-2 .pin:nth-child(2)\n        opacity: {\n          in: { start: 0, end: 1, timing: { start: 0.72, end: 0.77 } },\n          out: { start: 1, end: 0, timing: { start: 0.85, end: 0.9 } },\n        },\n        transform: {\n          in: {\n            start: 0.5,\n            end: 1,\n            template: 'scaleY({value})',\n            timing: { start: 0.72, end: 0.77 },\n          },\n          out: {\n            start: 0.5,\n            end: 1,\n            template: 'scaleY({value})',\n            timing: { start: 0.72, end: 0.77 },\n          },\n        },\n      },\n    ],\n  },\n  {\n    // #scroll-section-3\n    type: 'sticky',\n    heightMultiple: 5,\n    scrollHeight: 0,\n    objs: {\n      container: O.none,\n      elements: [],\n    },\n    selectors: ['.canvas-caption'],\n    animations: [\n      {\n        // #scroll-section-2 .canvas-caption:nth-child(1)\n        opacity: { start: 0, end: 1 },\n        transform: {\n          start: 20,\n          end: 0,\n          template: 'translate3d(0, {value}%, 0)',\n        },\n      },\n    ],\n  },\n];\n\nexport { type SceneInfo, sceneInfoArray };\n", "import * as A from 'fp-ts/lib/Array';\nimport { pipe } from 'fp-ts/lib/function';\n\nimport { setAttributeToBody } from './dom';\nimport { type SceneInfo } from './sceneInfo';\n\nconst getScrollHeightValue = (\n  currentScene: number,\n  sceneInfoArray: SceneInfo[],\n): [number, number] => {\n  const prevScrollHeight = pipe(\n    sceneInfoArray,\n    A.filterWithIndex((index) => index < currentScene),\n    A.reduce(0, (b, a) => b + a.scrollHeight),\n  );\n\n  return [prevScrollHeight, sceneInfoArray[currentScene].scrollHeight];\n};\n\nconst getNewCurrentScene = (\n  scrollY: number,\n  currentScene: number,\n  sceneInfoArray: SceneInfo[],\n) => {\n  let newCurrentScene = currentScene;\n\n  const [prevScrollHeight, currentSceneScrollHeight] = getScrollHeightValue(\n    currentScene,\n    sceneInfoArray,\n  );\n\n  if (scrollY < prevScrollHeight && newCurrentScene !== 0) {\n    newCurrentScene -= 1;\n  }\n\n  if (\n    scrollY > prevScrollHeight + currentSceneScrollHeight &&\n    currentScene < sceneInfoArray.length\n  ) {\n    newCurrentScene += 1;\n  }\n\n  return [newCurrentScene, prevScrollHeight] as const;\n};\n\nconst getNewCurrentSceneOnLoad = (\n  scrollY: number,\n  sceneInfoArray: SceneInfo[],\n) => {\n  let totalScrollHeight = 0;\n\n  for (const [index, sceneInfo] of sceneInfoArray.entries()) {\n    totalScrollHeight += sceneInfo.scrollHeight;\n\n    if (totalScrollHeight >= scrollY) {\n      return index;\n    }\n  }\n\n  return 0;\n};\n\nconst getShowScrollElementId = (currentScene: number) =>\n  `show-scroll-section-${currentScene}`;\n\nconst setShowScrolElementToBody =\n  (document: Document) => (currentScene: number) =>\n    pipe(\n      document,\n      setAttributeToBody('id', getShowScrollElementId(currentScene)),\n    );\n\nexport {\n  getNewCurrentScene,\n  getNewCurrentSceneOnLoad,\n  setShowScrolElementToBody,\n};\n", "import './css/reset.css';\nimport './css/style.css';\nimport './css/footer.css';\nimport './css/global-nav.css';\nimport './css/scroll-section.css';\nimport { setLayout } from './script/layout';\nimport { playAnimation } from './script/animation';\nimport { sceneInfoArray } from './script/sceneInfo';\nimport { getCalculatedSceneInfoArray } from './script/scene';\nimport {\n  getNewCurrentScene,\n  getNewCurrentSceneOnLoad,\n  setShowScrolElementToBody,\n} from './script/scroll';\n\nconst setShowScrolElementToBodyByCurrentScene =\n  setShowScrolElementToBody(document);\n\n(() => {\n  let calculatedSceneInfoArray = sceneInfoArray;\n  let currentScene = 0;\n  window.addEventListener('resize', () =>\n    setLayout(getCalculatedSceneInfoArray(window, calculatedSceneInfoArray)),\n  );\n  window.addEventListener('load', () => {\n    calculatedSceneInfoArray = getCalculatedSceneInfoArray(\n      window,\n      calculatedSceneInfoArray,\n      true,\n    );\n\n    const newCurrentScene = getNewCurrentSceneOnLoad(\n      window.scrollY,\n      calculatedSceneInfoArray,\n    );\n\n    setShowScrolElementToBodyByCurrentScene(newCurrentScene);\n    setLayout(calculatedSceneInfoArray);\n\n    currentScene = newCurrentScene;\n  });\n  window.addEventListener('scroll', () => {\n    const [newCurrentScene, prevScrollHeight] = getNewCurrentScene(\n      window.scrollY,\n      currentScene,\n      calculatedSceneInfoArray,\n    );\n\n    setShowScrolElementToBodyByCurrentScene(newCurrentScene);\n\n    if (currentScene === newCurrentScene) {\n      playAnimation(calculatedSceneInfoArray)(\n        newCurrentScene,\n        prevScrollHeight,\n        window.scrollY,\n      );\n    }\n\n    currentScene = newCurrentScene;\n  });\n})();\n"],
  "mappings": "8hBAAA,yBACA,OAAO,eAAe,EAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,EAAQ,sBAAwB,EAAQ,IAAM,EAAQ,GAAK,EAAQ,KAAO,EAAQ,KAAO,EAAQ,SAAW,EAAQ,OAAS,EAAQ,OAAS,EAAQ,UAAY,EAAQ,UAAY,EAAQ,MAAQ,EAAQ,KAAO,EAAQ,KAAO,EAAQ,UAAY,EAAQ,eAAiB,EAAQ,UAAY,EAAQ,WAAa,EAAQ,UAAY,EAAQ,SAAW,EAAQ,aAAe,EAAQ,SAAW,EAAQ,MAAQ,EAAQ,QAAU,EAAQ,YAAc,EAAQ,UAAY,EAAQ,aAAe,EAAQ,kBAAoB,OAQ1gB,GAAI,IAAoB,SAAU,EAAG,CAAE,MAAO,WAAY,CAAE,MAAQ,CAChE,KAAM,SAAU,EAAG,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,GAAE,KAAK,EAAE,CAAC,EAAG,EAAE,CAAC,CAAC,CAAG,CAAG,EAC5E,KAAM,SAAU,EAAG,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,GAAE,KAAK,EAAE,CAAC,EAAG,EAAE,CAAC,CAAC,CAAG,CAAG,EAC5E,KAAM,UAAY,CAAE,MAAO,GAAE,IAAM,EACnC,IAAK,UAAY,CAAE,MAAO,GAAE,GAAK,EACjC,QAAS,SAAU,EAAG,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,GAAE,QAAQ,EAAE,CAAC,EAAG,EAAE,CAAC,CAAC,CAAG,CAAG,EAClF,IAAK,SAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,GAAE,IAAI,EAAE,CAAC,CAAC,CAAG,CAAG,CACrE,CAAI,CAAG,EACP,EAAQ,kBAAoB,GAwB5B,GAAI,IAAe,SAAU,EAAG,CAAE,MAAO,WAAY,CAAE,MAAQ,CAC3D,OAAQ,SAAU,EAAG,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,GAAE,OAAO,EAAE,CAAC,EAAG,EAAE,CAAC,CAAC,CAAG,CAAG,CACpF,CAAI,CAAG,EACP,EAAQ,aAAe,GAyBvB,GAAI,IAAY,SAAU,EAAG,CACzB,GAAI,GAAgB,EAAQ,aAAa,CAAC,EAC1C,MAAO,WAAY,CAAE,MAAQ,CACzB,OAAQ,EAAc,EAAE,OACxB,MAAO,UAAY,CAAE,MAAO,GAAE,KAAO,CACzC,CAAI,CACR,EACA,EAAQ,UAAY,GAKpB,GAAI,IAAc,SAAU,EAAG,CAAE,MAAQ,CACrC,IAAK,SAAU,EAAG,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,GAAE,IAAI,EAAE,CAAC,EAAG,EAAE,CAAC,CAAC,CAAG,CAAG,EAC1E,KAAM,UAAY,CAAE,MAAO,GAAE,IAAM,EACnC,IAAK,SAAU,EAAG,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,GAAE,IAAI,EAAE,CAAC,EAAG,EAAE,CAAC,CAAC,CAAG,CAAG,EAC1E,IAAK,UAAY,CAAE,MAAO,GAAE,GAAK,CACrC,CAAI,EACJ,EAAQ,YAAc,GAKtB,GAAI,IAAU,SAAU,EAAG,CACvB,GAAI,GAAI,EAAQ,YAAY,CAAC,EAC7B,MAAO,CACH,IAAK,EAAE,IACP,IAAK,EAAE,IACP,IAAK,EAAE,IACP,KAAM,EAAE,KACR,IAAK,SAAU,EAAG,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,GAAE,IAAI,EAAE,CAAC,EAAG,EAAE,CAAC,CAAC,CAAG,CAAG,CAC9E,CACJ,EACA,EAAQ,QAAU,GAOlB,GAAI,IAAQ,SAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,GAAE,CAAC,CAAG,CAAG,EACjE,EAAQ,MAAQ,GAIhB,YAAkB,EAAG,CACjB,MAAO,EACX,CACA,EAAQ,SAAW,GAInB,EAAQ,aAAe,GAIvB,YAAkB,EAAG,CACjB,MAAO,WAAY,CAAE,MAAO,EAAG,CACnC,CACA,EAAQ,SAAW,GAMnB,EAAQ,UAER,GAAS,EAAI,EAMb,EAAQ,WAER,GAAS,EAAK,EAMd,EAAQ,UAER,GAAS,IAAI,EAMb,EAAQ,eAER,GAAS,MAAS,EAMlB,EAAQ,UAAY,EAAQ,eAM5B,YAAc,EAAG,CACb,MAAO,UAAU,EAAG,EAAG,CAAE,MAAO,GAAE,EAAG,CAAC,CAAG,CAC7C,CACA,EAAQ,KAAO,GACf,YAAc,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,CAC9C,OAAQ,UAAU,YACT,GACD,MAAO,OACN,GACD,MAAO,WAAY,CACf,MAAO,GAAG,EAAG,MAAM,KAAM,SAAS,CAAC,CACvC,MACC,GACD,MAAO,WAAY,CACf,MAAO,GAAG,EAAG,EAAG,MAAM,KAAM,SAAS,CAAC,CAAC,CAC3C,MACC,GACD,MAAO,WAAY,CACf,MAAO,GAAG,EAAG,EAAG,EAAG,MAAM,KAAM,SAAS,CAAC,CAAC,CAAC,CAC/C,MACC,GACD,MAAO,WAAY,CACf,MAAO,GAAG,EAAG,EAAG,EAAG,EAAG,MAAM,KAAM,SAAS,CAAC,CAAC,CAAC,CAAC,CACnD,MACC,GACD,MAAO,WAAY,CACf,MAAO,GAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MAAM,KAAM,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CACvD,MACC,GACD,MAAO,WAAY,CACf,MAAO,GAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MAAM,KAAM,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC3D,MACC,GACD,MAAO,WAAY,CACf,MAAO,GAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MAAM,KAAM,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC/D,MACC,GACD,MAAO,WAAY,CACf,MAAO,GAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MAAM,KAAM,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACnE,EAGZ,CACA,EAAQ,KAAO,GAIf,aAAiB,CAEb,OADI,GAAI,CAAC,EACA,EAAK,EAAG,EAAK,UAAU,OAAQ,IACpC,EAAE,GAAM,UAAU,GAEtB,MAAO,EACX,CACA,EAAQ,MAAQ,GAIhB,YAAmB,EAAG,CAClB,MAAO,GAAI,CACf,CACA,EAAQ,UAAY,GAIpB,YAAmB,EAAG,CAClB,MAAO,GAAI,CACf,CACA,EAAQ,UAAY,GAIpB,YAAgB,EAAG,CACf,KAAM,IAAI,OAAM,qDAAqD,CACzE,CACA,EAAQ,OAAS,GAajB,YAAgB,EAAG,CACf,MAAO,UAAU,EAAG,CAAE,MAAO,GAAE,MAAM,OAAQ,CAAC,CAAG,CACrD,CACA,EAAQ,OAAS,GAMjB,YAAkB,EAAG,CACjB,MAAO,WAAY,CAEf,OADI,GAAI,CAAC,EACA,EAAK,EAAG,EAAK,UAAU,OAAQ,IACpC,EAAE,GAAM,UAAU,GAEtB,MAAO,GAAE,CAAC,CACd,CACJ,CACA,EAAQ,SAAW,GACnB,YAAc,EAAG,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,CAC7C,OAAQ,UAAU,YACT,GACD,MAAO,OACN,GACD,MAAO,GAAG,CAAC,MACV,GACD,MAAO,GAAG,EAAG,CAAC,CAAC,MACd,GACD,MAAO,GAAG,EAAG,EAAG,CAAC,CAAC,CAAC,MAClB,GACD,MAAO,GAAG,EAAG,EAAG,EAAG,CAAC,CAAC,CAAC,CAAC,MACtB,GACD,MAAO,GAAG,EAAG,EAAG,EAAG,EAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAC1B,GACD,MAAO,GAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAC9B,GACD,MAAO,GAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAClC,GACD,MAAO,GAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAGvC,OADI,GAAM,UAAU,GACX,GAAI,EAAG,GAAI,UAAU,OAAQ,KAClC,EAAM,UAAU,IAAG,CAAG,EAE1B,MAAO,GAEnB,CACA,EAAQ,KAAO,GAMf,EAAQ,KAAO,GAIf,GAAI,IAAK,SAAU,EAAG,EAAG,CAAE,MAAO,EAAG,EACrC,EAAQ,GAAK,GAOb,YAAa,EAAW,CACpB,MAAO,UAAU,EAAG,CAAE,MAAO,CAAC,EAAU,CAAC,CAAG,CAChD,CACA,EAAQ,IAAM,GAQd,GAAI,IAAwB,UAAY,CAAE,MAAQ,CAC9C,OAAQ,SAAU,EAAO,EAAQ,CAAE,MAAO,IAAK,EAAO,CAAM,CAAG,EAC/D,MAAO,EACX,CAAI,EACJ,EAAQ,sBAAwB,KCrVhC,0BACA,OAAO,eAAe,EAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,EAAQ,UAAY,EAAQ,UAAY,EAAQ,kBAAoB,EAAQ,IAAM,EAAQ,SAAW,EAAQ,QAAU,EAAQ,GAAK,OACpI,GAAI,IAAa,IACjB,YAAY,EAAG,EAAG,CACd,MAAO,UAAU,EAAI,CAAE,MAAO,UAAU,EAAK,CACzC,MAAO,GAAE,GAAG,EAAE,IAAI,EAAK,SAAU,EAAK,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,GAAE,GAAG,EAAK,CAAE,CAAG,CAAG,CAAC,EAAG,CAAE,CAClG,CAAG,CACP,CACA,EAAQ,GAAK,GACb,YAAiB,EAAG,CAChB,MAAO,UAAU,EAAQ,CAAE,MAAO,UAAU,EAAO,CAC/C,MAAO,GAAE,GAAG,EAAE,IAAI,EAAO,SAAU,EAAG,CAAE,MAAO,WAAY,CAAE,MAAO,EAAG,CAAG,CAAC,EAAG,CAAM,CACxF,CAAG,CACP,CACA,EAAQ,QAAU,GAClB,YAAkB,EAAG,CACjB,MAAO,UAAU,EAAQ,CAAE,MAAO,UAAU,EAAO,CAC/C,MAAO,GAAE,GAAG,EAAE,IAAI,EAAO,UAAY,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,EAAG,CAAG,CAAC,EAAG,CAAM,CACxF,CAAG,CACP,CACA,EAAQ,SAAW,GACnB,YAAa,EAAG,CACZ,MAAO,UAAU,EAAM,EAAI,CAAE,MAAO,UAAU,EAAI,CAC9C,MAAO,GAAE,GAAG,EAAE,IAAI,EAAI,SAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CACrD,GAAI,GACJ,MAAO,QAAO,OAAO,CAAC,EAAG,EAAI,GAAK,CAAC,EAAG,EAAG,GAAQ,EAAG,EAAG,CAC3D,CAAG,CAAC,EAAG,CAAE,CACb,CAAG,CACP,CACA,EAAQ,IAAM,GACd,YAA2B,EAAG,CAC1B,MAAO,UAAU,EAAG,CAAE,MAAQ,CAC1B,OAAQ,SAAU,EAAO,EAAQ,CAC7B,MAAO,GAAE,GAAG,EAAE,IAAI,EAAO,SAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,GAAE,OAAO,EAAG,CAAC,CAAG,CAAG,CAAC,EAAG,CAAM,CACtG,CACJ,CAAI,CACR,CACA,EAAQ,kBAAoB,GAC5B,YAAiB,EAAG,EAAG,EAAK,CACxB,MAAO,UAAU,EAAG,CAEhB,OADI,GAAW,MAAM,EAAI,OAAS,CAAC,EAC1B,EAAI,EAAG,EAAI,EAAI,OAAQ,IAC5B,EAAS,GAAK,EAAI,GAEtB,SAAS,EAAI,QAAU,EAChB,IAAM,EAAI,EAAE,MAAM,KAAM,CAAQ,EAAI,GAAQ,EAAG,EAAI,EAAG,CAAQ,CACzE,CACJ,CACA,GAAI,IAAoB,CACpB,EAAG,SAAU,EAAG,CAAE,MAAO,CAAC,CAAC,CAAG,EAC9B,EAAG,SAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,CAAC,EAAG,CAAC,CAAG,CAAG,EAC1D,EAAG,SAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,CAAC,EAAG,EAAG,CAAC,CAAG,CAAG,CAAG,EACtF,EAAG,SAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,CAAC,EAAG,EAAG,EAAG,CAAC,CAAG,CAAG,CAAG,CAAG,EAClH,EAAG,SAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,CAAG,CAAG,CAAG,CAAG,CAAG,CAClJ,EACA,YAA6B,EAAK,CAC9B,MAAK,IAAkB,eAAe,CAAG,GACrC,IAAkB,GAAO,GAAQ,GAAW,MAAO,EAAM,EAAG,CAAC,CAAC,GAE3D,GAAkB,EAC7B,CACA,YAAmB,EAAG,CAClB,MAAO,WAAY,CAEf,OADI,GAAO,CAAC,EACH,EAAK,EAAG,EAAK,UAAU,OAAQ,IACpC,EAAK,GAAM,UAAU,GAKzB,OAHI,GAAM,EAAK,OACX,EAAI,GAAoB,CAAG,EAC3B,EAAM,EAAE,IAAI,EAAK,GAAI,CAAC,EACjB,EAAI,EAAG,EAAI,EAAK,IACrB,EAAM,EAAE,GAAG,EAAK,EAAK,EAAE,EAE3B,MAAO,EACX,CACJ,CACA,EAAQ,UAAY,GACpB,YAA8B,EAAM,CAChC,GAAI,GAAM,EAAK,OACf,OAAQ,OACC,GACD,MAAO,UAAU,EAAG,CAChB,GAAI,GACJ,MAAQ,GAAK,CAAC,EAAG,EAAG,EAAK,IAAM,EAAG,CACtC,MACC,GACD,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CACtC,GAAI,GACJ,MAAQ,GAAK,CAAC,EAAG,EAAG,EAAK,IAAM,EAAG,EAAG,EAAK,IAAM,EAAG,CACvD,CAAG,MACF,GACD,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAC5D,GAAI,GACJ,MAAQ,GAAK,CAAC,EAAG,EAAG,EAAK,IAAM,EAAG,EAAG,EAAK,IAAM,EAAG,EAAG,EAAK,IAAM,EAAG,CACxE,CAAG,CAAG,MACL,GACD,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAClF,GAAI,GACJ,MAAQ,GAAK,CAAC,EACV,EAAG,EAAK,IAAM,EACd,EAAG,EAAK,IAAM,EACd,EAAG,EAAK,IAAM,EACd,EAAG,EAAK,IAAM,EACd,CACR,CAAG,CAAG,CAAG,MACR,GACD,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CACxG,GAAI,GACJ,MAAQ,GAAK,CAAC,EACV,EAAG,EAAK,IAAM,EACd,EAAG,EAAK,IAAM,EACd,EAAG,EAAK,IAAM,EACd,EAAG,EAAK,IAAM,EACd,EAAG,EAAK,IAAM,EACd,CACR,CAAG,CAAG,CAAG,CAAG,UAEZ,MAAO,IAAQ,UAAY,CAEvB,OADI,GAAO,CAAC,EACH,EAAK,EAAG,EAAK,UAAU,OAAQ,IACpC,EAAK,GAAM,UAAU,GAGzB,OADI,GAAI,CAAC,EACA,EAAI,EAAG,EAAI,EAAK,IACrB,EAAE,EAAK,IAAM,EAAK,GAEtB,MAAO,EACX,EAAG,EAAM,EAAG,CAAC,CAAC,EAE1B,CACA,YAAmB,EAAG,CAClB,MAAO,UAAU,EAAG,CAKhB,OAJI,GAAO,OAAO,KAAK,CAAC,EACpB,EAAM,EAAK,OACX,EAAI,GAAqB,CAAI,EAC7B,EAAK,EAAE,IAAI,EAAE,EAAK,IAAK,CAAC,EACnB,EAAI,EAAG,EAAI,EAAK,IACrB,EAAK,EAAE,GAAG,EAAI,EAAE,EAAK,GAAG,EAE5B,MAAO,EACX,CACJ,CACA,EAAQ,UAAY,KC/IpB,2BACA,OAAO,eAAe,GAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,GAAQ,KAAO,GAAQ,WAAa,OACpC,YAAoB,EAAG,CACnB,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAO,CAAE,MAAO,GAAE,MAAM,EAAO,SAAU,EAAG,CAAE,MAAO,GAAE,IAAI,EAAE,CAAC,EAAG,UAAY,CAAE,MAAO,EAAG,CAAC,CAAG,CAAC,CAAG,CAAG,CAC/I,CACA,GAAQ,WAAa,GACrB,YAAc,EAAG,CACb,MAAO,UAAU,EAAM,EAAG,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,GAAE,MAAM,EAAI,SAAU,EAAG,CAAE,MAAO,GAAE,IAAI,EAAE,CAAC,EAAG,SAAU,EAAG,CACjH,GAAI,GACJ,MAAO,QAAO,OAAO,CAAC,EAAG,EAAI,GAAK,CAAC,EAAG,EAAG,GAAQ,EAAG,EAAG,CAC3D,CAAC,CAAG,CAAC,CAAG,CAAG,CACf,CACA,GAAQ,KAAO,KCbf,0BACA,GAAI,IAAiB,GAAQ,EAAK,eAAkB,SAAU,EAAI,EAAM,CACpE,OAAS,GAAI,EAAG,EAAK,EAAK,OAAQ,EAAI,EAAG,OAAQ,EAAI,EAAI,IAAK,IAC1D,EAAG,GAAK,EAAK,GACjB,MAAO,EACX,EACA,OAAO,eAAe,EAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,EAAQ,0BAA4B,EAAQ,IAAM,EAAQ,YAAc,EAAQ,mBAAqB,EAAQ,KAAO,EAAQ,KAAO,EAAQ,WAAa,EAAQ,UAAY,EAAQ,MAAQ,EAAQ,KAAO,EAAQ,QAAU,EAAQ,OAAS,EAAQ,KAAO,EAAQ,KAAO,EAAQ,OAAS,EAAQ,OAAS,OAK9S,GAAI,IAAS,SAAU,EAAI,CAAE,MAAO,GAAG,OAAS,MAAQ,EACxD,EAAQ,OAAS,GAEjB,GAAI,IAAS,SAAU,EAAI,CAAE,MAAO,GAAG,OAAS,MAAQ,EACxD,EAAQ,OAAS,GAEjB,EAAQ,KAAO,CAAE,KAAM,MAAO,EAE9B,GAAI,IAAO,SAAU,EAAG,CAAE,MAAQ,CAAE,KAAM,OAAQ,MAAO,CAAE,CAAI,EAC/D,EAAQ,KAAO,GAKf,GAAI,IAAS,SAAU,EAAI,CAAE,MAAO,GAAG,OAAS,MAAQ,EACxD,EAAQ,OAAS,GAEjB,GAAI,IAAU,SAAU,EAAI,CAAE,MAAO,GAAG,OAAS,OAAS,EAC1D,EAAQ,QAAU,GAElB,GAAI,IAAO,SAAU,EAAG,CAAE,MAAQ,CAAE,KAAM,OAAQ,KAAM,CAAE,CAAI,EAC9D,EAAQ,KAAO,GAEf,GAAI,IAAQ,SAAU,EAAG,CAAE,MAAQ,CAAE,KAAM,QAAS,MAAO,CAAE,CAAI,EACjE,EAAQ,MAAQ,GAKhB,GAAI,IAAY,SAAU,EAAG,CAAE,MAAO,CAAC,CAAC,CAAG,EAC3C,EAAQ,UAAY,GAEpB,GAAI,IAAa,SAAU,EAAI,CAAE,MAAO,GAAG,OAAS,CAAG,EACvD,EAAQ,WAAa,GAErB,GAAI,IAAO,SAAU,EAAI,CAAE,MAAO,GAAG,EAAI,EACzC,EAAQ,KAAO,GAEf,GAAI,IAAO,SAAU,EAAI,CAAE,MAAO,GAAG,MAAM,CAAC,CAAG,EAC/C,EAAQ,KAAO,GAKf,EAAQ,mBAAqB,CAAC,EAE9B,EAAQ,YAAc,CAAC,EAKvB,EAAQ,IAAM,OAAO,UAAU,eAK/B,GAAI,IAA4B,SAAU,EAAI,CAAE,MAAO,IAAc,CAAC,EAAG,EAAE,EAAG,EAAG,MAAM,CAAC,CAAC,CAAG,EAC5F,EAAQ,0BAA4B,KCrEpC,0BAMA,GAAI,IAAmB,GAAQ,EAAK,iBAAqB,QAAO,OAAU,SAAS,EAAG,EAAG,EAAG,EAAI,CAC5F,AAAI,IAAO,QAAW,GAAK,GAC3B,OAAO,eAAe,EAAG,EAAI,CAAE,WAAY,GAAM,IAAK,UAAW,CAAE,MAAO,GAAE,EAAI,CAAE,CAAC,CACvF,EAAM,SAAS,EAAG,EAAG,EAAG,EAAI,CACxB,AAAI,IAAO,QAAW,GAAK,GAC3B,EAAE,GAAM,EAAE,EACd,GACI,GAAsB,GAAQ,EAAK,oBAAwB,QAAO,OAAU,SAAS,EAAG,EAAG,CAC3F,OAAO,eAAe,EAAG,UAAW,CAAE,WAAY,GAAM,MAAO,CAAE,CAAC,CACtE,EAAK,SAAS,EAAG,EAAG,CAChB,EAAE,QAAa,CACnB,GACI,GAAgB,GAAQ,EAAK,cAAiB,SAAU,EAAK,CAC7D,GAAI,GAAO,EAAI,WAAY,MAAO,GAClC,GAAI,GAAS,CAAC,EACd,GAAI,GAAO,KAAM,OAAS,KAAK,GAAK,AAAI,IAAM,WAAa,OAAO,UAAU,eAAe,KAAK,EAAK,CAAC,GAAG,GAAgB,EAAQ,EAAK,CAAC,EACvI,UAAmB,EAAQ,CAAG,EACvB,CACX,EACA,OAAO,eAAe,EAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,EAAQ,aAAe,EAAQ,kBAAoB,EAAQ,aAAe,EAAQ,YAAc,EAAQ,aAAe,EAAQ,YAAc,EAAQ,cAAgB,EAAQ,WAAa,OAC1L,GAAI,IAAU,KACV,GAAa,IACb,GAAI,GAAa,IAAqB,EAC1C,YAAoB,EAAG,CACnB,MAAO,UAAU,EAAQ,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,GAAE,WAAW,GAAE,OAAO,CAAE,EAAI,GAAE,KAAK,EAAO,CAAC,EAAI,GAAE,MAAM,EAAG,KAAK,CAAC,CAAG,CAAG,CACnI,CACA,EAAQ,WAAa,GACrB,YAAuB,EAAG,CACtB,MAAO,UAAU,EAAW,EAAS,CAAE,MAAO,UAAU,EAAG,CACvD,MAAO,GAAE,WAAW,EAAU,CAAC,EAAI,GAAE,MAAM,CAAC,EAAI,GAAE,KAAK,EAAQ,CAAC,CAAC,CAAC,CACtE,CAAG,CACP,CACA,EAAQ,cAAgB,GACxB,YAAqB,EAAG,CACpB,GAAI,GAAc,GAAW,CAAC,EAC9B,MAAO,UAAU,EAAQ,CACrB,GAAI,GAAO,EAAY,CAAM,EAC7B,MAAO,UAAU,EAAG,CAAE,MAAO,IAAW,KAAK,EAAG,CAAI,CAAG,CAC3D,CACJ,CACA,EAAQ,YAAc,GACtB,YAAsB,EAAG,EAAG,CACxB,GAAI,GAAe,GAAY,CAAC,EAChC,MAAO,UAAU,EAAQ,CACrB,GAAI,GAAO,EAAa,CAAM,EAC9B,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,GAAE,MAAM,EAAI,EAAK,CAAC,CAAC,CAAG,CAAG,CACjF,CACJ,CACA,EAAQ,aAAe,GACvB,YAAqB,EAAG,CACpB,MAAO,UAAU,EAAG,CAAE,MAAO,IAAW,KAAK,EAAG,EAAE,UAAU,CAAG,CACnE,CACA,EAAQ,YAAc,GACtB,YAAsB,EAAG,EAAG,CACxB,GAAI,GAAe,GAAY,CAAC,EAChC,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,GAAE,MAAM,EAAI,EAAa,CAAC,CAAC,CAAG,CAAG,CACzF,CACA,EAAQ,aAAe,GACvB,YAA2B,EAAG,EAAG,CAC7B,MAAO,IAAW,KAAK,GAAY,CAAC,EAAG,GAAQ,WAAW,CAAC,CAAC,CAChE,CACA,EAAQ,kBAAoB,GAC5B,YAAsB,EAAG,EAAG,CACxB,MAAO,UAAU,EAAW,EAAS,CAAE,MAAO,UAAU,EAAI,CACxD,MAAO,GAAE,MAAM,EAAI,SAAU,EAAG,CAAE,MAAO,GAAE,WAAW,EAAU,CAAC,EAAI,GAAE,MAAM,CAAC,EAAI,GAAE,KAAK,EAAQ,CAAC,CAAC,CAAC,CAAG,CAAC,CAC5G,CAAG,CACP,CACA,EAAQ,aAAe,KC1EvB,0BACA,OAAO,eAAe,EAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,EAAQ,sBAAwB,EAAQ,OAAS,EAAQ,KAAO,EAAQ,IAAM,OAc9E,GAAI,IAAa,IACjB,YAAa,EAAG,EAAG,CACf,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,GAAE,IAAI,EAAI,SAAU,EAAI,CAAE,MAAO,GAAE,IAAI,EAAI,CAAC,CAAG,CAAC,CAAG,CAAG,CAC9G,CACA,EAAQ,IAAM,GACd,YAAc,EAAG,CACb,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAK,CAAE,MAAO,GAAE,IAAI,EAAK,SAAU,EAAG,CAAE,MAAO,GAAE,CAAC,CAAG,CAAC,CAAG,CAAG,CACvG,CACA,EAAQ,KAAO,GACf,YAAgB,EAAG,CACf,MAAO,UAAU,EAAM,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,GAAE,IAAI,EAAI,SAAU,EAAG,CAC1E,GAAI,GACJ,MAAQ,GAAK,CAAC,EAAG,EAAG,GAAQ,EAAG,CACnC,CAAC,CAAG,CAAG,CACX,CACA,EAAQ,OAAS,GAEjB,YAA+B,EAAG,EAAG,CACjC,GAAI,GAAO,GAAI,EAAG,CAAC,EACnB,MAAO,CACH,IAAK,SAAU,EAAK,EAAG,CAAE,MAAO,IAAW,KAAK,EAAK,EAAK,CAAC,CAAC,CAAG,CACnE,CACJ,CACA,EAAQ,sBAAwB,KCvChC,0BACA,OAAO,eAAe,EAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,EAAQ,OAAS,EAAQ,SAAW,EAAQ,SAAW,EAAQ,UAAY,EAAQ,GAAK,EAAQ,YAAc,EAAQ,YAAc,EAAQ,WAAa,EAAQ,cAAgB,EAAQ,UAAY,EAAQ,aAAe,EAAQ,SAAW,EAAQ,IAAM,EAAQ,UAAY,EAAQ,MAAQ,EAAQ,OAAS,EAAQ,WAAa,OACvU,GAAI,IAAa,IAQb,GAAa,SAAU,EAAQ,CAAE,MAAQ,CACzC,OAAQ,SAAU,EAAG,EAAG,CAAE,MAAO,KAAM,GAAK,EAAO,EAAG,CAAC,CAAG,CAC9D,CAAI,EACJ,EAAQ,WAAa,GAQrB,GAAI,IAAS,SAAU,EAAK,CACxB,MAAO,GAAQ,WAAW,SAAU,EAAO,EAAQ,CAC/C,OAAS,KAAO,GACZ,GAAI,CAAC,EAAI,GAAK,OAAO,EAAM,GAAM,EAAO,EAAI,EACxC,MAAO,GAGf,MAAO,EACX,CAAC,CACL,EACA,EAAQ,OAAS,GAmBjB,GAAI,IAAQ,UAAY,CAEpB,OADI,GAAM,CAAC,EACF,EAAK,EAAG,EAAK,UAAU,OAAQ,IACpC,EAAI,GAAM,UAAU,GAExB,MAAO,GAAQ,WAAW,SAAU,EAAO,EAAQ,CAAE,MAAO,GAAI,MAAM,SAAU,EAAG,EAAG,CAAE,MAAO,GAAE,OAAO,EAAM,GAAI,EAAO,EAAE,CAAG,CAAC,CAAG,CAAC,CACvI,EACA,EAAQ,MAAQ,GAKhB,GAAI,IAAa,SAAU,EAAI,EAAG,CAAE,MAAO,IAAW,KAAK,EAAI,EAAQ,UAAU,CAAC,CAAC,CAAG,EAQlF,GAAY,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAChD,MAAO,GAAQ,WAAW,SAAU,EAAG,EAAG,CAAE,MAAO,GAAG,OAAO,EAAE,CAAC,EAAG,EAAE,CAAC,CAAC,CAAG,CAAC,CAC/E,CAAG,EACH,EAAQ,UAAY,GAQpB,EAAQ,IAAM,KAKd,EAAQ,SAAW,CACf,OAAQ,SAAU,EAAG,EAAG,CAAE,MAAO,KAAM,CAAG,CAC9C,EACA,GAAI,IAAQ,CACR,OAAQ,UAAY,CAAE,MAAO,EAAM,CACvC,EAKI,GAAe,UAAY,CAAE,MAAQ,CACrC,OAAQ,SAAU,EAAG,EAAG,CAAE,MAAO,GAAQ,WAAW,SAAU,EAAG,EAAG,CAAE,MAAO,GAAE,OAAO,EAAG,CAAC,GAAK,EAAE,OAAO,EAAG,CAAC,CAAG,CAAC,CAAG,CACvH,CAAI,EACJ,EAAQ,aAAe,GAKvB,GAAI,IAAY,UAAY,CAAE,MAAQ,CAClC,OAAQ,EAAQ,aAAa,EAAE,OAC/B,MAAO,EACX,CAAI,EACJ,EAAQ,UAAY,GAKpB,EAAQ,cAAgB,CACpB,IAAK,EAAQ,IACb,UAAW,EACf,EAWA,EAAQ,WAAa,EAAQ,MAQ7B,EAAQ,YAAc,EAAQ,OAO9B,EAAQ,YAAc,EAAQ,SAAS,OAQvC,EAAQ,GAAK,EAAQ,cAQrB,EAAQ,UAAY,EAAQ,SAQ5B,EAAQ,SAAW,EAAQ,SAQ3B,EAAQ,SAAW,EAAQ,SAQ3B,EAAQ,OAAS,CACb,OAAQ,SAAU,EAAO,EAAQ,CAAE,MAAO,GAAM,QAAQ,IAAM,EAAO,QAAQ,CAAG,CACpF,ICzLA,0BACA,OAAO,eAAe,EAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,EAAQ,QAAU,EAAQ,UAAY,EAAQ,UAAY,EAAQ,WAAa,EAAQ,IAAM,EAAQ,WAAa,EAAQ,YAAc,EAAQ,QAAU,EAAQ,MAAQ,EAAQ,IAAM,EAAQ,IAAM,EAAQ,IAAM,EAAQ,IAAM,EAAQ,GAAK,EAAQ,GAAK,EAAQ,OAAS,EAAQ,QAAU,EAAQ,cAAgB,EAAQ,UAAY,EAAQ,aAAe,EAAQ,IAAM,EAAQ,UAAY,EAAQ,QAAU,EAAQ,MAAQ,EAAQ,YAAc,EAAQ,cAAgB,OACpd,GAAI,IAAO,KACP,GAAa,IAQb,GAAgB,SAAU,EAAS,CAAE,MAAO,UAAU,EAAO,EAAQ,CACrE,MAAO,KAAU,GAAU,EAAQ,EAAO,CAAM,IAAM,CAC1D,CAAG,EACH,EAAQ,cAAgB,GAQxB,GAAI,IAAc,SAAU,EAAS,CAAE,MAAQ,CAC3C,OAAQ,EAAQ,cAAc,CAAO,EACrC,QAAS,SAAU,EAAO,EAAQ,CAAE,MAAQ,KAAU,EAAS,EAAI,EAAQ,EAAO,CAAM,CAAI,CAChG,CAAI,EACJ,EAAQ,YAAc,GAqBtB,GAAI,IAAQ,UAAY,CAEpB,OADI,GAAO,CAAC,EACH,EAAK,EAAG,EAAK,UAAU,OAAQ,IACpC,EAAK,GAAM,UAAU,GAEzB,MAAO,GAAQ,YAAY,SAAU,EAAO,EAAQ,CAEhD,OADI,GAAI,EACD,EAAI,EAAK,OAAS,EAAG,IAAK,CAC7B,GAAI,GAAI,EAAK,GAAG,QAAQ,EAAM,GAAI,EAAO,EAAE,EAC3C,GAAI,IAAM,EACN,MAAO,EAEf,CACA,MAAO,GAAK,GAAG,QAAQ,EAAM,GAAI,EAAO,EAAE,CAC9C,CAAC,CACL,EACA,EAAQ,MAAQ,GAKhB,GAAI,IAAU,SAAU,EAAG,CAAE,MAAO,GAAQ,YAAY,SAAU,EAAO,EAAQ,CAAE,MAAO,GAAE,QAAQ,EAAQ,CAAK,CAAG,CAAC,CAAG,EACxH,EAAQ,QAAU,GAKlB,GAAI,IAAa,SAAU,EAAI,EAAG,CAAE,MAAO,IAAW,KAAK,EAAI,EAAQ,UAAU,CAAC,CAAC,CAAG,EAQlF,GAAY,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAChD,MAAO,GAAQ,YAAY,SAAU,EAAO,EAAQ,CAAE,MAAO,GAAG,QAAQ,EAAE,CAAK,EAAG,EAAE,CAAM,CAAC,CAAG,CAAC,CACnG,CAAG,EACH,EAAQ,UAAY,GAQpB,EAAQ,IAAM,MAKd,GAAI,IAAe,UAAY,CAAE,MAAQ,CACrC,OAAQ,SAAU,EAAO,EAAQ,CAC7B,MAAO,GAAQ,YAAY,SAAU,EAAG,EAAG,CACvC,GAAI,GAAK,EAAM,QAAQ,EAAG,CAAC,EAC3B,MAAO,KAAO,EAAI,EAAK,EAAO,QAAQ,EAAG,CAAC,CAC9C,CAAC,CACL,CACJ,CAAI,EACJ,EAAQ,aAAe,GAoEvB,GAAI,IAAY,UAAY,CAAE,MAAQ,CAClC,OAAQ,EAAQ,aAAa,EAAE,OAC/B,MAAO,EAAQ,YAAY,UAAY,CAAE,MAAO,EAAG,CAAC,CACxD,CAAI,EACJ,EAAQ,UAAY,GAKpB,EAAQ,cAAgB,CACpB,IAAK,EAAQ,IACb,UAAW,EACf,EAOA,EAAQ,QAAU,CACd,OAAQ,GAAW,UACnB,QAEA,GAAW,SAAS,CAAC,CACzB,EAIA,GAAI,IAAS,SAAU,EAAG,CAAE,MAAO,UAAU,EAAQ,CAAE,MAAO,UAAU,EAAO,CAC3E,MAAO,KAAU,GAAU,EAAE,QAAQ,EAAO,CAAM,IAAM,CAC5D,CAAG,CAAG,EACN,EAAQ,OAAS,GAOjB,GAAI,IAAK,SAAU,EAAG,CAAE,MAAO,UAAU,EAAO,EAAQ,CAAE,MAAO,GAAE,QAAQ,EAAO,CAAM,IAAM,EAAI,CAAG,EACrG,EAAQ,GAAK,GAOb,GAAI,IAAK,SAAU,EAAG,CAAE,MAAO,UAAU,EAAO,EAAQ,CAAE,MAAO,GAAE,QAAQ,EAAO,CAAM,IAAM,CAAG,CAAG,EACpG,EAAQ,GAAK,GAOb,GAAI,IAAM,SAAU,EAAG,CAAE,MAAO,UAAU,EAAO,EAAQ,CAAE,MAAO,GAAE,QAAQ,EAAO,CAAM,IAAM,CAAG,CAAG,EACrG,EAAQ,IAAM,GAOd,GAAI,IAAM,SAAU,EAAG,CAAE,MAAO,UAAU,EAAO,EAAQ,CAAE,MAAO,GAAE,QAAQ,EAAO,CAAM,IAAM,EAAI,CAAG,EACtG,EAAQ,IAAM,GAOd,GAAI,IAAM,SAAU,EAAG,CAAE,MAAO,UAAU,EAAO,EAAQ,CACrD,MAAO,KAAU,GAAU,EAAE,QAAQ,EAAO,CAAM,EAAI,EAAI,EAAQ,CACtE,CAAG,EACH,EAAQ,IAAM,GAOd,GAAI,IAAM,SAAU,EAAG,CAAE,MAAO,UAAU,EAAO,EAAQ,CACrD,MAAO,KAAU,GAAU,EAAE,QAAQ,EAAO,CAAM,EAAI,GAAK,EAAQ,CACvE,CAAG,EACH,EAAQ,IAAM,GAMd,GAAI,IAAQ,SAAU,EAAG,CACrB,GAAI,GAAO,EAAQ,IAAI,CAAC,EACpB,EAAO,EAAQ,IAAI,CAAC,EACxB,MAAO,UAAU,EAAK,EAAI,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,GAAK,EAAK,EAAG,CAAE,EAAG,CAAG,CAAG,CAAG,CACxF,EACA,EAAQ,MAAQ,GAMhB,GAAI,IAAU,SAAU,EAAG,CACvB,GAAI,GAAM,EAAQ,GAAG,CAAC,EAClB,EAAM,EAAQ,GAAG,CAAC,EACtB,MAAO,UAAU,EAAK,EAAI,CAAE,MAAO,UAAU,EAAG,CAAE,MAAQ,IAAI,EAAG,CAAG,GAAK,EAAI,EAAG,CAAE,EAAmB,CAAG,CAC5G,EACA,EAAQ,QAAU,GAYlB,EAAQ,YAAc,EAAQ,MAQ9B,EAAQ,WAAa,EAAQ,QAQ7B,EAAQ,IAAM,EAAQ,cAEtB,YAAiB,EAAO,EAAQ,CAC5B,MAAO,GAAQ,EAAS,GAAK,EAAQ,EAAS,EAAI,CACtD,CACA,GAAI,IAAY,CACZ,OAAQ,GAAK,SAAS,OACtB,QAAS,EACb,EAQA,EAAQ,WAAa,GAQrB,EAAQ,UAAY,GAQpB,EAAQ,UAAY,GAQpB,EAAQ,QAER,GAAW,KAAK,EAAQ,UAExB,EAAQ,UAAU,SAAU,EAAM,CAAE,MAAO,GAAK,QAAQ,CAAG,CAAC,CAAC,IChW7D,0BAQA,OAAO,eAAe,EAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,EAAQ,UAAY,EAAQ,KAAO,EAAQ,aAAe,EAAQ,YAAc,EAAQ,QAAU,OAkBlG,GAAI,IAAU,SAAU,EAAG,CAAE,MAAQ,CACjC,OAAQ,SAAU,EAAO,EAAQ,CAAE,MAAO,GAAE,OAAO,EAAQ,CAAK,CAAG,CACvE,CAAI,EACJ,EAAQ,QAAU,GAKlB,GAAI,IAAc,SAAU,EAAW,CAAE,MAAO,UAAU,EAAG,CAAE,MAAQ,CACnE,OAAQ,SAAU,EAAO,EAAQ,CAAE,MAAQ,GAAU,CAAK,EAAI,EAAE,OAAO,EAAO,CAAM,EAAI,CAAS,CACrG,CAAI,CAAG,EACP,EAAQ,YAAc,GAKtB,GAAI,IAAe,SAAU,EAAW,CAAE,MAAO,UAAU,EAAG,CAAE,MAAQ,CACpE,OAAQ,SAAU,EAAO,EAAQ,CAAE,MAAQ,GAAU,CAAM,EAAI,EAAE,OAAO,EAAO,CAAM,EAAI,CAAQ,CACrG,CAAI,CAAG,EACP,EAAQ,aAAe,GAKvB,GAAI,IAAO,SAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAQ,CACpD,OAAQ,SAAU,EAAO,EAAQ,CAAE,MAAO,GAAE,OAAO,EAAE,CAAK,EAAG,EAAE,CAAM,CAAC,CAAG,CAC7E,CAAI,CAAG,EACP,EAAQ,KAAO,GAmBf,GAAI,IAAY,SAAU,EAAG,CAAE,MAAO,UAAU,EAAW,CAAE,MAAO,UAAU,EAAI,CAC9E,MAAO,GAAG,OAAO,SAAU,EAAG,EAAK,CAAE,MAAO,GAAE,OAAO,EAAG,CAAG,CAAG,EAAG,CAAS,CAC9E,CAAG,CAAG,EACN,EAAQ,UAAY,KC5EpB,0BACA,GAAI,IAAmB,GAAQ,EAAK,iBAAqB,QAAO,OAAU,SAAS,EAAG,EAAG,EAAG,EAAI,CAC5F,AAAI,IAAO,QAAW,GAAK,GAC3B,OAAO,eAAe,EAAG,EAAI,CAAE,WAAY,GAAM,IAAK,UAAW,CAAE,MAAO,GAAE,EAAI,CAAE,CAAC,CACvF,EAAM,SAAS,EAAG,EAAG,EAAG,EAAI,CACxB,AAAI,IAAO,QAAW,GAAK,GAC3B,EAAE,GAAM,EAAE,EACd,GACI,GAAsB,GAAQ,EAAK,oBAAwB,QAAO,OAAU,SAAS,EAAG,EAAG,CAC3F,OAAO,eAAe,EAAG,UAAW,CAAE,WAAY,GAAM,MAAO,CAAE,CAAC,CACtE,EAAK,SAAS,EAAG,EAAG,CAChB,EAAE,QAAa,CACnB,GACI,GAAgB,GAAQ,EAAK,cAAiB,SAAU,EAAK,CAC7D,GAAI,GAAO,EAAI,WAAY,MAAO,GAClC,GAAI,GAAS,CAAC,EACd,GAAI,GAAO,KAAM,OAAS,KAAK,GAAK,AAAI,IAAM,WAAa,OAAO,UAAU,eAAe,KAAK,EAAK,CAAC,GAAG,GAAgB,EAAQ,EAAK,CAAC,EACvI,UAAmB,EAAQ,CAAG,EACvB,CACX,EACA,OAAO,eAAe,EAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,EAAQ,iBAAmB,EAAQ,aAAe,EAAQ,gBAAkB,EAAQ,qBAAuB,EAAQ,aAAe,EAAQ,aAAe,EAAQ,KAAO,EAAQ,wBAA0B,EAAQ,iBAAmB,EAAQ,iBAAmB,EAAQ,iBAAmB,EAAQ,mBAAqB,EAAQ,kBAAoB,EAAQ,kBAAoB,EAAQ,iBAAmB,EAAQ,mBAAqB,EAAQ,cAAgB,EAAQ,UAAY,EAAQ,KAAO,EAAQ,MAAQ,EAAQ,YAAc,EAAQ,MAAQ,EAAQ,OAAS,EAAQ,QAAU,EAAQ,SAAW,EAAQ,IAAM,EAAQ,IAAM,OAwC3mB,GAAI,IAAa,IACb,GAAI,GAAa,IAAqB,EACtC,GAAI,GAAa,IAAkB,EACnC,GAAK,GAAa,IAAgB,EAkBlC,GAAM,SAAU,EAAG,CAAE,MAAQ,CAC7B,OAAQ,GAAG,IAAI,CAAC,CACpB,CAAI,EACJ,EAAQ,IAAM,GAed,GAAI,IAAM,SAAU,EAAG,CAAE,MAAQ,CAC7B,OAAQ,GAAG,IAAI,CAAC,CACpB,CAAI,EACJ,EAAQ,IAAM,GAKd,GAAI,IAAW,SAAU,EAAG,CAAE,MAAQ,CAClC,OAAQ,UAAY,CAAE,MAAO,EAAG,CACpC,CAAI,EACJ,EAAQ,SAAW,GAgBnB,EAAQ,QAAU,GAAE,QAuBpB,GAAI,IAAS,SAAU,EAAY,CAAE,MAAQ,CACzC,OAAQ,SAAU,EAAO,EAAQ,CAC7B,GAAI,GAAI,CAAC,EACT,OAAS,KAAK,GACV,AAAI,GAAE,IAAI,KAAK,EAAY,CAAC,GACxB,GAAE,GAAK,EAAW,GAAG,OAAO,EAAM,GAAI,EAAO,EAAE,GAGvD,MAAO,EACX,CACJ,CAAI,EACJ,EAAQ,OAAS,GAmBjB,GAAI,IAAQ,UAAY,CAEpB,OADI,GAAa,CAAC,EACT,EAAK,EAAG,EAAK,UAAU,OAAQ,IACpC,EAAW,GAAM,UAAU,GAE/B,MAAQ,CACJ,OAAQ,SAAU,EAAO,EAAQ,CAAE,MAAO,GAAW,IAAI,SAAU,EAAG,EAAG,CAAE,MAAO,GAAE,OAAO,EAAM,GAAI,EAAO,EAAE,CAAG,CAAC,CAAG,CACzH,CACJ,EACA,EAAQ,MAAQ,GAgBhB,GAAI,IAAc,SAAU,EAAQ,CAAE,MAAO,UAAU,EAAG,CAAE,MAAQ,CAChE,OAAQ,SAAU,EAAG,EAAG,CAAE,MAAO,GAAE,OAAO,EAAG,EAAE,OAAO,EAAQ,CAAC,CAAC,CAAG,CACvE,CAAI,CAAG,EACP,EAAQ,YAAc,GAetB,GAAI,IAAQ,UAAY,CAAE,MAAQ,CAAE,OAAQ,GAAW,QAAS,CAAI,EACpE,EAAQ,MAAQ,GAYhB,GAAI,IAAO,UAAY,CAAE,MAAQ,CAAE,OAAQ,SAAU,EAAG,EAAG,CAAE,MAAO,EAAG,CAAE,CAAI,EAC7E,EAAQ,KAAO,GAoBf,EAAQ,UAAY,GAAE,UAWtB,EAAQ,cAAgB,EAAQ,SAAS,MAAS,EAQlD,GAAI,IAAqB,UAAY,CAAE,MAAQ,CAC3C,OAAQ,SAAU,EAAO,EAAQ,CAAE,MAAO,QAAO,OAAO,CAAC,EAAG,EAAO,CAAM,CAAG,CAChF,CAAI,EACJ,EAAQ,mBAAqB,GAQ7B,EAAQ,iBAAmB,EAAQ,KAQnC,EAAQ,kBAAoB,EAAQ,MAQpC,EAAQ,kBAAoB,EAAQ,MAQpC,EAAQ,mBAAqB,EAAQ,OAQrC,EAAQ,iBAAmB,EAAQ,QAQnC,EAAQ,iBAAmB,EAAQ,IAQnC,EAAQ,iBAAmB,EAAQ,IAQnC,EAAQ,wBAA0B,EAAQ,YAC1C,YAAc,EAAG,CACb,GAAI,GAAa,EAAQ,UAAU,CAAC,EACpC,MAAO,UAAU,EAAW,EAAI,CAAE,MAAQ,KAAO,OAAY,EAAW,CAAS,EAAI,EAAW,CAAS,EAAE,CAAE,CAAI,CACrH,CACA,EAAQ,KAAO,GAQf,EAAQ,aAAe,CACnB,OAAQ,SAAU,EAAG,EAAG,CAAE,MAAO,IAAK,CAAG,CAC7C,EAQA,EAAQ,aAAe,CACnB,OAAQ,SAAU,EAAG,EAAG,CAAE,MAAO,IAAK,CAAG,CAC7C,EAQA,EAAQ,qBAAuB,GAAW,aAQ1C,EAAQ,gBAAkB,CACtB,OAAQ,SAAU,EAAG,EAAG,CAAE,MAAO,GAAI,CAAG,CAC5C,EAQA,EAAQ,aAAe,CACnB,OAAQ,SAAU,EAAG,EAAG,CAAE,MAAO,GAAI,CAAG,CAC5C,EAQA,EAAQ,iBAAmB,CACvB,OAAQ,SAAU,EAAG,EAAG,CAAE,MAAO,GAAI,CAAG,CAC5C,ICtZA,0BACA,GAAI,IAAmB,GAAQ,EAAK,iBAAqB,QAAO,OAAU,SAAS,EAAG,EAAG,EAAG,EAAI,CAC5F,AAAI,IAAO,QAAW,GAAK,GAC3B,OAAO,eAAe,EAAG,EAAI,CAAE,WAAY,GAAM,IAAK,UAAW,CAAE,MAAO,GAAE,EAAI,CAAE,CAAC,CACvF,EAAM,SAAS,EAAG,EAAG,EAAG,EAAI,CACxB,AAAI,IAAO,QAAW,GAAK,GAC3B,EAAE,GAAM,EAAE,EACd,GACI,GAAsB,GAAQ,EAAK,oBAAwB,QAAO,OAAU,SAAS,EAAG,EAAG,CAC3F,OAAO,eAAe,EAAG,UAAW,CAAE,WAAY,GAAM,MAAO,CAAE,CAAC,CACtE,EAAK,SAAS,EAAG,EAAG,CAChB,EAAE,QAAa,CACnB,GACI,GAAgB,GAAQ,EAAK,cAAiB,SAAU,EAAK,CAC7D,GAAI,GAAO,EAAI,WAAY,MAAO,GAClC,GAAI,GAAS,CAAC,EACd,GAAI,GAAO,KAAM,OAAS,KAAK,GAAK,AAAI,IAAM,WAAa,OAAO,UAAU,eAAe,KAAK,EAAK,CAAC,GAAG,GAAgB,EAAQ,EAAK,CAAC,EACvI,UAAmB,EAAQ,CAAG,EACvB,CACX,EACI,GAAiB,GAAQ,EAAK,eAAkB,SAAU,EAAI,EAAM,CACpE,OAAS,GAAI,EAAG,EAAK,EAAK,OAAQ,EAAI,EAAG,OAAQ,EAAI,EAAI,IAAK,IAC1D,EAAG,GAAK,EAAK,GACjB,MAAO,EACX,EACA,OAAO,eAAe,EAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,EAAQ,YAAc,EAAQ,QAAU,EAAQ,OAAS,EAAQ,aAAe,EAAQ,IAAM,EAAQ,QAAU,EAAQ,UAAY,EAAQ,OAAS,EAAQ,MAAQ,EAAQ,GAAK,EAAQ,IAAM,EAAQ,KAAO,EAAQ,GAAK,EAAQ,SAAW,EAAQ,QAAU,EAAQ,KAAO,EAAQ,eAAiB,EAAQ,YAAc,EAAQ,WAAa,EAAQ,MAAQ,EAAQ,IAAM,EAAQ,QAAU,EAAQ,SAAW,EAAQ,SAAW,EAAQ,KAAO,EAAQ,QAAU,EAAQ,MAAQ,EAAQ,QAAU,EAAQ,OAAS,EAAQ,QAAU,EAAQ,UAAY,EAAQ,SAAW,EAAQ,UAAY,EAAQ,MAAQ,EAAQ,UAAY,EAAQ,OAAS,EAAQ,kBAAoB,EAAQ,OAAS,EAAQ,MAAQ,EAAQ,OAAS,EAAQ,KAAO,EAAQ,eAAiB,EAAQ,eAAiB,EAAQ,OAAS,EAAQ,QAAU,EAAQ,QAAU,EAAQ,SAAW,EAAQ,aAAe,EAAQ,WAAa,EAAQ,MAAQ,OACn5B,EAAQ,gBAAkB,EAAQ,OAAS,EAAQ,UAAY,EAAQ,YAAc,EAAQ,WAAa,EAAQ,WAAa,EAAQ,WAAa,EAAQ,WAAa,EAAQ,WAAa,EAAQ,UAAY,EAAQ,UAAY,EAAQ,IAAM,EAAQ,IAAM,EAAQ,KAAO,EAAQ,KAAO,EAAQ,KAAO,EAAQ,KAAO,EAAQ,IAAM,EAAQ,KAAO,EAAQ,OAAS,EAAQ,GAAK,EAAQ,QAAU,EAAQ,IAAM,EAAQ,qBAAuB,EAAQ,YAAc,EAAQ,kBAAoB,EAAQ,SAAW,EAAQ,MAAQ,EAAQ,WAAa,EAAQ,MAAQ,EAAQ,YAAc,EAAQ,SAAW,EAAQ,QAAU,EAAQ,MAAQ,EAAQ,iBAAmB,EAAQ,QAAU,EAAQ,KAAO,EAAQ,QAAU,EAAQ,kBAAoB,EAAQ,MAAQ,EAAQ,aAAe,EAAQ,QAAU,EAAQ,IAAM,EAAQ,QAAU,EAAQ,kBAAoB,EAAQ,SAAW,EAAQ,SAAW,EAAQ,qBAAuB,EAAQ,iBAAmB,EAAQ,gBAAkB,OACt9B,EAAQ,sBAAwB,EAAQ,KAAO,EAAQ,aAAe,EAAQ,SAAW,EAAQ,KAAO,EAAQ,KAAO,EAAQ,OAAS,EAAQ,OAAS,OACzJ,GAAI,IAAU,KACV,GAAU,KACV,GAAO,KACP,EAAa,IACb,GAAY,KACZ,EAAI,GAAa,IAAqB,EACtC,GAAQ,KACR,GAAK,GAAa,IAAsB,EAO5C,EAAQ,MAAQ,EAAE,mBAIlB,EAAQ,WAAa,EAAE,WAIvB,GAAI,IAAe,SAAU,EAAG,EAAI,CAAE,MAAO,GAAI,GAAK,GAAK,EAAG,MAAQ,EACtE,EAAQ,aAAe,GAIvB,GAAI,IAAW,SAAU,EAAM,CAAE,MAAO,UAAU,EAAM,CAAE,MAAO,IAAc,CAAC,CAAI,EAAG,CAAI,CAAG,CAAG,EACjG,EAAQ,SAAW,GAInB,EAAQ,QAAU,EAAQ,SAI1B,GAAI,IAAU,SAAU,EAAK,CAAE,MAAO,UAAU,EAAM,CAAE,MAAO,IAAc,GAAc,CAAC,EAAG,CAAI,EAAG,CAAC,CAAG,CAAC,CAAG,CAAG,EACjH,EAAQ,QAAU,GAIlB,EAAQ,OAAS,EAAQ,QAIzB,GAAI,IAAiB,SAAU,EAAG,EAAG,EAAI,CACrC,GAAI,EAAQ,WAAW,CAAE,EAAG,CACxB,GAAI,GAAK,EAAE,0BAA0B,CAAE,EACvC,SAAG,OAAO,EAAG,EAAG,CAAC,EACV,CACX,CACA,MAAO,CAAC,CAAC,CACb,EACA,EAAQ,eAAiB,GAIzB,GAAI,IAAiB,SAAU,EAAG,EAAG,EAAI,CACrC,GAAI,EAAG,KAAO,EACV,MAAO,GAGP,GAAI,GAAK,EAAE,0BAA0B,CAAE,EACvC,SAAG,GAAK,EACD,CAEf,EACA,EAAQ,eAAiB,GAazB,GAAI,IAAO,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAC3C,GAAI,EAAG,SAAW,EACd,MAAO,GASX,OAPI,GAAM,CAAC,EAAQ,KAAK,CAAE,CAAC,EACvB,EAAO,EAAQ,KAAK,CAAE,EACtB,EAAU,SAAU,EAAG,CACvB,AAAI,EAAI,MAAM,SAAU,EAAG,CAAE,MAAO,CAAC,EAAE,OAAO,EAAG,CAAC,CAAG,CAAC,GAClD,EAAI,KAAK,CAAC,CAElB,EACS,EAAK,EAAG,EAAS,EAAM,EAAK,EAAO,OAAQ,IAAM,CACtD,GAAI,GAAI,EAAO,GACf,EAAQ,CAAC,CACb,CACA,MAAO,EACX,CAAG,EACH,EAAQ,KAAO,GAwCf,GAAI,IAAS,SAAU,EAAM,CACzB,GAAI,EAAQ,WAAW,CAAI,EAAG,CAC1B,GAAI,GAAI,GAAM,UAAU,EACxB,MAAO,GAAQ,KAAK,EAAK,OAAO,EAAE,OAAQ,EAAE,KAAK,CAAC,CACtD,CACA,MAAO,GAAW,QACtB,EACA,EAAQ,OAAS,GAKjB,GAAI,IAAQ,SAAU,EAAG,CACrB,GAAI,GAAQ,EAAQ,KAAK,CAAC,EAC1B,MAAO,UAAU,EAAQ,CAAE,MAAO,UAAU,EAAO,CAAE,MAAO,GAAM,EAAW,KAAK,EAAO,GAAO,CAAM,CAAC,CAAC,CAAG,CAAG,CAClH,EACA,EAAQ,MAAQ,GAahB,GAAI,IAAS,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAC7C,GAAI,GAAM,EAAG,OACT,EAAI,KAAK,MAAM,CAAC,EAAI,EACxB,GAAI,EAAQ,aAAa,KAAK,IAAI,CAAC,EAAG,CAAE,GAAK,IAAM,EAC/C,MAAO,GAEX,GAAI,EAAI,EAAG,CACP,GAAI,GAAK,EAAQ,QAAQ,CAAC,CAAC,EAAE,CAAE,EAAG,EAAI,EAAG,GAAI,EAAI,EAAG,GACpD,MAAO,GAAW,KAAK,EAAG,GAAO,CAAC,CAAC,CACvC,KAEI,OAAO,GAAQ,OAAO,EAAI,CAAG,EAAE,CAAE,CAEzC,CAAG,EACH,EAAQ,OAAS,GAUjB,GAAI,IAAoB,SAAU,EAAI,CAClC,MAAO,GAAQ,WAAW,CAAE,EAAI,EAAE,KAAK,CAAE,EAAI,EAAE,IACnD,EACA,EAAQ,kBAAoB,GAgB5B,GAAI,IAAS,SAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAG5C,OAFI,GAAI,KAAK,IAAI,EAAG,KAAK,MAAM,CAAC,CAAC,EAC7B,EAAM,CAAC,EAAE,CAAC,CAAC,EACN,EAAI,EAAG,EAAI,EAAG,IACnB,EAAI,KAAK,EAAE,CAAC,CAAC,EAEjB,MAAO,EACX,CAAG,EACH,EAAQ,OAAS,GAejB,GAAI,IAAY,SAAU,EAAG,CAAE,MAAO,GAAQ,OAAO,UAAY,CAAE,MAAO,EAAG,CAAC,CAAG,EACjF,EAAQ,UAAY,GAYpB,GAAI,IAAQ,SAAU,EAAO,EAAK,CAC9B,MAAO,IAAS,EAAM,EAAQ,OAAO,SAAU,EAAG,CAAE,MAAO,GAAQ,CAAG,CAAC,EAAE,EAAM,EAAQ,CAAC,EAAI,CAAC,CAAK,CACtG,EACA,EAAQ,MAAQ,GAehB,GAAI,IAAY,SAAU,EAAI,CAAE,MAAO,CAAC,EAAQ,KAAK,CAAE,EAAG,EAAQ,KAAK,CAAE,CAAC,CAAG,EAC7E,EAAQ,UAAY,GAYpB,GAAI,IAAW,SAAU,EAAI,CAAE,MAAO,CAAC,EAAQ,KAAK,CAAE,EAAG,EAAQ,KAAK,CAAE,CAAC,CAAG,EAC5E,EAAQ,SAAW,GAQnB,GAAI,IAAY,SAAU,EAAI,CAAE,MAAO,GAAQ,kBAAkB,EAAG,MAAM,CAAC,CAAG,EAC9E,EAAQ,UAAY,GACpB,YAAiB,EAAQ,CACrB,MAAO,UAAU,EAAO,CAAE,MAAO,GAAM,OAAO,CAAM,CAAG,CAC3D,CACA,EAAQ,QAAU,GAClB,YAAgB,EAAG,EAAG,CAClB,MAAO,GAAI,EAAE,OAAO,CAAC,EAAI,SAAU,EAAG,CAAE,MAAO,GAAE,OAAO,CAAC,CAAG,CAChE,CACA,EAAQ,OAAS,GAKjB,GAAI,IAAU,SAAU,EAAI,CACxB,MAAO,GAAG,SAAW,EAAI,EAAK,GAAc,CAAC,EAAQ,KAAK,CAAE,CAAC,EAAG,EAAG,MAAM,EAAG,EAAE,EAAE,QAAQ,CAAC,CAC7F,EACA,EAAQ,QAAU,GAClB,YAAe,EAAG,CACd,MAAO,UAAU,EAAI,CACjB,GAAI,GAAM,EAAG,OACb,GAAI,IAAQ,EACR,MAAO,GAAQ,MAKnB,OAHI,GAAM,CAAC,EACP,EAAO,EAAG,GACV,EAAM,CAAC,CAAI,EACN,EAAI,EAAG,EAAI,EAAK,IAAK,CAC1B,GAAI,GAAI,EAAG,GACX,AAAI,EAAE,OAAO,EAAG,CAAI,EAChB,EAAI,KAAK,CAAC,EAGV,GAAI,KAAK,CAAG,EACZ,EAAO,EACP,EAAM,CAAC,CAAI,EAEnB,CACA,SAAI,KAAK,CAAG,EACL,CACX,CACJ,CACA,EAAQ,MAAQ,GAgBhB,GAAI,IAAU,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAE9C,OADI,GAAM,CAAC,EACF,EAAK,EAAG,EAAO,EAAI,EAAK,EAAK,OAAQ,IAAM,CAChD,GAAI,GAAI,EAAK,GACT,EAAI,EAAE,CAAC,EACX,AAAI,EAAI,eAAe,CAAC,EACpB,EAAI,GAAG,KAAK,CAAC,EAGb,EAAI,GAAK,CAAC,CAAC,CAEnB,CACA,MAAO,EACX,CAAG,EACH,EAAQ,QAAU,GAKlB,GAAI,IAAO,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAC3C,MAAO,GAAG,SAAW,EAAI,EAAK,EAAG,MAAM,EAAE,KAAK,EAAE,OAAO,CAC3D,CAAG,EACH,EAAQ,KAAO,GAKf,GAAI,IAAW,SAAU,EAAG,EAAG,CAC3B,MAAO,GAAQ,SAAS,EAAG,UAAY,CAAE,MAAO,EAAG,CAAC,CACxD,EACA,EAAQ,SAAW,GAKnB,GAAI,IAAW,SAAU,EAAG,EAAG,CAAE,MAAO,UAAU,EAAI,CAAE,MAAQ,GAAQ,aAAa,EAAG,CAAE,EAAI,EAAE,KAAO,EAAE,KAAK,EAAQ,eAAe,EAAG,EAAE,EAAG,EAAE,EAAG,CAAE,CAAC,CAAI,CAAG,EAC5J,EAAQ,SAAW,GAKnB,GAAI,IAAU,SAAU,EAAI,EAAI,EAAG,CAG/B,OAFI,GAAK,CAAC,EAAE,EAAG,GAAI,EAAG,EAAE,CAAC,EACrB,EAAM,KAAK,IAAI,EAAG,OAAQ,EAAG,MAAM,EAC9B,EAAI,EAAG,EAAI,EAAK,IACrB,EAAG,GAAK,EAAE,EAAG,GAAI,EAAG,EAAE,EAE1B,MAAO,EACX,EACA,EAAQ,QAAU,GAClB,YAAa,EAAI,EAAI,CACjB,MAAI,KAAO,OACA,SAAU,EAAI,CAAE,MAAO,IAAI,EAAI,CAAE,CAAG,EAExC,EAAQ,QAAQ,EAAI,EAAI,SAAU,EAAG,EAAG,CAAE,MAAO,CAAC,EAAG,CAAC,CAAG,CAAC,CACrE,CACA,EAAQ,IAAM,GAKd,GAAI,IAAQ,SAAU,EAAK,CAGvB,OAFI,GAAK,CAAC,EAAI,GAAG,EAAE,EACf,EAAK,CAAC,EAAI,GAAG,EAAE,EACV,EAAI,EAAG,EAAI,EAAI,OAAQ,IAC5B,EAAG,GAAK,EAAI,GAAG,GACf,EAAG,GAAK,EAAI,GAAG,GAEnB,MAAO,CAAC,EAAI,CAAE,CAClB,EACA,EAAQ,MAAQ,GAYhB,GAAI,IAAa,SAAU,EAAQ,CAAE,MAAO,UAAU,EAAI,CAEtD,OADI,GAAM,CAAC,EAAQ,EAAG,EAAE,EACf,EAAI,EAAG,EAAI,EAAG,OAAQ,IAC3B,EAAI,KAAK,EAAQ,EAAG,EAAE,EAE1B,MAAO,EACX,CAAG,EACH,EAAQ,WAAa,GAYrB,GAAI,IAAc,SAAU,EAAQ,CAAE,MAAO,UAAU,EAAI,CACvD,GAAI,GAAO,EAAQ,KAAK,CAAE,EAC1B,MAAO,GAAQ,WAAW,CAAI,EAAI,EAAW,KAAK,EAAM,EAAQ,WAAW,CAAM,EAAG,EAAQ,QAAQ,EAAQ,KAAK,CAAE,CAAC,CAAC,EAAI,CAC7H,CAAG,EACH,EAAQ,YAAc,GAKtB,GAAI,IAAiB,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAErD,OADI,GAAM,EAAE,0BAA0B,EAAE,EAAG,EAAQ,KAAK,CAAE,CAAC,CAAC,EACnD,EAAI,EAAG,EAAI,EAAG,OAAQ,IAC3B,EAAI,KAAK,MAAM,EAAK,EAAE,EAAG,EAAG,EAAE,CAAC,EAEnC,MAAO,EACX,CAAG,EACH,EAAQ,eAAiB,GASzB,GAAI,IAAO,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAI3C,OAHI,GAAK,EAAE,CAAE,EAAG,EAAI,EAAG,GAAI,EAAO,EAAG,GACjC,EAAM,CAAC,CAAC,EACR,EAAO,EACJ,EAAQ,WAAW,CAAI,GAAG,CAC7B,GAAI,GAAK,EAAE,CAAI,EAAG,EAAM,EAAG,GAAI,EAAS,EAAG,GAC3C,EAAI,KAAK,CAAG,EACZ,EAAO,CACX,CACA,MAAO,EACX,CAAG,EACH,EAAQ,KAAO,GAOf,GAAI,IAAU,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAC9C,GAAI,GAAI,KAAK,IAAI,EAAG,CAAC,EACrB,MAAO,IAAK,EAAG,OAAS,CAAC,EAAI,EAAQ,KAAK,EAAI,CAAC,EAAW,KAAK,EAAG,MAAM,EAAG,CAAC,EAAG,EAAQ,QAAQ,EAAQ,KAAK,CAAE,CAAC,CAAC,EAAG,EAAG,MAAM,CAAC,CAAC,CAClI,CAAG,EACH,EAAQ,QAAU,GAQlB,GAAI,IAAW,SAAU,EAAG,CAAE,MAAO,GAAQ,KAAK,EAAQ,QAAQ,CAAC,CAAC,CAAG,EACvE,EAAQ,SAAW,GAInB,GAAI,GAAO,SAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,IAAI,CAAC,CAAC,CAAG,EAEtE,GAAgB,SAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,aAAa,CAAC,CAAC,CAAG,EACxF,GAAM,SAAU,EAAK,EAAI,CAAE,MAAO,GAAW,KAAK,EAAK,EAAQ,GAAG,CAAE,CAAC,CAAG,EACxE,GAAS,SAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,MAAM,CAAC,CAAC,CAAG,EAE1E,GAAU,SAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,OAAO,CAAC,CAAC,CAAG,EAE5E,GAAU,SAAU,EAAI,EAAG,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,OAAO,EAAG,CAAC,CAAC,CAAG,EAElF,GAAW,SAAU,EAAG,CACxB,GAAI,GAAW,EAAQ,QAAQ,CAAC,EAChC,MAAO,UAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAS,CAAC,CAAC,CAAG,CACvE,EAEI,GAAe,SAAU,EAAI,EAAG,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,YAAY,EAAG,CAAC,CAAC,CAAG,EAE5F,GAAY,SAAU,EAAG,CACzB,GAAI,GAAY,EAAQ,SAAS,CAAC,EAClC,MAAO,UAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAU,CAAC,CAAC,CAAG,CACxE,EAEI,GAAO,SAAU,EAAI,EAAM,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,IAAI,CAAI,CAAC,CAAG,EAE5E,GAAmB,SAAU,EAAI,EAAG,EAAG,CACvC,MAAO,GAAW,KAAK,EAAI,EAAQ,gBAAgB,EAAG,CAAC,CAAC,CAC5D,EAEI,GAAoB,SAAU,EAAG,CACjC,GAAI,GAAoB,EAAQ,iBAAiB,CAAC,EAClD,MAAO,UAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAkB,CAAC,CAAC,CAAG,CAChF,EAEI,GAAwB,SAAU,EAAI,EAAG,EAAG,CAC5C,MAAO,GAAW,KAAK,EAAI,EAAQ,qBAAqB,EAAG,CAAC,CAAC,CACjE,EAEI,GAAqB,SAAU,EAAG,CAClC,GAAI,GAAqB,EAAQ,kBAAkB,CAAC,EACpD,MAAO,UAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAmB,CAAC,CAAC,CAAG,CACjF,EAQA,EAAQ,GAAK,EAAE,UAOf,GAAI,IAAO,SAAU,EAAM,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,GAAW,KAAK,EAAI,GAAQ,EAAK,CAAC,CAAC,CAAG,CAAG,EACpG,EAAQ,KAAO,GAQf,EAAQ,IAAM,EAAQ,KAKtB,GAAI,IAAK,SAAU,EAAI,CAAE,MAAO,GAAQ,MAAM,SAAU,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,IAAI,CAAC,CAAC,CAAG,CAAC,CAAG,EAC7G,EAAQ,GAAK,GAOb,GAAI,IAAQ,SAAU,EAAG,CAAE,MAAO,GAAQ,eAAe,SAAU,EAAG,EAAG,CAAE,MAAO,GAAE,CAAC,CAAG,CAAC,CAAG,EAC5F,EAAQ,MAAQ,GAKhB,GAAI,IAAS,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAG7C,OAFI,GAAO,EAAQ,KAAK,CAAE,EACtB,EAAM,CAAC,EAAE,CAAE,CAAC,EACT,EAAQ,WAAW,CAAI,GAC1B,EAAI,KAAK,EAAE,CAAI,CAAC,EAChB,EAAO,EAAQ,KAAK,CAAI,EAE5B,MAAO,EACX,CAAG,EACH,EAAQ,OAAS,GAOjB,EAAQ,UAER,EAAQ,OAAO,EAAW,QAAQ,EAOlC,EAAQ,QAER,EAAQ,MAAM,EAAW,QAAQ,EAQjC,GAAI,IAAM,SAAU,EAAG,CACnB,MAAO,GAAQ,aAAa,SAAU,EAAG,EAAG,CAAE,MAAO,GAAE,CAAC,CAAG,CAAC,CAChE,EACA,EAAQ,IAAM,GAKd,GAAI,IAAe,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAEnD,OADI,GAAM,CAAC,EAAE,EAAG,EAAQ,KAAK,CAAE,CAAC,CAAC,EACxB,EAAI,EAAG,EAAI,EAAG,OAAQ,IAC3B,EAAI,KAAK,EAAE,EAAG,EAAG,EAAE,CAAC,EAExB,MAAO,EACX,CAAG,EACH,EAAQ,aAAe,GAKvB,GAAI,IAAS,SAAU,EAAG,EAAG,CACzB,MAAO,GAAQ,gBAAgB,EAAG,SAAU,EAAG,EAAG,EAAG,CAAE,MAAO,GAAE,EAAG,CAAC,CAAG,CAAC,CAC5E,EACA,EAAQ,OAAS,GAOjB,GAAI,IAAU,SAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CACpE,MAAO,GAAG,MAAM,CAAC,EAAE,OAAO,SAAU,EAAG,EAAG,CAAE,MAAO,GAAE,OAAO,EAAG,EAAE,CAAC,CAAC,CAAG,EAAG,EAAE,EAAG,EAAE,CAAC,CACrF,CAAG,CAAG,EACN,EAAQ,QAAU,GAKlB,GAAI,IAAc,SAAU,EAAG,EAAG,CAC9B,MAAO,GAAQ,qBAAqB,EAAG,SAAU,EAAG,EAAG,EAAG,CAAE,MAAO,GAAE,EAAG,CAAC,CAAG,CAAC,CACjF,EACA,EAAQ,YAAc,GAKtB,GAAI,IAAkB,SAAU,EAAG,EAAG,CAAE,MAAO,UAAU,EAAI,CACzD,MAAO,GAAG,OAAO,SAAU,EAAG,EAAG,EAAG,CAAE,MAAO,GAAE,EAAG,EAAG,CAAC,CAAG,EAAG,CAAC,CACjE,CAAG,EACH,EAAQ,gBAAkB,GAO1B,GAAI,IAAmB,SAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,GAAG,MAAM,CAAC,EAAE,OAAO,SAAU,EAAG,EAAG,EAAG,CAAE,MAAO,GAAE,OAAO,EAAG,EAAE,EAAI,EAAG,CAAC,CAAC,CAAG,EAAG,EAAE,EAAG,EAAG,EAAE,CAAC,CAAG,CAAG,CAAG,EAC1L,EAAQ,iBAAmB,GAK3B,GAAI,IAAuB,SAAU,EAAG,EAAG,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,GAAG,YAAY,SAAU,EAAG,EAAG,EAAG,CAAE,MAAO,GAAE,EAAG,EAAG,CAAC,CAAG,EAAG,CAAC,CAAG,CAAG,EAC5I,EAAQ,qBAAuB,GAK/B,GAAI,IAAW,SAAU,EAAG,CACxB,GAAI,GAAqB,EAAQ,kBAAkB,CAAC,EACpD,MAAO,UAAU,EAAG,CAAE,MAAO,GAAmB,SAAU,EAAG,EAAG,CAAE,MAAO,GAAE,CAAC,CAAG,CAAC,CAAG,CACvF,EACA,EAAQ,SAAW,GAKnB,GAAI,IAAW,SAAU,EAAG,CAAE,MAAO,GAAQ,kBAAkB,CAAC,EAAE,EAAW,EAAE,CAAG,EAClF,EAAQ,SAAW,GAKnB,GAAI,IAAoB,SAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAE9E,OADI,GAAM,EAAE,IAAI,EAAE,EAAG,EAAQ,KAAK,CAAE,CAAC,EAAG,EAAQ,EAAE,EACzC,EAAI,EAAG,EAAI,EAAG,OAAQ,IAC3B,EAAM,EAAE,GAAG,EAAE,IAAI,EAAK,SAAU,EAAI,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,OAAO,CAAC,CAAC,CAAG,CAAG,CAAC,EAAG,EAAE,EAAG,EAAG,EAAE,CAAC,EAEjI,MAAO,EACX,CAAG,CAAG,EACN,EAAQ,kBAAoB,GAK5B,EAAQ,QAAU,EAAE,KAQpB,EAAQ,IAAM,wBAKd,GAAI,IAAU,SAAU,EAAG,CAAE,MAAQ,CACjC,KAAM,SAAU,EAAI,CAAE,MAAO,IAAM,EAAG,IAAI,EAAE,IAAI,EAAE,KAAK,IAAI,EAAI,GAAK,CACxE,CAAI,EACJ,EAAQ,QAAU,GAOlB,GAAI,IAAe,UAAY,CAAE,MAAQ,CACrC,OAAQ,EACZ,CAAI,EACJ,EAAQ,aAAe,GAavB,GAAI,IAAQ,SAAU,EAAG,CACrB,MAAO,IAAK,WAAW,SAAU,EAAI,EAAI,CAAE,MAAO,GAAG,SAAW,EAAG,QAAU,EAAG,MAAM,SAAU,EAAG,EAAG,CAAE,MAAO,GAAE,OAAO,EAAG,EAAG,EAAE,CAAG,CAAC,CAAG,CAAC,CAC5I,EACA,EAAQ,MAAQ,GAKhB,GAAI,IAAoB,SAAU,EAAG,CACjC,GAAI,GAAS,EAAQ,MAAM,CAAC,EAC5B,MAAO,CACH,OAAQ,SAAU,EAAO,EAAQ,CAAE,MAAO,GAAO,CAAM,EAAE,CAAK,CAAG,CACrE,CACJ,EACA,EAAQ,kBAAoB,GAK5B,EAAQ,QAAU,CACd,IAAK,EAAQ,IACb,IAAK,CACT,EAOA,EAAQ,KAER,GAAU,KAAK,EAAQ,OAAO,EAK9B,EAAQ,QAAU,CACd,IAAK,EAAQ,IACb,GAAI,EAAQ,EAChB,EAKA,EAAQ,iBAAmB,CACvB,IAAK,EAAQ,IACb,IAAK,EACL,aAAc,EAClB,EAKA,EAAQ,MAAQ,CACZ,IAAK,EAAQ,IACb,IAAK,EACL,GAAI,EACR,EASA,EAAQ,QAER,GAAQ,QAAQ,EAAQ,KAAK,EAS7B,EAAQ,SAER,GAAQ,SAAS,EAAQ,KAAK,EAK9B,EAAQ,YAAc,CAClB,IAAK,EAAQ,IACb,IAAK,EACL,GAAI,GACJ,GAAI,EAAQ,EAChB,EAKA,EAAQ,MAAQ,CACZ,IAAK,EAAQ,IACb,IAAK,EACL,GAAI,GACJ,MAAO,EACX,EAUA,EAAQ,WAER,GAAQ,WAAW,EAAQ,KAAK,EAKhC,EAAQ,MAAQ,CACZ,IAAK,EAAQ,IACb,IAAK,EACL,GAAI,GACJ,GAAI,EAAQ,GACZ,MAAO,EACX,EAKA,EAAQ,SAAW,CACf,IAAK,EAAQ,IACb,OAAQ,GACR,QAAS,GACT,YAAa,EACjB,EAKA,EAAQ,kBAAoB,CACxB,IAAK,EAAQ,IACb,OAAQ,GACR,QAAS,GACT,YAAa,GACb,gBAAiB,GACjB,iBAAkB,GAClB,qBAAsB,EAC1B,EAKA,EAAQ,YAAc,CAClB,IAAK,EAAQ,IACb,IAAK,EACL,OAAQ,GACR,QAAS,GACT,YAAa,GACb,SAAU,GACV,SAAU,EAAQ,QACtB,EAKA,EAAQ,qBAAuB,CAC3B,IAAK,EAAQ,IACb,IAAK,EACL,aAAc,GACd,OAAQ,GACR,QAAS,GACT,YAAa,GACb,SAAU,GACV,SAAU,EAAQ,SAClB,gBAAiB,GACjB,iBAAkB,GAClB,qBAAsB,GACtB,kBAAmB,EACvB,EAKA,EAAQ,IAAM,CACV,IAAK,EAAQ,IACb,IAAK,EACL,IAAK,EACT,EAKA,EAAQ,QAAU,CACd,IAAK,EAAQ,IACb,IAAK,EACL,OAAQ,GACR,QAAS,EAAQ,OACrB,EAOA,EAAQ,GAER,EAAQ,GAAG,EAAE,WAAW,EAIxB,EAAQ,OAER,GAAU,OAAO,EAAQ,OAAO,EAIhC,EAAQ,KAER,GAAQ,KAAK,EAAQ,KAAK,EAO1B,EAAQ,IAER,GAAQ,IAAI,EAAQ,KAAK,EAOzB,EAAQ,KAAO,EAAQ,QAIvB,EAAQ,KAAO,EAAE,KAIjB,GAAI,IAAO,SAAU,EAAI,CAAE,MAAO,GAAG,EAAG,OAAS,EAAI,EACrD,EAAQ,KAAO,GAYf,GAAI,IAAO,SAAU,EAAI,CAAE,MAAO,GAAG,MAAM,EAAG,EAAE,CAAG,EACnD,EAAQ,KAAO,GAIf,GAAI,IAAM,SAAU,EAAG,CACnB,GAAI,GAAI,GAAG,IAAI,CAAC,EAChB,MAAO,UAAU,EAAI,CAAE,MAAO,GAAG,OAAO,EAAE,MAAM,CAAG,CACvD,EACA,EAAQ,IAAM,GAId,GAAI,IAAM,SAAU,EAAG,CACnB,GAAI,GAAI,GAAG,IAAI,CAAC,EAChB,MAAO,UAAU,EAAI,CAAE,MAAO,GAAG,OAAO,EAAE,MAAM,CAAG,CACvD,EACA,EAAQ,IAAM,GAId,GAAI,IAAY,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,GAAG,OAAO,EAAE,MAAM,CAAG,CAAG,EACrF,EAAQ,UAAY,GAOpB,GAAI,IAAY,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAChD,MAAO,GAAE,EAAQ,KAAK,CAAE,EAAG,EAAQ,KAAK,CAAE,CAAC,CAC/C,CAAG,EACH,EAAQ,UAAY,GAOpB,GAAI,IAAa,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CACjD,MAAO,GAAE,EAAQ,KAAK,CAAE,EAAG,EAAQ,KAAK,CAAE,CAAC,CAC/C,CAAG,EACH,EAAQ,WAAa,GAMrB,GAAI,IAAa,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,IAAc,CACxE,EAAE,EAAQ,KAAK,CAAE,CAAC,CACtB,EAAG,EAAQ,KAAK,CAAE,CAAC,CAAG,CAAG,EACzB,EAAQ,WAAa,GAOrB,GAAI,IAAa,SAAU,EAAG,CAAE,MAAO,GAAQ,WAAW,UAAY,CAAE,MAAO,EAAG,CAAC,CAAG,EACtF,EAAQ,WAAa,GAMrB,GAAI,IAAa,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CACjD,MAAO,GAAW,KAAK,EAAQ,KAAK,CAAE,EAAG,EAAQ,OAAO,EAAE,EAAQ,KAAK,CAAE,CAAC,CAAC,CAAC,CAChF,CAAG,EACH,EAAQ,WAAa,GAOrB,GAAI,IAAa,SAAU,EAAG,CAAE,MAAO,GAAQ,WAAW,UAAY,CAAE,MAAO,EAAG,CAAC,CAAG,EACtF,EAAQ,WAAa,GAYrB,GAAI,IAAc,SAAU,EAAG,CAC3B,GAAI,GAAa,EAAQ,UAAU,CAAC,EACpC,MAAO,UAAU,EAAQ,CAAE,MAAO,GAAW,KAAK,EAAQ,YAAY,CAAM,EAAG,CAAU,CAAG,CAChG,EACA,EAAQ,YAAc,GACtB,YAAmB,EAAG,CAClB,GAAI,GAAQ,EAAQ,KAAK,CAAC,EACtB,EAAS,GAAM,CAAC,EACpB,MAAO,UAAU,EAAI,CAAE,MAAQ,GAAQ,WAAW,CAAE,EAAI,EAAO,EAAM,CAAE,CAAC,EAAI,EAAQ,KAAQ,CAChG,CACA,EAAQ,UAAY,GACpB,YAAgB,EAAW,CACvB,MAAO,GAAQ,gBAAgB,SAAU,EAAG,EAAG,CAAE,MAAO,GAAU,CAAC,CAAG,CAAC,CAC3E,CACA,EAAQ,OAAS,GAQjB,GAAI,IAAkB,SAAU,EAAW,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,GAAQ,kBAAkB,EAAG,OAAO,SAAU,EAAG,EAAG,CAAE,MAAO,GAAU,EAAG,CAAC,CAAG,CAAC,CAAC,CAAG,CAAG,EACjK,EAAQ,gBAAkB,GAQ1B,EAAQ,OAAS,EAAQ,UAQzB,EAAQ,OAAS,EAAQ,SACzB,YAAc,EAAM,EAAM,CACtB,MAAO,KAAS,OAAY,EAAQ,QAAQ,CAAI,EAAI,EAAW,KAAK,EAAM,EAAQ,QAAQ,CAAI,CAAC,CACnG,CACA,EAAQ,KAAO,GAQf,GAAI,IAAO,SAAU,EAAM,EAAK,CAAE,MAAO,GAAW,KAAK,EAAM,GAAO,CAAC,CAAG,CAAC,CAAC,CAAG,EAC/E,EAAQ,KAAO,GAQf,GAAI,IAAW,SAAU,EAAG,EAAG,CAAE,MAAO,UAAU,EAAI,CAClD,MAAO,GAAI,GAAK,EAAI,EAAG,OAAS,EAAE,KAAO,EAAE,KAAK,EAAQ,eAAe,EAAG,EAAG,CAAE,CAAC,CACpF,CAAG,EACH,EAAQ,SAAW,GAQnB,EAAQ,aAAe,EAAQ,WAO/B,EAAQ,KAAO,EAAQ,UAQvB,EAAQ,sBAAwB,CAC5B,IAAK,EAAQ,IACb,GAAI,EAAQ,GACZ,IAAK,EACL,aAAc,GACd,GAAI,GACJ,MAAO,GACP,OAAQ,GACR,QAAS,EAAQ,QACjB,OAAQ,GACR,QAAS,GACT,YAAa,GACb,SAAU,GACV,SAAU,EAAQ,SAClB,gBAAiB,GACjB,iBAAkB,GAClB,qBAAsB,GACtB,kBAAmB,GACnB,IAAK,EACT,IC/sCA,0BACA,GAAI,IAAmB,GAAQ,EAAK,iBAAqB,QAAO,OAAU,SAAS,EAAG,EAAG,EAAG,EAAI,CAC5F,AAAI,IAAO,QAAW,GAAK,GAC3B,OAAO,eAAe,EAAG,EAAI,CAAE,WAAY,GAAM,IAAK,UAAW,CAAE,MAAO,GAAE,EAAI,CAAE,CAAC,CACvF,EAAM,SAAS,EAAG,EAAG,EAAG,EAAI,CACxB,AAAI,IAAO,QAAW,GAAK,GAC3B,EAAE,GAAM,EAAE,EACd,GACI,GAAsB,GAAQ,EAAK,oBAAwB,QAAO,OAAU,SAAS,EAAG,EAAG,CAC3F,OAAO,eAAe,EAAG,UAAW,CAAE,WAAY,GAAM,MAAO,CAAE,CAAC,CACtE,EAAK,SAAS,EAAG,EAAG,CAChB,EAAE,QAAa,CACnB,GACI,GAAgB,GAAQ,EAAK,cAAiB,SAAU,EAAK,CAC7D,GAAI,GAAO,EAAI,WAAY,MAAO,GAClC,GAAI,GAAS,CAAC,EACd,GAAI,GAAO,KAAM,OAAS,KAAK,GAAK,AAAI,IAAM,WAAa,OAAO,UAAU,eAAe,KAAK,EAAK,CAAC,GAAG,GAAgB,EAAQ,EAAK,CAAC,EACvI,UAAmB,EAAQ,CAAG,EACvB,CACX,EACI,GAAiB,GAAQ,EAAK,eAAkB,SAAU,EAAI,EAAM,CACpE,OAAS,GAAI,EAAG,EAAK,EAAK,OAAQ,EAAI,EAAG,OAAQ,EAAI,EAAI,IAAK,IAC1D,EAAG,GAAK,EAAK,GACjB,MAAO,EACX,EACA,OAAO,eAAe,EAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,EAAQ,aAAe,EAAQ,IAAM,EAAQ,QAAU,EAAQ,UAAY,EAAQ,OAAS,EAAQ,MAAQ,EAAQ,GAAK,EAAQ,IAAM,EAAQ,KAAO,EAAQ,SAAW,EAAQ,QAAU,EAAQ,KAAO,EAAQ,eAAiB,EAAQ,QAAU,EAAQ,iBAAmB,EAAQ,YAAc,EAAQ,WAAa,EAAQ,MAAQ,EAAQ,IAAM,EAAQ,QAAU,EAAQ,GAAK,EAAQ,KAAO,EAAQ,SAAW,EAAQ,SAAW,EAAQ,SAAW,EAAQ,KAAO,EAAQ,QAAU,EAAQ,MAAQ,EAAQ,QAAU,EAAQ,OAAS,EAAQ,QAAU,EAAQ,SAAW,EAAQ,UAAY,EAAQ,MAAQ,EAAQ,UAAY,EAAQ,OAAS,EAAQ,UAAY,EAAQ,0BAA4B,EAAQ,OAAS,EAAQ,MAAQ,EAAQ,OAAS,EAAQ,KAAO,EAAQ,eAAiB,EAAQ,eAAiB,EAAQ,OAAS,EAAQ,QAAU,EAAQ,QAAU,EAAQ,SAAW,EAAQ,aAAe,EAAQ,WAAa,OACj6B,EAAQ,OAAS,EAAQ,UAAY,EAAQ,YAAc,EAAQ,WAAa,EAAQ,WAAa,EAAQ,WAAa,EAAQ,WAAa,EAAQ,WAAa,EAAQ,UAAY,EAAQ,UAAY,EAAQ,IAAM,EAAQ,IAAM,EAAQ,KAAO,EAAQ,KAAO,EAAQ,KAAO,EAAQ,KAAO,EAAQ,IAAM,EAAQ,KAAO,EAAQ,OAAS,EAAQ,GAAK,EAAQ,QAAU,EAAQ,IAAM,EAAQ,qBAAuB,EAAQ,YAAc,EAAQ,kBAAoB,EAAQ,SAAW,EAAQ,MAAQ,EAAQ,WAAa,EAAQ,MAAQ,EAAQ,YAAc,EAAQ,SAAW,EAAQ,QAAU,EAAQ,MAAQ,EAAQ,iBAAmB,EAAQ,QAAU,EAAQ,KAAO,EAAQ,QAAU,EAAQ,kBAAoB,EAAQ,MAAQ,EAAQ,aAAe,EAAQ,QAAU,EAAQ,IAAM,EAAQ,QAAU,EAAQ,kBAAoB,EAAQ,SAAW,EAAQ,SAAW,EAAQ,qBAAuB,EAAQ,YAAc,EAAQ,gBAAkB,EAAQ,OAAS,OACx8B,EAAQ,cAAgB,EAAQ,KAAO,EAAQ,aAAe,EAAQ,KAAO,EAAQ,KAAO,EAAQ,OAAS,EAAQ,OAAS,EAAQ,gBAAkB,OACxJ,GAAI,IAAU,KACV,GAAU,KACV,EAAa,IACb,GAAY,KACZ,GAAI,GAAa,IAAqB,EACtC,GAAQ,KACR,EAAO,GAAa,IAAkC,EAOtD,GAAa,SAAU,EAAI,CAAE,MAAO,GAAG,OAAS,CAAG,EACvD,EAAQ,WAAa,GAIrB,GAAI,IAAe,SAAU,EAAG,EAAI,CAAE,MAAO,GAAI,GAAK,GAAK,EAAG,MAAQ,EACtE,EAAQ,aAAe,GAIvB,GAAI,IAAW,SAAU,EAAM,CAAE,MAAO,UAAU,EAAM,CAAE,MAAO,IAAc,CAAC,CAAI,EAAG,CAAI,CAAG,CAAG,EACjG,EAAQ,SAAW,GAInB,EAAQ,QAAU,EAAQ,SAI1B,GAAI,IAAU,SAAU,EAAK,CAAE,MAAO,UAAU,EAAM,CAAE,MAAO,IAAc,GAAc,CAAC,EAAG,CAAI,EAAG,CAAC,CAAG,CAAC,CAAG,CAAG,EACjH,EAAQ,QAAU,GAIlB,EAAQ,OAAS,EAAQ,QAIzB,GAAI,IAAiB,SAAU,EAAG,EAAG,EAAI,CACrC,GAAI,EAAQ,WAAW,CAAE,EAAG,CACxB,GAAI,GAAK,EAAQ,0BAA0B,CAAE,EAC7C,SAAG,OAAO,EAAG,EAAG,CAAC,EACV,CACX,CACA,MAAO,CAAC,CAAC,CACb,EACA,EAAQ,eAAiB,GAIzB,GAAI,IAAiB,SAAU,EAAG,EAAG,EAAI,CACrC,GAAI,GAAK,EAAQ,0BAA0B,CAAE,EAC7C,SAAG,GAAK,EACD,CACX,EACA,EAAQ,eAAiB,GAazB,GAAI,IAAO,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAC3C,GAAI,EAAG,SAAW,EACd,MAAO,GAAQ,KAAK,CAAE,EAS1B,OAPI,GAAM,CAAC,EAAQ,KAAK,CAAE,CAAC,EACvB,EAAO,EAAQ,KAAK,CAAE,EACtB,EAAU,SAAU,EAAG,CACvB,AAAI,EAAI,MAAM,SAAU,EAAG,CAAE,MAAO,CAAC,EAAE,OAAO,EAAG,CAAC,CAAG,CAAC,GAClD,EAAI,KAAK,CAAC,CAElB,EACS,EAAK,EAAG,EAAS,EAAM,EAAK,EAAO,OAAQ,IAAM,CACtD,GAAI,GAAI,EAAO,GACf,EAAQ,CAAC,CACb,CACA,MAAO,EACX,CAAG,EACH,EAAQ,KAAO,GAwCf,GAAI,IAAS,SAAU,EAAM,CACzB,GAAI,EAAQ,WAAW,CAAI,EAAG,CAC1B,GAAI,GAAI,GAAM,UAAU,EACxB,MAAO,GAAQ,KAAK,EAAK,OAAO,EAAE,OAAQ,EAAE,KAAK,CAAC,CACtD,CACA,MAAO,GAAQ,IACnB,EACA,EAAQ,OAAS,GAKjB,GAAI,IAAQ,SAAU,EAAG,CACrB,GAAI,GAAQ,EAAQ,KAAK,CAAC,EAC1B,MAAO,UAAU,EAAQ,CAAE,MAAO,UAAU,EAAO,CAAE,MAAO,GAAM,EAAW,KAAK,EAAO,GAAO,CAAM,CAAC,CAAC,CAAG,CAAG,CAClH,EACA,EAAQ,MAAQ,GAahB,GAAI,IAAS,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAC7C,GAAI,GAAM,EAAG,OACT,EAAI,KAAK,MAAM,CAAC,EAAI,EACxB,GAAI,EAAQ,aAAa,KAAK,IAAI,CAAC,EAAG,CAAE,GAAK,IAAM,EAC/C,MAAO,GAAQ,KAAK,CAAE,EAE1B,GAAI,EAAI,EAAG,CACP,GAAI,GAAK,EAAQ,QAAQ,CAAC,CAAC,EAAE,CAAE,EAAG,EAAI,EAAG,GAAI,EAAI,EAAG,GACpD,MAAO,GAAW,KAAK,EAAG,GAAO,CAAC,CAAC,CACvC,KAEI,OAAO,GAAQ,OAAO,EAAI,CAAG,EAAE,CAAE,CAEzC,CAAG,EACH,EAAQ,OAAS,GAQjB,EAAQ,0BAA4B,GAAE,0BAOtC,GAAI,IAAY,SAAU,EAAI,CAAE,MAAQ,GAAQ,WAAW,CAAE,EAAI,GAAE,KAAK,CAAE,EAAI,GAAE,IAAO,EACvF,EAAQ,UAAY,GAgBpB,GAAI,IAAS,SAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAG5C,OAFI,GAAI,KAAK,IAAI,EAAG,KAAK,MAAM,CAAC,CAAC,EAC7B,EAAM,CAAC,EAAE,CAAC,CAAC,EACN,EAAI,EAAG,EAAI,EAAG,IACnB,EAAI,KAAK,EAAE,CAAC,CAAC,EAEjB,MAAO,EACX,CAAG,EACH,EAAQ,OAAS,GAejB,GAAI,IAAY,SAAU,EAAG,CAAE,MAAO,GAAQ,OAAO,UAAY,CAAE,MAAO,EAAG,CAAC,CAAG,EACjF,EAAQ,UAAY,GAYpB,GAAI,IAAQ,SAAU,EAAO,EAAK,CAC9B,MAAO,IAAS,EAAM,EAAQ,OAAO,SAAU,EAAG,CAAE,MAAO,GAAQ,CAAG,CAAC,EAAE,EAAM,EAAQ,CAAC,EAAI,CAAC,CAAK,CACtG,EACA,EAAQ,MAAQ,GAehB,GAAI,IAAY,SAAU,EAAI,CAAE,MAAO,CAAC,EAAQ,KAAK,CAAE,EAAG,EAAQ,KAAK,CAAE,CAAC,CAAG,EAC7E,EAAQ,UAAY,GAYpB,GAAI,IAAW,SAAU,EAAI,CAAE,MAAO,CAAC,EAAQ,KAAK,CAAE,EAAG,EAAQ,KAAK,CAAE,CAAC,CAAG,EAC5E,EAAQ,SAAW,GACnB,YAAiB,EAAQ,CACrB,MAAO,UAAU,EAAO,CAAE,MAAO,GAAM,OAAO,CAAM,CAAG,CAC3D,CACA,EAAQ,QAAU,GAClB,YAAgB,EAAG,EAAG,CAClB,MAAO,GAAI,EAAE,OAAO,CAAC,EAAI,SAAU,EAAG,CAAE,MAAO,GAAE,OAAO,CAAC,CAAG,CAChE,CACA,EAAQ,OAAS,GAKjB,GAAI,IAAU,SAAU,EAAI,CAAE,MAAO,IAAc,CAAC,EAAQ,KAAK,CAAE,CAAC,EAAG,EAAG,MAAM,EAAG,EAAE,EAAE,QAAQ,CAAC,CAAG,EACnG,EAAQ,QAAU,GAClB,YAAe,EAAG,CACd,MAAO,UAAU,EAAI,CACjB,GAAI,GAAM,EAAG,OACb,GAAI,IAAQ,EACR,MAAO,CAAC,EAKZ,OAHI,GAAM,CAAC,EACP,EAAO,EAAG,GACV,EAAM,CAAC,CAAI,EACN,EAAI,EAAG,EAAI,EAAK,IAAK,CAC1B,GAAI,GAAI,EAAG,GACX,AAAI,EAAE,OAAO,EAAG,CAAI,EAChB,EAAI,KAAK,CAAC,EAGV,GAAI,KAAK,CAAG,EACZ,EAAO,EACP,EAAM,CAAC,CAAI,EAEnB,CACA,SAAI,KAAK,CAAG,EACL,CACX,CACJ,CACA,EAAQ,MAAQ,GAgBhB,GAAI,IAAU,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAE9C,OADI,GAAM,CAAC,EACF,EAAK,EAAG,EAAO,EAAI,EAAK,EAAK,OAAQ,IAAM,CAChD,GAAI,GAAI,EAAK,GACT,EAAI,EAAE,CAAC,EACX,AAAI,EAAI,eAAe,CAAC,EACpB,EAAI,GAAG,KAAK,CAAC,EAGb,EAAI,GAAK,CAAC,CAAC,CAEnB,CACA,MAAO,EACX,CAAG,EACH,EAAQ,QAAU,GAKlB,GAAI,IAAO,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAC3C,MAAO,GAAG,MAAM,EAAE,KAAK,EAAE,OAAO,CACpC,CAAG,EACH,EAAQ,KAAO,GAKf,GAAI,IAAW,SAAU,EAAG,EAAG,CAAE,MAAO,UAAU,EAAI,CAClD,MAAO,GAAI,GAAK,EAAI,EAAG,OAAS,GAAE,KAAO,GAAE,KAAK,EAAQ,eAAe,EAAG,EAAG,CAAE,CAAC,CACpF,CAAG,EACH,EAAQ,SAAW,GAKnB,GAAI,IAAW,SAAU,EAAG,EAAG,CAC3B,MAAO,GAAQ,SAAS,EAAG,UAAY,CAAE,MAAO,EAAG,CAAC,CACxD,EACA,EAAQ,SAAW,GAKnB,GAAI,IAAW,SAAU,EAAG,EAAG,CAAE,MAAO,UAAU,EAAI,CAClD,MAAO,GAAQ,aAAa,EAAG,CAAE,EAAI,GAAE,KAAO,GAAE,KAAK,EAAQ,eAAe,EAAG,EAAE,EAAG,EAAE,EAAG,CAAE,CAAC,CAChG,CAAG,EACH,EAAQ,SAAW,GAKnB,EAAQ,KAAO,EAAQ,0BAKvB,GAAI,IAAK,SAAU,EAAG,CAAE,MAAO,CAAC,CAAC,CAAG,EACpC,EAAQ,GAAK,GAKb,GAAI,IAAU,SAAU,EAAI,EAAI,EAAG,CAG/B,OAFI,GAAK,CAAC,EAAE,EAAG,GAAI,EAAG,EAAE,CAAC,EACrB,EAAM,KAAK,IAAI,EAAG,OAAQ,EAAG,MAAM,EAC9B,EAAI,EAAG,EAAI,EAAK,IACrB,EAAG,GAAK,EAAE,EAAG,GAAI,EAAG,EAAE,EAE1B,MAAO,EACX,EACA,EAAQ,QAAU,GAClB,YAAa,EAAI,EAAI,CACjB,MAAI,KAAO,OACA,SAAU,EAAI,CAAE,MAAO,IAAI,EAAI,CAAE,CAAG,EAExC,EAAQ,QAAQ,EAAI,EAAI,SAAU,EAAG,EAAG,CAAE,MAAO,CAAC,EAAG,CAAC,CAAG,CAAC,CACrE,CACA,EAAQ,IAAM,GAKd,GAAI,IAAQ,SAAU,EAAK,CAGvB,OAFI,GAAK,CAAC,EAAI,GAAG,EAAE,EACf,EAAK,CAAC,EAAI,GAAG,EAAE,EACV,EAAI,EAAG,EAAI,EAAI,OAAQ,IAC5B,EAAG,GAAK,EAAI,GAAG,GACf,EAAG,GAAK,EAAI,GAAG,GAEnB,MAAO,CAAC,EAAI,CAAE,CAClB,EACA,EAAQ,MAAQ,GAYhB,GAAI,IAAa,SAAU,EAAQ,CAAE,MAAO,UAAU,EAAI,CAEtD,OADI,GAAM,CAAC,EAAQ,EAAG,EAAE,EACf,EAAI,EAAG,EAAI,EAAG,OAAQ,IAC3B,EAAI,KAAK,EAAQ,EAAG,EAAE,EAE1B,MAAO,EACX,CAAG,EACH,EAAQ,WAAa,GAYrB,GAAI,IAAc,SAAU,EAAQ,CAAE,MAAO,UAAU,EAAI,CACvD,GAAI,GAAO,EAAQ,KAAK,CAAE,EAC1B,MAAO,GAAQ,WAAW,CAAI,EAAI,EAAW,KAAK,EAAM,EAAQ,WAAW,CAAM,EAAG,EAAQ,QAAQ,EAAQ,KAAK,CAAE,CAAC,CAAC,EAAI,EAAQ,KAAK,CAAE,CAC5I,CAAG,EACH,EAAQ,YAAc,GAKtB,EAAQ,iBAAmB,EAAK,iBAKhC,EAAQ,QAAU,EAAK,QAKvB,GAAI,IAAiB,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAErD,OADI,GAAM,EAAQ,0BAA0B,EAAE,EAAG,EAAQ,KAAK,CAAE,CAAC,CAAC,EACzD,EAAI,EAAG,EAAI,EAAG,OAAQ,IAC3B,EAAI,KAAK,MAAM,EAAK,EAAE,EAAG,EAAG,EAAE,CAAC,EAEnC,MAAO,EACX,CAAG,EACH,EAAQ,eAAiB,GAKzB,GAAI,IAAO,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAI3C,OAHI,GAAK,EAAE,CAAE,EAAG,EAAI,EAAG,GAAI,EAAO,EAAG,GACjC,EAAM,CAAC,CAAC,EACR,EAAO,EACJ,EAAQ,WAAW,CAAI,GAAG,CAC7B,GAAI,GAAK,EAAE,CAAI,EAAG,EAAM,EAAG,GAAI,EAAS,EAAG,GAC3C,EAAI,KAAK,CAAG,EACZ,EAAO,CACX,CACA,MAAO,EACX,CAAG,EACH,EAAQ,KAAO,GAOf,GAAI,IAAU,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAC9C,GAAI,GAAI,KAAK,IAAI,EAAG,CAAC,EACrB,MAAO,IAAK,EAAG,OAAS,CAAC,EAAQ,KAAK,CAAE,EAAG,CAAC,CAAC,EAAI,CAAC,EAAW,KAAK,EAAG,MAAM,EAAG,CAAC,EAAG,EAAQ,QAAQ,EAAQ,KAAK,CAAE,CAAC,CAAC,EAAG,EAAG,MAAM,CAAC,CAAC,CACrI,CAAG,EACH,EAAQ,QAAU,GAKlB,GAAI,IAAW,SAAU,EAAG,CAAE,MAAO,GAAQ,KAAK,EAAQ,QAAQ,CAAC,CAAC,CAAG,EACvE,EAAQ,SAAW,GAKnB,GAAI,GAAO,SAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,IAAI,CAAC,CAAC,CAAG,EAEtE,GAAgB,SAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,aAAa,CAAC,CAAC,CAAG,EAExF,GAAM,SAAU,EAAK,EAAI,CAAE,MAAO,GAAW,KAAK,EAAK,EAAQ,GAAG,CAAE,CAAC,CAAG,EAExE,GAAS,SAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,MAAM,CAAC,CAAC,CAAG,EAE1E,GAAU,SAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,OAAO,CAAC,CAAC,CAAG,EAE5E,GAAU,SAAU,EAAI,EAAG,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,OAAO,EAAG,CAAC,CAAC,CAAG,EAElF,GAAW,SAAU,EAAG,CACxB,GAAI,GAAW,EAAQ,QAAQ,CAAC,EAChC,MAAO,UAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAS,CAAC,CAAC,CAAG,CACvE,EAEI,GAAe,SAAU,EAAI,EAAG,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,YAAY,EAAG,CAAC,CAAC,CAAG,EAE5F,GAAY,SAAU,EAAG,CACzB,GAAI,GAAY,EAAQ,SAAS,CAAC,EAClC,MAAO,UAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAU,CAAC,CAAC,CAAG,CACxE,EAEI,GAAO,SAAU,EAAI,EAAM,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,IAAI,CAAI,CAAC,CAAG,EAE5E,GAAmB,SAAU,EAAI,EAAG,EAAG,CACvC,MAAO,GAAW,KAAK,EAAI,EAAQ,gBAAgB,EAAG,CAAC,CAAC,CAC5D,EAEI,GAAoB,SAAU,EAAG,CACjC,GAAI,GAAoB,EAAQ,iBAAiB,CAAC,EAClD,MAAO,UAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAkB,CAAC,CAAC,CAAG,CAChF,EAEI,GAAwB,SAAU,EAAI,EAAG,EAAG,CAC5C,MAAO,GAAW,KAAK,EAAI,EAAQ,qBAAqB,EAAG,CAAC,CAAC,CACjE,EAEI,GAAqB,SAAU,EAAG,CAClC,GAAI,GAAqB,EAAQ,kBAAkB,CAAC,EACpD,MAAO,UAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAmB,CAAC,CAAC,CAAG,CACjF,EAUI,GAAO,SAAU,EAAM,CAAE,MAAO,UAAU,EAAI,CAC9C,MAAO,GAAW,KAAK,EAAI,GAAQ,EAAK,CAAC,CAAC,CAC9C,CAAG,EACH,EAAQ,KAAO,GAQf,EAAQ,IAAM,EAAQ,KAOtB,GAAI,IAAK,SAAU,EAAI,CACnB,MAAO,GAAQ,MAAM,SAAU,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,IAAI,CAAC,CAAC,CAAG,CAAC,CACrF,EACA,EAAQ,GAAK,GAOb,GAAI,IAAQ,SAAU,EAAG,CACrB,MAAO,GAAQ,eAAe,SAAU,EAAG,EAAG,CAAE,MAAO,GAAE,CAAC,CAAG,CAAC,CAClE,EACA,EAAQ,MAAQ,GAKhB,GAAI,IAAS,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAG7C,OAFI,GAAO,EAAQ,KAAK,CAAE,EACtB,EAAM,CAAC,EAAE,CAAE,CAAC,EACT,EAAQ,WAAW,CAAI,GAC1B,EAAI,KAAK,EAAE,CAAI,CAAC,EAChB,EAAO,EAAQ,KAAK,CAAI,EAE5B,MAAO,EACX,CAAG,EACH,EAAQ,OAAS,GAOjB,EAAQ,UAER,EAAQ,OAAO,EAAW,QAAQ,EAOlC,EAAQ,QAER,EAAQ,MAAM,EAAW,QAAQ,EAQjC,GAAI,IAAM,SAAU,EAAG,CAAE,MAAO,GAAQ,aAAa,SAAU,EAAG,EAAG,CAAE,MAAO,GAAE,CAAC,CAAG,CAAC,CAAG,EACxF,EAAQ,IAAM,GAKd,GAAI,IAAe,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAEnD,OADI,GAAM,CAAC,EAAE,EAAG,EAAQ,KAAK,CAAE,CAAC,CAAC,EACxB,EAAI,EAAG,EAAI,EAAG,OAAQ,IAC3B,EAAI,KAAK,EAAE,EAAG,EAAG,EAAE,CAAC,EAExB,MAAO,EACX,CAAG,EACH,EAAQ,aAAe,GAKvB,EAAQ,OAAS,EAAK,OAKtB,EAAQ,gBAAkB,EAAK,gBAK/B,EAAQ,YAAc,EAAK,YAK3B,EAAQ,qBAAuB,EAAK,qBAIpC,GAAI,IAAW,SAAU,EAAG,CACxB,GAAI,GAAqB,EAAQ,kBAAkB,CAAC,EACpD,MAAO,UAAU,EAAG,CAAE,MAAO,GAAmB,SAAU,EAAG,EAAG,CAAE,MAAO,GAAE,CAAC,CAAG,CAAC,CAAG,CACvF,EACA,EAAQ,SAAW,GAInB,GAAI,IAAW,SAAU,EAAG,CAAE,MAAO,GAAQ,kBAAkB,CAAC,EAAE,SAAU,EAAG,EAAG,CAAE,MAAO,EAAG,CAAC,CAAG,EAClG,EAAQ,SAAW,GAInB,GAAI,IAAoB,SAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAE9E,OADI,GAAM,EAAE,IAAI,EAAE,EAAG,EAAQ,KAAK,CAAE,CAAC,EAAG,EAAQ,EAAE,EACzC,EAAI,EAAG,EAAI,EAAG,OAAQ,IAC3B,EAAM,EAAE,GAAG,EAAE,IAAI,EAAK,SAAU,EAAI,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,OAAO,CAAC,CAAC,CAAG,CAAG,CAAC,EAAG,EAAE,EAAG,EAAG,EAAE,CAAC,EAEjI,MAAO,EACX,CAAG,CAAG,EACN,EAAQ,kBAAoB,GAI5B,EAAQ,QAAU,EAAK,KAQvB,EAAQ,IAAM,gBAKd,EAAQ,QAAU,EAAK,QAOvB,GAAI,IAAe,UAAY,CAAE,MAAQ,CACrC,OAAQ,EACZ,CAAI,EACJ,EAAQ,aAAe,GAavB,EAAQ,MAAQ,EAAK,MAKrB,GAAI,IAAoB,SAAU,EAAG,CACjC,GAAI,GAAS,EAAQ,MAAM,CAAC,EAC5B,MAAO,CACH,OAAQ,SAAU,EAAO,EAAQ,CAAE,MAAO,GAAO,CAAM,EAAE,CAAK,CAAG,CACrE,CACJ,EACA,EAAQ,kBAAoB,GAK5B,EAAQ,QAAU,CACd,IAAK,EAAQ,IACb,IAAK,CACT,EAOA,EAAQ,KAER,GAAU,KAAK,EAAQ,OAAO,EAK9B,EAAQ,QAAU,CACd,IAAK,EAAQ,IACb,GAAI,EAAQ,EAChB,EAKA,EAAQ,iBAAmB,CACvB,IAAK,EAAQ,IACb,IAAK,EACL,aAAc,EAClB,EAKA,EAAQ,MAAQ,CACZ,IAAK,EAAQ,IACb,IAAK,EACL,GAAI,EACR,EASA,EAAQ,QAER,GAAQ,QAAQ,EAAQ,KAAK,EAS7B,EAAQ,SAER,GAAQ,SAAS,EAAQ,KAAK,EAK9B,EAAQ,YAAc,CAClB,IAAK,EAAQ,IACb,IAAK,EACL,GAAI,GACJ,GAAI,EAAQ,EAChB,EAKA,EAAQ,MAAQ,CACZ,IAAK,EAAQ,IACb,IAAK,EACL,GAAI,GACJ,MAAO,EACX,EAUA,EAAQ,WAER,GAAQ,WAAW,EAAQ,KAAK,EAKhC,EAAQ,MAAQ,CACZ,IAAK,EAAQ,IACb,IAAK,EACL,GAAI,GACJ,GAAI,EAAQ,GACZ,MAAO,EACX,EAKA,EAAQ,SAAW,CACf,IAAK,EAAQ,IACb,OAAQ,GACR,QAAS,GACT,YAAa,EACjB,EAKA,EAAQ,kBAAoB,CACxB,IAAK,EAAQ,IACb,OAAQ,GACR,QAAS,GACT,YAAa,GACb,gBAAiB,GACjB,iBAAkB,GAClB,qBAAsB,EAC1B,EAKA,EAAQ,YAAc,CAClB,IAAK,EAAQ,IACb,IAAK,EACL,OAAQ,GACR,QAAS,GACT,YAAa,GACb,SAAU,GACV,SAAU,EAAQ,QACtB,EAKA,EAAQ,qBAAuB,CAC3B,IAAK,EAAQ,IACb,IAAK,EACL,aAAc,GACd,OAAQ,GACR,QAAS,GACT,YAAa,GACb,SAAU,GACV,SAAU,EAAQ,SAClB,gBAAiB,GACjB,iBAAkB,GAClB,qBAAsB,GACtB,kBAAmB,EACvB,EAKA,EAAQ,IAAM,CACV,IAAK,EAAQ,IACb,IAAK,EACL,IAAK,EACT,EAKA,EAAQ,QAAU,CACd,IAAK,EAAQ,IACb,IAAK,EACL,OAAQ,GACR,QAAS,EAAQ,OACrB,EAOA,EAAQ,GAER,EAAQ,GAAG,GAAE,WAAW,EAIxB,EAAQ,OAER,GAAU,OAAO,EAAQ,OAAO,EAIhC,EAAQ,KAER,GAAQ,KAAK,EAAQ,KAAK,EAO1B,EAAQ,IAER,GAAQ,IAAI,EAAQ,KAAK,EAOzB,EAAQ,KAAO,EAAK,KAIpB,GAAI,IAAO,SAAU,EAAI,CAAE,MAAO,GAAG,MAAM,CAAC,CAAG,EAC/C,EAAQ,KAAO,GAIf,EAAQ,KAAO,EAAK,KAYpB,GAAI,IAAO,SAAU,EAAI,CAAE,MAAO,GAAG,MAAM,EAAG,EAAE,CAAG,EACnD,EAAQ,KAAO,GAIf,EAAQ,IAAM,EAAK,IAInB,EAAQ,IAAM,EAAK,IAInB,GAAI,IAAY,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,GAAG,OAAO,EAAE,MAAM,CAAG,CAAG,EACrF,EAAQ,UAAY,GAOpB,GAAI,IAAY,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,GAAE,EAAQ,KAAK,CAAE,EAAG,EAAQ,KAAK,CAAE,CAAC,CAAG,CAAG,EACvG,EAAQ,UAAY,GAOpB,GAAI,IAAa,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CACjD,MAAO,GAAE,EAAQ,KAAK,CAAE,EAAG,EAAQ,KAAK,CAAE,CAAC,CAC/C,CAAG,EACH,EAAQ,WAAa,GAMrB,GAAI,IAAa,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,IAAc,CACxE,EAAE,EAAQ,KAAK,CAAE,CAAC,CACtB,EAAG,EAAQ,KAAK,CAAE,CAAC,CAAG,CAAG,EACzB,EAAQ,WAAa,GAOrB,GAAI,IAAa,SAAU,EAAG,CAAE,MAAO,GAAQ,WAAW,UAAY,CAAE,MAAO,EAAG,CAAC,CAAG,EACtF,EAAQ,WAAa,GAMrB,GAAI,IAAa,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CACjD,MAAO,GAAW,KAAK,EAAQ,KAAK,CAAE,EAAG,EAAQ,OAAO,EAAE,EAAQ,KAAK,CAAE,CAAC,CAAC,CAAC,CAChF,CAAG,EACH,EAAQ,WAAa,GAOrB,GAAI,IAAa,SAAU,EAAG,CAAE,MAAO,GAAQ,WAAW,UAAY,CAAE,MAAO,EAAG,CAAC,CAAG,EACtF,EAAQ,WAAa,GAYrB,EAAQ,YAAc,EAAK,YAC3B,YAAmB,EAAG,CAClB,GAAI,GAAQ,EAAQ,KAAK,CAAC,EACtB,EAAS,GAAM,CAAC,EACpB,MAAO,UAAU,EAAI,CAAE,MAAQ,GAAQ,WAAW,CAAE,EAAI,EAAO,EAAM,CAAE,CAAC,EAAI,CAAC,CAAI,CACrF,CACA,EAAQ,UAAY,GACpB,YAAgB,EAAW,CACvB,MAAO,GAAQ,gBAAgB,SAAU,EAAG,EAAG,CAAE,MAAO,GAAU,CAAC,CAAG,CAAC,CAC3E,CACA,EAAQ,OAAS,GAQjB,GAAI,IAAkB,SAAU,EAAW,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,GAAQ,UAAU,EAAG,OAAO,SAAU,EAAG,EAAG,CAAE,MAAO,GAAU,EAAG,CAAC,CAAG,CAAC,CAAC,CAAG,CAAG,EACzJ,EAAQ,gBAAkB,GAQ1B,EAAQ,OAAS,EAAQ,UAQzB,EAAQ,OAAS,EAAQ,SACzB,YAAc,EAAM,EAAM,CACtB,MAAO,KAAS,OAAY,EAAQ,QAAQ,CAAI,EAAI,EAAW,KAAK,EAAM,EAAQ,QAAQ,CAAI,CAAC,CACnG,CACA,EAAQ,KAAO,GAQf,GAAI,IAAO,SAAU,EAAM,EAAK,CAAE,MAAO,GAAW,KAAK,EAAM,EAAQ,OAAO,CAAG,CAAC,CAAG,EACrF,EAAQ,KAAO,GAQf,EAAQ,aAAe,EAAQ,WAO/B,EAAQ,KAAO,EAAK,UAQpB,EAAQ,cAAgB,CACpB,IAAK,EAAQ,IACb,GAAI,EAAQ,GACZ,IAAK,EACL,aAAc,GACd,GAAI,GACJ,MAAO,GACP,OAAQ,GACR,QAAS,EAAQ,QACjB,OAAQ,GACR,QAAS,GACT,YAAa,GACb,SAAU,GACV,SAAU,EAAQ,SAClB,gBAAiB,GACjB,iBAAkB,GAClB,qBAAsB,GACtB,kBAAmB,GACnB,IAAK,EACT,IC3pCA,0BACA,OAAO,eAAe,EAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,EAAQ,MAAQ,EAAQ,cAAgB,EAAQ,UAAY,EAAQ,iBAAmB,EAAQ,aAAe,EAAQ,SAAW,EAAQ,KAAO,EAAQ,QAAU,EAAQ,IAAM,EAAQ,GAAK,EAAQ,SAAW,OAQhN,GAAI,IAAW,SAAU,EAAG,CAAE,MAAO,OAAO,IAAM,QAAU,EAC5D,EAAQ,SAAW,GAQnB,EAAQ,GAAK,CACT,OAAQ,SAAU,EAAO,EAAQ,CAAE,MAAO,KAAU,CAAQ,CAChE,EAKA,EAAQ,IAAM,CACV,OAAQ,EAAQ,GAAG,OACnB,QAAS,SAAU,EAAO,EAAQ,CAAE,MAAQ,GAAQ,EAAS,GAAK,EAAQ,EAAS,EAAI,CAAI,CAC/F,EAKA,EAAQ,QAAU,CACd,OAAQ,EAAQ,GAAG,OACnB,QAAS,EAAQ,IAAI,QACrB,IAAK,IACL,OAAQ,IACZ,EAKA,EAAQ,KAAO,CACX,KAAM,SAAU,EAAG,CAAE,MAAO,MAAK,UAAU,CAAC,CAAG,CACnD,EAKA,EAAQ,SAAW,CACf,OAAQ,SAAU,EAAO,EAAQ,CAAE,MAAO,GAAQ,CAAQ,CAC9D,EAYA,EAAQ,aAAe,CACnB,OAAQ,SAAU,EAAO,EAAQ,CAAE,MAAO,GAAQ,CAAQ,CAC9D,EAYA,EAAQ,iBAAmB,CACvB,OAAQ,SAAU,EAAO,EAAQ,CAAE,MAAO,GAAQ,CAAQ,CAC9D,EAcA,EAAQ,UAAY,CAChB,OAAQ,EAAQ,aAAa,OAC7B,MAAO,CACX,EAcA,EAAQ,cAAgB,CACpB,OAAQ,EAAQ,iBAAiB,OACjC,MAAO,CACX,EAKA,EAAQ,MAAQ,CACZ,IAAK,EAAQ,aAAa,OAC1B,KAAM,EACN,IAAK,EAAQ,iBAAiB,OAC9B,IAAK,EACL,IAAK,EAAQ,SAAS,OACtB,OAAQ,SAAU,EAAG,CAAE,MAAO,EAAG,EACjC,IAAK,SAAU,EAAO,EAAQ,CAAE,MAAO,GAAQ,CAAQ,EACvD,IAAK,SAAU,EAAO,EAAQ,CAAE,MAAO,GAAQ,CAAQ,CAC3D,ICjIA,0BAaA,OAAO,eAAe,EAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,EAAQ,MAAQ,EAAQ,KAAO,EAAQ,KAAO,EAAQ,QAAU,EAAQ,UAAY,EAAQ,IAAM,EAAQ,MAAQ,EAAQ,QAAU,EAAQ,IAAM,EAAQ,UAAY,OACtK,GAAI,IAAa,IACb,GAAY,KAQZ,GAAY,SAAU,EAAM,EAAO,CAAE,MAAQ,CAAE,KAAM,EAAM,MAAO,CAAM,CAAI,EAChF,EAAQ,UAAY,GAIpB,GAAI,IAAO,SAAU,EAAI,EAAG,CAAE,MAAO,IAAW,KAAK,EAAI,EAAQ,IAAI,CAAC,CAAC,CAAG,EACtE,GAAW,SAAU,EAAI,EAAG,CAAE,MAAO,IAAW,KAAK,EAAI,EAAQ,QAAQ,CAAC,CAAC,CAAG,EAC9E,GAAS,SAAU,EAAI,EAAG,EAAG,CAAE,MAAO,IAAW,KAAK,EAAI,EAAQ,MAAM,EAAG,CAAC,CAAC,CAAG,EAWhF,GAAM,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAC1C,MAAO,GAAQ,UAAU,EAAQ,KAAK,CAAE,EAAG,EAAE,EAAQ,MAAM,CAAE,CAAC,CAAC,CACnE,CAAG,EACH,EAAQ,IAAM,GAOd,GAAI,IAAU,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAC9C,MAAO,GAAQ,UAAU,EAAE,EAAQ,KAAK,CAAE,CAAC,EAAG,EAAQ,MAAM,CAAE,CAAC,CACnE,CAAG,EACH,EAAQ,QAAU,GAOlB,GAAI,IAAQ,SAAU,EAAG,EAAG,CAAE,MAAO,UAAU,EAAI,CAC/C,MAAO,GAAQ,UAAU,EAAE,EAAQ,KAAK,CAAE,CAAC,EAAG,EAAE,EAAQ,MAAM,CAAE,CAAC,CAAC,CACtE,CAAG,EACH,EAAQ,MAAQ,GAQhB,EAAQ,IAAM,YAKd,EAAQ,UAAY,CAChB,IAAK,EAAQ,IACb,QAAS,GACT,MAAO,EACX,EAKA,EAAQ,QAAU,CACd,IAAK,EAAQ,IACb,IAAK,EACT,EAOA,EAAQ,KAER,GAAU,KAAK,EAAQ,OAAO,EAO9B,GAAI,IAAO,SAAU,EAAG,CAAE,MAAO,GAAE,IAAM,EACzC,EAAQ,KAAO,GAIf,GAAI,IAAQ,SAAU,EAAG,CAAE,MAAO,GAAE,KAAO,EAC3C,EAAQ,MAAQ,KChHhB,0BACA,GAAI,IAAmB,GAAQ,EAAK,iBAAqB,QAAO,OAAU,SAAS,EAAG,EAAG,EAAG,EAAI,CAC5F,AAAI,IAAO,QAAW,GAAK,GAC3B,OAAO,eAAe,EAAG,EAAI,CAAE,WAAY,GAAM,IAAK,UAAW,CAAE,MAAO,GAAE,EAAI,CAAE,CAAC,CACvF,EAAM,SAAS,EAAG,EAAG,EAAG,EAAI,CACxB,AAAI,IAAO,QAAW,GAAK,GAC3B,EAAE,GAAM,EAAE,EACd,GACI,GAAsB,GAAQ,EAAK,oBAAwB,QAAO,OAAU,SAAS,EAAG,EAAG,CAC3F,OAAO,eAAe,EAAG,UAAW,CAAE,WAAY,GAAM,MAAO,CAAE,CAAC,CACtE,EAAK,SAAS,EAAG,EAAG,CAChB,EAAE,QAAa,CACnB,GACI,GAAgB,GAAQ,EAAK,cAAiB,SAAU,EAAK,CAC7D,GAAI,GAAO,EAAI,WAAY,MAAO,GAClC,GAAI,GAAS,CAAC,EACd,GAAI,GAAO,KAAM,OAAS,KAAK,GAAK,AAAI,IAAM,WAAa,OAAO,UAAU,eAAe,KAAK,EAAK,CAAC,GAAG,GAAgB,EAAQ,EAAK,CAAC,EACvI,UAAmB,EAAQ,CAAG,EACvB,CACX,EACA,OAAO,eAAe,EAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,EAAQ,QAAU,EAAQ,cAAgB,EAAQ,YAAc,OAChE,GAAI,IAAI,GAAa,IAAqB,EAC1C,YAAqB,EAAG,EAAG,CACvB,MAAO,UAAU,EAAG,CAChB,GAAI,GAAY,EAAE,SAAS,CAAC,EAC5B,MAAO,UAAU,EAAI,EAAG,CAAE,MAAO,GAAE,IAAI,EAAU,EAAI,CAAC,EAAG,EAAE,QAAQ,CAAG,CAC1E,CACJ,CACA,EAAQ,YAAc,GACtB,YAAuB,EAAG,EAAG,CACzB,MAAO,UAAU,EAAG,CAChB,GAAI,GAAY,EAAE,SAAS,CAAC,EAC5B,MAAO,UAAU,EAAI,EAAG,CAAE,MAAO,GAAE,IAAI,EAAU,EAAI,CAAC,EAAG,EAAE,OAAO,CAAG,CACzE,CACJ,CACA,EAAQ,cAAgB,GACxB,YAAiB,EAAG,CAChB,MAAO,UAAU,EAAG,CAChB,GAAI,GAAU,EAAE,OAAO,CAAC,EACxB,MAAO,UAAU,EAAW,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,GAAQ,EAAI,SAAU,EAAG,CAAE,MAAO,GAAE,IAAI,EAAU,CAAC,EAAG,SAAU,EAAG,CAAE,MAAQ,GAAI,GAAE,KAAK,CAAC,EAAI,GAAE,IAAO,CAAC,CAAG,CAAC,CAAG,CAAG,CACjL,CACJ,CACA,EAAQ,QAAU,KC3ClB,2BACA,OAAO,eAAe,GAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,GAAQ,MAAQ,OAChB,YAAe,EAAG,EAAG,CACjB,MAAO,UAAU,EAAG,CAAE,MAAQ,GAAI,EAAE,GAAG,MAAS,EAAI,EAAE,KAAK,CAAI,CACnE,CACA,GAAQ,MAAQ,KCNhB,0BACA,GAAI,IAAmB,GAAQ,EAAK,iBAAqB,QAAO,OAAU,SAAS,EAAG,EAAG,EAAG,EAAI,CAC5F,AAAI,IAAO,QAAW,GAAK,GAC3B,OAAO,eAAe,EAAG,EAAI,CAAE,WAAY,GAAM,IAAK,UAAW,CAAE,MAAO,GAAE,EAAI,CAAE,CAAC,CACvF,EAAM,SAAS,EAAG,EAAG,EAAG,EAAI,CACxB,AAAI,IAAO,QAAW,GAAK,GAC3B,EAAE,GAAM,EAAE,EACd,GACI,GAAsB,GAAQ,EAAK,oBAAwB,QAAO,OAAU,SAAS,EAAG,EAAG,CAC3F,OAAO,eAAe,EAAG,UAAW,CAAE,WAAY,GAAM,MAAO,CAAE,CAAC,CACtE,EAAK,SAAS,EAAG,EAAG,CAChB,EAAE,QAAa,CACnB,GACI,GAAgB,GAAQ,EAAK,cAAiB,SAAU,EAAK,CAC7D,GAAI,GAAO,EAAI,WAAY,MAAO,GAClC,GAAI,GAAS,CAAC,EACd,GAAI,GAAO,KAAM,OAAS,KAAK,GAAK,AAAI,IAAM,WAAa,OAAO,UAAU,eAAe,KAAK,EAAK,CAAC,GAAG,GAAgB,EAAQ,EAAK,CAAC,EACvI,UAAmB,EAAQ,CAAG,EACvB,CACX,EACI,GAAiB,GAAQ,EAAK,eAAkB,SAAU,EAAI,EAAM,CACpE,OAAS,GAAI,EAAG,EAAK,EAAK,OAAQ,EAAI,EAAG,OAAQ,EAAI,EAAI,IAAK,IAC1D,EAAG,GAAK,EAAK,GACjB,MAAO,EACX,EACA,OAAO,eAAe,EAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,EAAQ,KAAO,EAAQ,MAAQ,EAAQ,OAAS,EAAQ,QAAU,EAAQ,SAAW,EAAQ,SAAW,EAAQ,SAAW,EAAQ,SAAW,EAAQ,cAAgB,EAAQ,YAAc,EAAQ,SAAW,EAAQ,aAAe,EAAQ,UAAY,EAAQ,UAAY,EAAQ,cAAgB,EAAQ,UAAY,EAAQ,SAAW,EAAQ,SAAW,EAAQ,cAAgB,EAAQ,UAAY,EAAQ,SAAW,EAAQ,KAAO,EAAQ,KAAO,EAAQ,KAAO,EAAQ,KAAO,EAAQ,OAAS,EAAQ,aAAe,EAAQ,KAAO,EAAQ,UAAY,EAAQ,SAAW,EAAQ,eAAiB,EAAQ,UAAY,EAAQ,WAAa,EAAQ,YAAc,EAAQ,SAAW,EAAQ,UAAY,EAAQ,WAAa,EAAQ,MAAQ,EAAQ,OAAS,EAAQ,WAAa,EAAQ,WAAa,EAAQ,cAAgB,EAAQ,UAAY,EAAQ,OAAS,EAAQ,QAAU,EAAQ,OAAS,EAAQ,SAAW,EAAQ,QAAU,EAAQ,WAAa,EAAQ,QAAU,OACp8B,EAAQ,SAAW,EAAQ,SAAW,EAAQ,qBAAuB,EAAQ,YAAc,EAAQ,gBAAkB,EAAQ,QAAU,EAAQ,OAAS,EAAQ,iBAAmB,EAAQ,UAAY,EAAQ,OAAS,EAAQ,gBAAkB,EAAQ,sBAAwB,EAAQ,aAAe,EAAQ,mBAAqB,EAAQ,UAAY,EAAQ,QAAU,EAAQ,UAAY,EAAQ,mBAAqB,EAAQ,OAAS,EAAQ,SAAW,EAAQ,aAAe,EAAQ,IAAM,EAAQ,QAAU,EAAQ,MAAQ,EAAQ,GAAK,EAAQ,IAAM,EAAQ,KAAO,EAAQ,KAAO,EAAQ,GAAK,EAAQ,sBAAwB,EAAQ,oBAAsB,EAAQ,WAAa,EAAQ,aAAe,EAAQ,MAAQ,EAAQ,OAAS,EAAQ,QAAU,EAAQ,cAAgB,EAAQ,YAAc,EAAQ,SAAW,EAAQ,QAAU,EAAQ,KAAO,EAAQ,OAAS,EAAQ,KAAO,EAAQ,KAAO,EAAQ,OAAS,EAAQ,YAAc,EAAQ,WAAa,EAAQ,MAAQ,EAAQ,IAAM,EAAQ,QAAU,OACx+B,EAAQ,QAAU,EAAQ,eAAiB,EAAQ,eAAiB,EAAQ,eAAiB,EAAQ,YAAc,EAAQ,WAAa,EAAQ,QAAU,EAAQ,WAAa,EAAQ,qBAAuB,EAAQ,qBAAuB,EAAQ,mBAAqB,EAAQ,mBAAqB,EAAQ,qBAAuB,EAAQ,YAAc,EAAQ,kBAAoB,EAAQ,SAAW,EAAQ,oBAAsB,EAAQ,WAAa,EAAQ,YAAc,EAAQ,OAAS,EAAQ,YAAc,EAAQ,MAAQ,EAAQ,KAAO,EAAQ,IAAM,EAAQ,WAAa,EAAQ,WAAa,EAAQ,MAAQ,EAAQ,MAAQ,EAAQ,YAAc,EAAQ,SAAW,EAAQ,QAAU,EAAQ,MAAQ,EAAQ,iBAAmB,EAAQ,QAAU,EAAQ,KAAO,EAAQ,QAAU,EAAQ,mBAAqB,EAAQ,yBAA2B,EAAQ,eAAiB,EAAQ,kBAAoB,EAAQ,OAAS,EAAQ,MAAQ,EAAQ,UAAY,EAAQ,aAAe,EAAQ,QAAU,EAAQ,IAAM,EAAQ,OAAS,EAAQ,KAAO,EAAQ,OAAS,EAAQ,kBAAoB,OACzjC,EAAQ,cAAgB,EAAQ,aAAe,EAAQ,KAAO,EAAQ,KAAO,EAAQ,MAAQ,EAAQ,IAAM,EAAQ,KAAO,EAAQ,OAAS,EAAQ,GAAK,EAAQ,YAAc,EAAQ,OAAS,EAAQ,KAAO,EAAQ,MAAQ,EAAQ,MAAQ,EAAQ,UAAY,OAClQ,GAAI,IAAU,KACV,GAAU,KACV,GAAO,KACP,GAAe,KACf,EAAa,IACb,GAAY,KACZ,EAAI,GAAa,IAAqB,EACtC,GAAI,GAAa,IAAmB,EACpC,GAAQ,KACR,EAAO,GAAa,IAAkC,EACtD,GAAc,KACd,GAAe,KACf,GAAS,KAeT,GAAU,SAAU,EAAI,CAAE,MAAO,GAAG,SAAW,CAAG,EACtD,EAAQ,QAAU,GAOlB,EAAQ,WAAa,EAAK,WAgB1B,EAAQ,QAAU,EAAK,QAOvB,EAAQ,SAAW,EAAK,SAaxB,EAAQ,OAAS,EAAK,OAOtB,EAAQ,QAAU,EAAK,QAevB,GAAI,IAAS,SAAU,EAAG,EAAG,CAAE,MAAQ,IAAK,EAAI,EAAQ,MAAQ,EAAK,OAAO,CAAC,EAAE,CAAC,CAAI,EACpF,EAAQ,OAAS,GAcjB,GAAI,IAAY,SAAU,EAAG,EAAG,CAAE,MAAO,GAAQ,OAAO,EAAG,UAAY,CAAE,MAAO,EAAG,CAAC,CAAG,EACvF,EAAQ,UAAY,GACpB,YAAuB,EAAW,CAC9B,MAAO,UAAU,EAAG,CAAE,MAAQ,GAAU,CAAC,EAAI,CAAC,CAAC,EAAI,EAAQ,KAAQ,CACvE,CACA,EAAQ,cAAgB,GAQxB,GAAI,IAAa,SAAU,EAAI,CAAE,MAAQ,GAAE,OAAO,CAAE,EAAI,EAAQ,MAAQ,CAAC,EAAG,KAAK,CAAI,EACrF,EAAQ,WAAa,GAOrB,GAAI,IAAa,SAAU,EAAG,CAAE,MAAQ,GAAE,OAAO,CAAC,EAAI,EAAQ,MAAQ,CAAC,EAAE,KAAK,CAAI,EAClF,EAAQ,WAAa,GAUrB,GAAI,IAAS,SAAU,EAAS,EAAY,CAAE,MAAO,UAAU,EAAI,CAAE,MAAQ,GAAQ,WAAW,CAAE,EAAI,EAAW,CAAE,EAAI,EAAQ,CAAI,CAAG,EACtI,EAAQ,OAAS,GAKjB,EAAQ,MAAQ,EAAQ,OAOxB,GAAI,IAAa,SAAU,EAAS,EAAY,CAAE,MAAO,UAAU,EAAI,CAAE,MAAQ,GAAQ,WAAW,CAAE,EAAI,EAAW,EAAK,KAAK,CAAE,EAAG,EAAK,KAAK,CAAE,CAAC,EAAI,EAAQ,CAAI,CAAG,EACpK,EAAQ,WAAa,GAarB,EAAQ,UAAY,EAAQ,WAO5B,EAAQ,SAAW,EAAQ,UAO3B,GAAI,IAAc,SAAU,EAAS,EAAY,CAAE,MAAO,UAAU,EAAI,CAAE,MAAQ,GAAQ,WAAW,CAAE,EAAI,EAAW,EAAK,KAAK,CAAE,EAAG,EAAK,KAAK,CAAE,CAAC,EAAI,EAAQ,CAAI,CAAG,EACrK,EAAQ,YAAc,GAOtB,EAAQ,WAAa,EAAQ,YAO7B,EAAQ,UAAY,EAAQ,WAQ5B,GAAI,IAAiB,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CACrD,GAAI,EAAQ,QAAQ,CAAE,EAClB,MAAO,GAAQ,MAGnB,OADI,GAAM,CAAC,EACF,EAAI,EAAG,EAAI,EAAG,OAAQ,IAC3B,EAAI,KAAK,MAAM,EAAK,EAAE,EAAG,EAAG,EAAE,CAAC,EAEnC,MAAO,EACX,CAAG,EACH,EAAQ,eAAiB,GAYzB,GAAI,IAAW,SAAU,EAAG,EAAG,CAAE,MAAO,UAAU,EAAI,CAClD,GAAI,GAAM,EAAG,OACT,EAAM,GAAI,OAAM,EAAM,CAAC,EAC3B,EAAI,GAAK,EACT,OAAS,GAAI,EAAG,EAAI,EAAK,IACrB,EAAI,EAAI,GAAK,EAAE,EAAI,GAAI,EAAG,EAAE,EAEhC,MAAO,EACX,CAAG,EACH,EAAQ,SAAW,GAYnB,GAAI,IAAY,SAAU,EAAG,EAAG,CAAE,MAAO,UAAU,EAAI,CACnD,GAAI,GAAM,EAAG,OACT,EAAM,GAAI,OAAM,EAAM,CAAC,EAC3B,EAAI,GAAO,EACX,OAAS,GAAI,EAAM,EAAG,GAAK,EAAG,IAC1B,EAAI,GAAK,EAAE,EAAG,GAAI,EAAI,EAAI,EAAE,EAEhC,MAAO,EACX,CAAG,EACH,EAAQ,UAAY,GAMpB,GAAI,IAAO,SAAU,EAAI,CAAE,MAAO,GAAG,MAAQ,EAC7C,EAAQ,KAAO,GAMf,EAAQ,aAAe,EAAK,aAC5B,YAAgB,EAAG,EAAI,CACnB,MAAO,KAAO,OAAY,SAAU,EAAI,CAAE,MAAO,IAAO,EAAG,CAAE,CAAG,EAAI,EAAQ,aAAa,EAAG,CAAE,EAAI,EAAE,KAAO,EAAE,KAAK,EAAG,EAAE,CAC3H,CACA,EAAQ,OAAS,GAajB,GAAI,IAAO,SAAU,EAAI,CAAE,MAAQ,GAAQ,WAAW,CAAE,EAAI,EAAE,KAAK,EAAK,KAAK,CAAE,CAAC,EAAI,EAAE,IAAO,EAC7F,EAAQ,KAAO,GAaf,GAAI,IAAO,SAAU,EAAI,CAAE,MAAQ,GAAQ,WAAW,CAAE,EAAI,EAAE,KAAK,EAAK,KAAK,CAAE,CAAC,EAAI,EAAE,IAAO,EAC7F,EAAQ,KAAO,GAaf,GAAI,IAAO,SAAU,EAAI,CACrB,MAAO,GAAQ,WAAW,CAAE,EAAI,EAAE,KAAK,EAAK,KAAK,CAAE,CAAC,EAAI,EAAE,IAC9D,EACA,EAAQ,KAAO,GAaf,GAAI,IAAO,SAAU,EAAI,CACrB,MAAO,GAAQ,WAAW,CAAE,EAAI,EAAE,KAAK,EAAK,KAAK,CAAE,CAAC,EAAI,EAAE,IAC9D,EACA,EAAQ,KAAO,GAoBf,GAAI,IAAW,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAC/C,MAAO,GAAQ,aAAa,EAAG,CAAE,EAAI,EAAK,IAAM,EAAI,EAAQ,MAAQ,EAAG,MAAM,EAAG,CAAC,CACrF,CAAG,EACH,EAAQ,SAAW,GAoBnB,GAAI,IAAY,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAChD,MAAO,GAAQ,aAAa,EAAG,CAAE,EAAI,EAAK,IAAM,EAAI,EAAQ,MAAQ,EAAG,MAAM,CAAC,CAAC,CACnF,CAAG,EACH,EAAQ,UAAY,GACpB,YAAuB,EAAW,CAC9B,MAAO,UAAU,EAAI,CAEjB,OADI,GAAM,CAAC,EACF,EAAK,EAAG,EAAO,EAAI,EAAK,EAAK,OAAQ,IAAM,CAChD,GAAI,GAAI,EAAK,GACb,GAAI,CAAC,EAAU,CAAC,EACZ,MAEJ,EAAI,KAAK,CAAC,CACd,CACA,GAAI,GAAM,EAAI,OACd,MAAO,KAAQ,EAAG,OAAS,EAAK,IAAQ,EAAI,EAAQ,MAAQ,CAChE,CACJ,CACA,EAAQ,cAAgB,GACxB,GAAI,IAAgB,SAAU,EAAI,EAAW,CAGzC,OAFI,GAAI,EAAG,OACP,EAAI,EACD,EAAI,GACF,EAAU,EAAG,EAAE,EADV,IACV,CAIJ,MAAO,EACX,EACA,YAAkB,EAAW,CACzB,MAAO,UAAU,EAAI,CACjB,GAAI,GAAK,EAAQ,QAAQ,GAAc,EAAI,CAAS,CAAC,EAAE,CAAE,EAAG,EAAO,EAAG,GAAI,EAAO,EAAG,GACpF,MAAO,CAAE,KAAM,EAAM,KAAM,CAAK,CACpC,CACJ,CACA,EAAQ,SAAW,GAkBnB,GAAI,IAAW,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAC/C,MAAO,IAAK,GAAK,EAAQ,QAAQ,CAAE,EAAI,EAAK,GAAK,EAAG,OAAS,EAAQ,MAAQ,EAAG,MAAM,EAAG,EAAG,MAAM,CACtG,CAAG,EACH,EAAQ,SAAW,GAkBnB,GAAI,IAAY,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAChD,MAAO,IAAK,GAAK,EAAQ,QAAQ,CAAE,EAAI,EAAK,GAAK,EAAG,OAAS,EAAQ,MAAQ,EAAG,MAAM,EAAG,EAAG,OAAS,CAAC,CAC1G,CAAG,EACH,EAAQ,UAAY,GACpB,YAAuB,EAAW,CAC9B,MAAO,UAAU,EAAI,CACjB,GAAI,GAAI,GAAc,EAAI,CAAS,EACnC,MAAO,KAAM,EAAI,EAAK,IAAM,EAAG,OAAS,EAAQ,MAAQ,EAAG,MAAM,CAAC,CACtE,CACJ,CACA,EAAQ,cAAgB,GAaxB,GAAI,IAAY,SAAU,EAAW,CAAE,MAAO,UAAU,EAAI,CACxD,OAAS,GAAI,EAAG,EAAI,EAAG,OAAQ,IAC3B,GAAI,EAAU,EAAG,EAAE,EACf,MAAO,GAAE,KAAK,CAAC,EAGvB,MAAO,GAAE,IACb,CAAG,EACH,EAAQ,UAAY,GACpB,YAAmB,EAAW,CAC1B,MAAO,UAAU,EAAI,CACjB,OAAS,GAAI,EAAG,EAAI,EAAG,OAAQ,IAC3B,GAAI,EAAU,EAAG,EAAE,EACf,MAAO,GAAE,KAAK,EAAG,EAAE,EAG3B,MAAO,GAAE,IACb,CACJ,CACA,EAAQ,UAAY,GAoBpB,GAAI,IAAe,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CACnD,OAAS,GAAI,EAAG,EAAI,EAAG,OAAQ,IAAK,CAChC,GAAI,GAAM,EAAE,EAAG,EAAE,EACjB,GAAI,EAAE,OAAO,CAAG,EACZ,MAAO,EAEf,CACA,MAAO,GAAE,IACb,CAAG,EACH,EAAQ,aAAe,GACvB,YAAkB,EAAW,CACzB,MAAO,UAAU,EAAI,CACjB,OAAS,GAAI,EAAG,OAAS,EAAG,GAAK,EAAG,IAChC,GAAI,EAAU,EAAG,EAAE,EACf,MAAO,GAAE,KAAK,EAAG,EAAE,EAG3B,MAAO,GAAE,IACb,CACJ,CACA,EAAQ,SAAW,GAoBnB,GAAI,IAAc,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAClD,OAAS,GAAI,EAAG,OAAS,EAAG,GAAK,EAAG,IAAK,CACrC,GAAI,GAAM,EAAE,EAAG,EAAE,EACjB,GAAI,EAAE,OAAO,CAAG,EACZ,MAAO,EAEf,CACA,MAAO,GAAE,IACb,CAAG,EACH,EAAQ,YAAc,GAmBtB,GAAI,IAAgB,SAAU,EAAW,CAAE,MAAO,UAAU,EAAI,CAC5D,OAAS,GAAI,EAAG,OAAS,EAAG,GAAK,EAAG,IAChC,GAAI,EAAU,EAAG,EAAE,EACf,MAAO,GAAE,KAAK,CAAC,EAGvB,MAAO,GAAE,IACb,CAAG,EACH,EAAQ,cAAgB,GAYxB,GAAI,IAAW,SAAU,EAAG,EAAG,CAAE,MAAO,UAAU,EAAI,CAClD,MAAO,GAAI,GAAK,EAAI,EAAG,OAAS,EAAE,KAAO,EAAE,KAAK,EAAK,eAAe,EAAG,EAAG,CAAE,CAAC,CACjF,CAAG,EACH,EAAQ,SAAW,GAanB,GAAI,IAAW,SAAU,EAAG,EAAG,CAC3B,MAAO,GAAQ,SAAS,EAAG,UAAY,CAAE,MAAO,EAAG,CAAC,CACxD,EACA,EAAQ,SAAW,GAanB,GAAI,IAAW,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAC/C,MAAO,GAAQ,aAAa,EAAG,CAAE,EAAI,EAAE,KAAO,EAAE,KAAK,EAAQ,eAAe,EAAG,CAAE,CAAC,CACtF,CAAG,EACH,EAAQ,SAAW,GAenB,GAAI,IAAW,SAAU,EAAG,EAAG,CAAE,MAAO,UAAU,EAAI,CAClD,MAAO,GAAQ,aAAa,EAAG,CAAE,EAAI,EAAE,KAAO,EAAE,KAAK,EAAQ,eAAe,EAAG,EAAE,EAAG,EAAE,EAAG,CAAE,CAAC,CAChG,CAAG,EACH,EAAQ,SAAW,GAYnB,GAAI,IAAU,SAAU,EAAI,CAAE,MAAQ,GAAG,QAAU,EAAI,EAAK,EAAG,MAAM,EAAE,QAAQ,CAAI,EACnF,EAAQ,QAAU,GAalB,GAAI,IAAS,SAAU,EAAI,CAEvB,OADI,GAAI,CAAC,EACA,EAAI,EAAG,EAAI,EAAG,OAAQ,IAAK,CAChC,GAAI,GAAI,EAAG,GACX,AAAI,EAAE,OAAS,SACX,EAAE,KAAK,EAAE,KAAK,CAEtB,CACA,MAAO,EACX,EACA,EAAQ,OAAS,GAajB,GAAI,IAAQ,SAAU,EAAI,CAEtB,OADI,GAAI,CAAC,EACA,EAAI,EAAG,EAAI,EAAG,OAAQ,IAAK,CAChC,GAAI,GAAI,EAAG,GACX,AAAI,EAAE,OAAS,QACX,EAAE,KAAK,EAAE,IAAI,CAErB,CACA,MAAO,EACX,EACA,EAAQ,MAAQ,GAahB,GAAI,IAAO,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAC3C,MAAO,GAAG,QAAU,EAAI,EAAK,EAAG,MAAM,EAAE,KAAK,EAAE,OAAO,CAC1D,CAAG,EACH,EAAQ,KAAO,GAcf,GAAI,IAAU,SAAU,EAAI,EAAI,EAAG,CAG/B,OAFI,GAAK,CAAC,EACN,EAAM,KAAK,IAAI,EAAG,OAAQ,EAAG,MAAM,EAC9B,EAAI,EAAG,EAAI,EAAK,IACrB,EAAG,GAAK,EAAE,EAAG,GAAI,EAAG,EAAE,EAE1B,MAAO,EACX,EACA,EAAQ,QAAU,GAClB,YAAa,EAAI,EAAI,CACjB,MAAI,KAAO,OACA,SAAU,EAAI,CAAE,MAAO,IAAI,EAAI,CAAE,CAAG,EAExC,EAAQ,QAAQ,EAAI,EAAI,SAAU,EAAG,EAAG,CAAE,MAAO,CAAC,EAAG,CAAC,CAAG,CAAC,CACrE,CACA,EAAQ,IAAM,GAYd,GAAI,IAAQ,SAAU,EAAI,CAGtB,OAFI,GAAK,CAAC,EACN,EAAK,CAAC,EACD,EAAI,EAAG,EAAI,EAAG,OAAQ,IAC3B,EAAG,GAAK,EAAG,GAAG,GACd,EAAG,GAAK,EAAG,GAAG,GAElB,MAAO,CAAC,EAAI,CAAE,CAClB,EACA,EAAQ,MAAQ,GAYhB,GAAI,IAAa,SAAU,EAAQ,CAC/B,GAAI,GAAI,EAAK,WAAW,CAAM,EAC9B,MAAO,UAAU,EAAI,CAAE,MAAQ,GAAQ,WAAW,CAAE,EAAI,EAAE,CAAE,EAAI,CAAK,CACzE,EACA,EAAQ,WAAa,GAYrB,GAAI,IAAc,SAAU,EAAQ,CAChC,GAAI,GAAI,EAAK,YAAY,CAAM,EAC/B,MAAO,UAAU,EAAI,CAAE,MAAQ,GAAQ,WAAW,CAAE,EAAI,EAAE,CAAE,EAAI,CAAK,CACzE,EACA,EAAQ,YAAc,GAYtB,GAAI,IAAS,SAAU,EAAG,CACtB,GAAI,GAAI,EAAK,OAAO,CAAC,EACrB,MAAO,UAAU,EAAI,CAAE,MAAQ,GAAQ,WAAW,CAAE,EAAI,EAAE,CAAE,EAAI,CAAK,CACzE,EACA,EAAQ,OAAS,GACjB,YAAc,EAAG,CACb,MAAO,UAAU,EAAG,EAAI,CACpB,GAAI,IAAO,OAAW,CAClB,GAAI,GAAU,GAAK,CAAC,EACpB,MAAO,UAAU,EAAI,CAAE,MAAO,GAAQ,EAAG,CAAE,CAAG,CAClD,CAGA,OAFI,GAAY,SAAU,EAAS,CAAE,MAAO,GAAE,OAAO,EAAS,CAAC,CAAG,EAC9D,EAAI,EACD,EAAI,EAAG,OAAQ,IAClB,GAAI,EAAU,EAAG,EAAE,EACf,MAAO,GAGf,MAAO,EACX,CACJ,CACA,EAAQ,KAAO,GAaf,GAAI,IAAO,SAAU,EAAG,CACpB,GAAI,GAAI,EAAK,KAAK,CAAC,EACnB,MAAO,UAAU,EAAI,CAAE,MAAQ,GAAQ,WAAW,CAAE,EAAI,EAAE,CAAE,EAAI,CAAK,CACzE,EACA,EAAQ,KAAO,GAgCf,GAAI,IAAS,SAAU,EAAM,CACzB,GAAI,GAAI,EAAK,OAAO,CAAI,EACxB,MAAO,UAAU,EAAI,CAAE,MAAQ,GAAQ,WAAW,CAAE,EAAI,EAAE,CAAE,EAAI,CAAK,CACzE,EACA,EAAQ,OAAS,GAuBjB,GAAI,IAAO,SAAU,EAAG,CACpB,GAAI,GAAI,EAAK,KAAK,CAAC,EACnB,MAAO,UAAU,EAAI,CAAE,MAAQ,GAAQ,WAAW,CAAE,EAAI,EAAE,CAAE,EAAI,EAAQ,KAAQ,CACpF,EACA,EAAQ,KAAO,GAYf,GAAI,IAAU,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAC9C,MAAO,IAAK,GAAK,EAAQ,WAAW,CAAE,EAAI,EAAK,QAAQ,CAAC,EAAE,CAAE,EAAI,EAAQ,QAAQ,CAAE,EAAI,CAAC,EAAI,EAAQ,KAAK,EAAI,CAAC,EAAQ,MAAO,CAAE,CAClI,CAAG,EACH,EAAQ,QAAU,GAoBlB,GAAI,IAAW,SAAU,EAAG,CACxB,GAAI,GAAI,EAAK,SAAS,CAAC,EACvB,MAAO,UAAU,EAAI,CAAE,MAAQ,GAAQ,WAAW,CAAE,EAAI,EAAE,CAAE,EAAI,EAAQ,KAAQ,CACpF,EACA,EAAQ,SAAW,GAKnB,GAAI,IAAc,SAAU,EAAG,CAAE,MAAO,WAAY,CAEhD,OADI,GAAI,CAAC,EACA,EAAK,EAAG,EAAK,UAAU,OAAQ,IACpC,EAAE,GAAM,UAAU,GAEtB,MAAO,GAAQ,WAAW,EAAE,MAAM,OAAQ,CAAC,CAAC,CAChD,CAAG,EACH,EAAQ,YAAc,GACtB,YAAuB,EAAO,EAAG,EAAG,CAChC,AAAI,IAAM,QAAU,GAAI,UAAY,CAAE,MAAO,EAAM,GACnD,GAAI,GAAK,SAAU,EAAO,EAAO,CAC7B,MAAO,GAAQ,WAAW,CAAK,EACzB,EAAW,KAAK,EAAK,KAAK,CAAK,EAAG,EAAQ,MAAM,SAAU,EAAG,CAAE,MAAO,GAAG,EAAW,KAAK,EAAO,EAAQ,OAAO,CAAC,CAAC,EAAG,EAAK,KAAK,CAAK,CAAC,CAAG,CAAC,CAAC,EACzI,EAAE,MAAM,OAAQ,CAAK,EAAI,CAAC,EAAE,MAAM,OAAQ,CAAK,CAAC,EAC5C,EAAQ,KACtB,EACA,MAAO,GAAG,EAAQ,MAAO,CAAK,CAClC,CACA,EAAQ,cAAgB,GAKxB,GAAI,IAAU,SAAU,EAAQ,CAAE,MAAO,UAAU,EAAO,CACtD,MAAO,GAAQ,QAAQ,CAAK,EAAI,EAAS,EAAQ,QAAQ,CAAM,EAAI,EAAQ,EAAM,OAAO,CAAM,CAClG,CAAG,EACH,EAAQ,QAAU,GAKlB,EAAQ,OAAS,EAAQ,QACzB,YAAe,EAAG,CACd,GAAI,GAAS,EAAK,MAAM,CAAC,EACzB,MAAO,UAAU,EAAO,EAAQ,CAC5B,GAAI,IAAW,OAAW,CACtB,GAAI,GAAW,GAAM,CAAC,EACtB,MAAO,UAAU,EAAQ,CAAE,MAAO,GAAS,EAAQ,CAAK,CAAG,CAC/D,CACA,MAAO,GAAQ,WAAW,CAAK,GAAK,EAAQ,WAAW,CAAM,EAAI,EAAO,CAAM,EAAE,CAAK,EAAI,EAAQ,WAAW,CAAK,EAAI,EAAQ,CACjI,CACJ,CACA,EAAQ,MAAQ,GAChB,YAAsB,EAAG,CACrB,GAAI,GAAQ,GAAK,CAAC,EAClB,MAAO,UAAU,EAAI,EAAI,CACrB,GAAI,IAAO,OAAW,CAClB,GAAI,GAAkB,GAAa,CAAC,EACpC,MAAO,UAAU,EAAI,CAAE,MAAO,GAAgB,EAAI,CAAE,CAAG,CAC3D,CACA,MAAO,GAAG,OAAO,SAAU,EAAG,CAAE,MAAO,GAAM,EAAG,CAAE,CAAG,CAAC,CAC1D,CACJ,CACA,EAAQ,aAAe,GACvB,YAAoB,EAAG,CACnB,GAAI,GAAQ,GAAK,CAAC,EAClB,MAAO,UAAU,EAAI,EAAI,CACrB,GAAI,IAAO,OAAW,CAClB,GAAI,GAAgB,GAAW,CAAC,EAChC,MAAO,UAAU,EAAI,CAAE,MAAO,GAAc,EAAI,CAAE,CAAG,CACzD,CACA,MAAO,GAAG,OAAO,SAAU,EAAG,CAAE,MAAO,CAAC,EAAM,EAAG,CAAE,CAAG,CAAC,CAC3D,CACJ,CACA,EAAQ,WAAa,GAIrB,GAAI,GAAO,SAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,IAAI,CAAC,CAAC,CAAG,EACtE,GAAgB,SAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,aAAa,CAAC,CAAC,CAAG,EACxF,GAAM,SAAU,EAAK,EAAI,CAAE,MAAO,GAAW,KAAK,EAAK,EAAQ,GAAG,CAAE,CAAC,CAAG,EACxE,GAAS,SAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,MAAM,CAAC,CAAC,CAAG,EAC1E,GAAU,SAAU,EAAI,EAAW,CACnC,MAAO,GAAW,KAAK,EAAI,EAAQ,OAAO,CAAS,CAAC,CACxD,EACI,GAAa,SAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,UAAU,CAAC,CAAC,CAAG,EAClF,GAAa,SAAU,EAAI,EAAW,CACtC,MAAO,GAAW,KAAK,EAAI,EAAQ,UAAU,CAAS,CAAC,CAC3D,EACI,GAAgB,SAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,aAAa,CAAC,CAAC,CAAG,EACxF,GAAsB,SAAU,EAAI,EAAoB,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,mBAAmB,CAAkB,CAAC,CAAG,EACtI,GAAyB,SAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,sBAAsB,CAAC,CAAC,CAAG,EAC1G,GAAO,SAAU,EAAI,EAAM,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,IAAI,CAAI,CAAC,CAAG,EAC5E,GAAU,SAAU,EAAI,EAAG,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,OAAO,EAAG,CAAC,CAAC,CAAG,EAClF,GAAW,SAAU,EAAG,CACxB,GAAI,GAAW,EAAQ,QAAQ,CAAC,EAChC,MAAO,UAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAS,CAAC,CAAC,CAAG,CACvE,EACI,GAAe,SAAU,EAAI,EAAG,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,YAAY,EAAG,CAAC,CAAC,CAAG,EAC5F,GAAmB,SAAU,EAAI,EAAG,EAAG,CACvC,MAAO,GAAW,KAAK,EAAI,EAAQ,gBAAgB,EAAG,CAAC,CAAC,CAC5D,EACI,GAAoB,SAAU,EAAG,CACjC,GAAI,GAAoB,EAAQ,iBAAiB,CAAC,EAClD,MAAO,UAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAkB,CAAC,CAAC,CAAG,CAChF,EACI,GAAwB,SAAU,EAAI,EAAG,EAAG,CAC5C,MAAO,GAAW,KAAK,EAAI,EAAQ,qBAAqB,EAAG,CAAC,CAAC,CACjE,EACI,GAAsB,SAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,mBAAmB,CAAC,CAAC,CAAG,EACpG,GAAmB,SAAU,EAAI,EAAoB,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,gBAAgB,CAAkB,CAAC,CAAG,EAChI,GAAU,SAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,OAAO,CAAC,CAAC,CAAG,EAC5E,GAAY,SAAU,EAAG,CACzB,GAAI,GAAY,EAAQ,SAAS,CAAC,EAClC,MAAO,UAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAU,CAAC,CAAC,CAAG,CACxE,EAEI,GAAqB,SAAU,EAAG,CAClC,GAAI,GAAqB,EAAQ,kBAAkB,CAAC,EACpD,MAAO,UAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAmB,CAAC,CAAC,CAAG,CACjF,EAEI,GAAsB,SAAU,EAAG,EAAG,CAAE,MAAO,GAAW,KAAK,EAAG,EAAQ,mBAAmB,CAAC,CAAC,CAAG,EACtG,EAAQ,oBAAsB,GAE9B,GAAI,IAAwB,SAAU,EAAG,EAAG,CAAE,MAAO,GAAW,KAAK,EAAG,EAAQ,qBAAqB,CAAC,CAAC,CAAG,EAC1G,EAAQ,sBAAwB,GAQhC,EAAQ,GAAK,EAAK,GAKlB,GAAI,IAAO,UAAY,CAAE,MAAO,GAAQ,KAAO,EAC/C,EAAQ,KAAO,GAOf,GAAI,IAAO,SAAU,EAAM,CAAE,MAAO,UAAU,EAAI,CAC9C,MAAO,GAAG,OAAO,EAAK,CAAC,CAC3B,CAAG,EACH,EAAQ,KAAO,GAQf,EAAQ,IAAM,EAAQ,KAOtB,GAAI,IAAK,SAAU,EAAI,CACnB,MAAO,GAAQ,MAAM,SAAU,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,IAAI,CAAC,CAAC,CAAG,CAAC,CACrF,EACA,EAAQ,GAAK,GAOb,GAAI,IAAQ,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAC5C,MAAO,GAAW,KAAK,EAAI,EAAQ,eAAe,SAAU,EAAG,EAAG,CAAE,MAAO,GAAE,CAAC,CAAG,CAAC,CAAC,CACvF,CAAG,EACH,EAAQ,MAAQ,GAOhB,EAAQ,QAER,EAAQ,MAAM,EAAW,QAAQ,EAQjC,GAAI,IAAM,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAC1C,MAAO,GAAG,IAAI,SAAU,EAAG,CAAE,MAAO,GAAE,CAAC,CAAG,CAAC,CAC/C,CAAG,EACH,EAAQ,IAAM,GAKd,GAAI,IAAe,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,GAAG,IAAI,SAAU,EAAG,EAAG,CAAE,MAAO,GAAE,EAAG,CAAC,CAAG,CAAC,CAAG,CAAG,EAChH,EAAQ,aAAe,GAKvB,GAAI,IAAW,SAAU,EAAI,CAGzB,OAFI,GAAO,CAAC,EACR,EAAQ,CAAC,EACJ,EAAK,EAAG,EAAO,EAAI,EAAK,EAAK,OAAQ,IAAM,CAChD,GAAI,GAAI,EAAK,GACb,AAAI,EAAE,OAAS,OACX,EAAK,KAAK,EAAE,IAAI,EAGhB,EAAM,KAAK,EAAE,KAAK,CAE1B,CACA,MAAO,IAAY,UAAU,EAAM,CAAK,CAC5C,EACA,EAAQ,SAAW,GAKnB,GAAI,IAAS,SAAU,EAAW,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,GAAG,OAAO,CAAS,CAAG,CAAG,EAC3F,EAAQ,OAAS,GAKjB,GAAI,IAAqB,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAEzD,OADI,GAAM,CAAC,EACF,EAAI,EAAG,EAAI,EAAG,OAAQ,IAAK,CAChC,GAAI,GAAU,EAAE,EAAG,EAAG,EAAE,EACxB,AAAI,EAAE,OAAO,CAAO,GAChB,EAAI,KAAK,EAAQ,KAAK,CAE9B,CACA,MAAO,EACX,CAAG,EACH,EAAQ,mBAAqB,GAK7B,GAAI,IAAY,SAAU,EAAG,CACzB,MAAO,GAAQ,mBAAmB,SAAU,EAAG,EAAG,CAAE,MAAO,GAAE,CAAC,CAAG,CAAC,CACtE,EACA,EAAQ,UAAY,GAKpB,EAAQ,QAER,EAAQ,UAAU,EAAW,QAAQ,EAKrC,GAAI,IAAY,SAAU,EAAW,CACjC,MAAO,GAAQ,mBAAmB,SAAU,EAAG,EAAG,CAAE,MAAO,GAAU,CAAC,CAAG,CAAC,CAC9E,EACA,EAAQ,UAAY,GAKpB,GAAI,IAAqB,SAAU,EAAoB,CAAE,MAAO,UAAU,EAAI,CAG1E,OAFI,GAAO,CAAC,EACR,EAAQ,CAAC,EACJ,EAAI,EAAG,EAAI,EAAG,OAAQ,IAAK,CAChC,GAAI,GAAI,EAAG,GACX,AAAI,EAAmB,EAAG,CAAC,EACvB,EAAM,KAAK,CAAC,EAGZ,EAAK,KAAK,CAAC,CAEnB,CACA,MAAO,IAAY,UAAU,EAAM,CAAK,CAC5C,CAAG,EACH,EAAQ,mBAAqB,GAK7B,GAAI,IAAe,SAAU,EAAG,CAC5B,MAAO,GAAQ,sBAAsB,SAAU,EAAG,EAAG,CAAE,MAAO,GAAE,CAAC,CAAG,CAAC,CACzE,EACA,EAAQ,aAAe,GAKvB,GAAI,IAAwB,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAG5D,OAFI,GAAO,CAAC,EACR,EAAQ,CAAC,EACJ,EAAI,EAAG,EAAI,EAAG,OAAQ,IAAK,CAChC,GAAI,GAAI,EAAE,EAAG,EAAG,EAAE,EAClB,AAAI,EAAE,OAAS,OACX,EAAK,KAAK,EAAE,IAAI,EAGhB,EAAM,KAAK,EAAE,KAAK,CAE1B,CACA,MAAO,IAAY,UAAU,EAAM,CAAK,CAC5C,CAAG,EACH,EAAQ,sBAAwB,GAKhC,GAAI,IAAkB,SAAU,EAAoB,CAAE,MAAO,UAAU,EAAI,CACvE,MAAO,GAAG,OAAO,SAAU,EAAG,EAAG,CAAE,MAAO,GAAmB,EAAG,CAAC,CAAG,CAAC,CACzE,CAAG,EACH,EAAQ,gBAAkB,GAK1B,GAAI,IAAS,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,GAAG,IAAI,SAAU,EAAG,EAAG,CAAE,MAAO,GAAE,EAAG,MAAM,CAAC,CAAC,CAAG,CAAC,CAAG,CAAG,EACjH,EAAQ,OAAS,GAOjB,EAAQ,UAER,EAAQ,OAAO,EAAW,QAAQ,EAKlC,GAAI,IAAmB,SAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAC7E,MAAO,GAAG,OAAO,SAAU,EAAG,EAAG,EAAG,CAAE,MAAO,GAAE,OAAO,EAAG,EAAE,EAAG,CAAC,CAAC,CAAG,EAAG,EAAE,KAAK,CACjF,CAAG,CAAG,EACN,EAAQ,iBAAmB,GAK3B,GAAI,IAAS,SAAU,EAAG,EAAG,CACzB,MAAO,GAAQ,gBAAgB,EAAG,SAAU,EAAG,EAAG,EAAG,CAAE,MAAO,GAAE,EAAG,CAAC,CAAG,CAAC,CAC5E,EACA,EAAQ,OAAS,GAKjB,GAAI,IAAU,SAAU,EAAG,CACvB,GAAI,GAAoB,EAAQ,iBAAiB,CAAC,EAClD,MAAO,UAAU,EAAG,CAAE,MAAO,GAAkB,SAAU,EAAG,EAAG,CAAE,MAAO,GAAE,CAAC,CAAG,CAAC,CAAG,CACtF,EACA,EAAQ,QAAU,GAKlB,GAAI,IAAkB,SAAU,EAAG,EAAG,CAAE,MAAO,UAAU,EAAI,CAGzD,OAFI,GAAM,EAAG,OACT,EAAM,EACD,EAAI,EAAG,EAAI,EAAK,IACrB,EAAM,EAAE,EAAG,EAAK,EAAG,EAAE,EAEzB,MAAO,EACX,CAAG,EACH,EAAQ,gBAAkB,GAK1B,GAAI,IAAc,SAAU,EAAG,EAAG,CAC9B,MAAO,GAAQ,qBAAqB,EAAG,SAAU,EAAG,EAAG,EAAG,CAAE,MAAO,GAAE,EAAG,CAAC,CAAG,CAAC,CACjF,EACA,EAAQ,YAAc,GAKtB,GAAI,IAAuB,SAAU,EAAG,EAAG,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,GAAG,YAAY,SAAU,EAAG,EAAG,EAAG,CAAE,MAAO,GAAE,EAAG,EAAG,CAAC,CAAG,EAAG,CAAC,CAAG,CAAG,EAC5I,EAAQ,qBAAuB,GAK/B,GAAI,IAAW,SAAU,EAAG,CACxB,GAAI,GAAqB,EAAQ,kBAAkB,CAAC,EACpD,MAAO,UAAU,EAAG,CAAE,MAAO,GAAmB,SAAU,EAAG,EAAG,CAAE,MAAO,GAAE,CAAC,CAAG,CAAC,CAAG,CACvF,EACA,EAAQ,SAAW,GAKnB,GAAI,IAAW,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAC/C,MAAO,IAAQ,EAAI,EAAE,GAAG,EAAQ,KAAK,CAAC,EAAG,SAAU,EAAK,EAAI,CACxD,MAAO,GAAE,GAAG,EAAE,IAAI,EAAK,SAAU,EAAI,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,OAAO,CAAC,CAAC,CAAG,CAAG,CAAC,EAAG,CAAE,CACzH,CAAC,CACL,CAAG,EACH,EAAQ,SAAW,GAKnB,GAAI,IAAoB,SAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CACvD,MAAO,GAAQ,gBAAgB,EAAE,GAAG,EAAQ,KAAK,CAAC,EAAG,SAAU,EAAG,EAAK,EAAG,CACtE,MAAO,GAAE,GAAG,EAAE,IAAI,EAAK,SAAU,EAAI,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,OAAO,CAAC,CAAC,CAAG,CAAG,CAAC,EAAG,EAAE,EAAG,CAAC,CAAC,CAC9H,CAAC,CACL,CAAG,EACH,EAAQ,kBAAoB,GAK5B,GAAI,IAAS,SAAU,EAAG,CACtB,GAAI,GAAW,GAAQ,CAAC,EACxB,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,GAAS,EAAI,CAAC,CAAG,CAAG,CAC5E,EACA,EAAQ,OAAS,GAKjB,GAAI,IAAO,SAAU,EAAG,CACpB,GAAI,GAAS,GAAM,CAAC,EACpB,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,GAAO,EAAI,CAAC,CAAG,CAAG,CAC1E,EACA,EAAQ,KAAO,GAKf,GAAI,IAAS,SAAU,EAAG,EAAG,CAGzB,OAFI,GAAM,CAAC,EACP,EAAK,IACI,CACT,GAAI,GAAK,EAAE,CAAE,EACb,GAAI,EAAE,OAAO,CAAE,EAAG,CACd,GAAI,GAAK,EAAG,MAAO,EAAI,EAAG,GAAI,EAAM,EAAG,GACvC,EAAI,KAAK,CAAC,EACV,EAAK,CACT,KAEI,MAER,CACA,MAAO,EACX,EACA,EAAQ,OAAS,GAQjB,EAAQ,IAAM,gBAKd,GAAI,IAAU,SAAU,EAAG,CAAE,MAAQ,CACjC,KAAM,SAAU,EAAI,CAAE,MAAO,IAAM,EAAG,IAAI,EAAE,IAAI,EAAE,KAAK,IAAI,EAAI,GAAK,CACxE,CAAI,EACJ,EAAQ,QAAU,GAKlB,GAAI,IAAe,UAAY,CAAE,MAAQ,CACrC,OAAQ,SAAU,EAAO,EAAQ,CAAE,MAAQ,GAAQ,QAAQ,CAAK,EAAI,EAAS,EAAQ,QAAQ,CAAM,EAAI,EAAQ,EAAM,OAAO,CAAM,CAAI,CAC1I,CAAI,EACJ,EAAQ,aAAe,GAavB,GAAI,IAAY,UAAY,CAAE,MAAQ,CAClC,OAAQ,EAAQ,aAAa,EAAE,OAC/B,MAAO,EAAQ,KACnB,CAAI,EACJ,EAAQ,UAAY,GAiBpB,GAAI,IAAQ,SAAU,EAAG,CACrB,MAAO,IAAK,WAAW,SAAU,EAAI,EAAI,CAAE,MAAO,GAAG,SAAW,EAAG,QAAU,EAAG,MAAM,SAAU,EAAG,EAAG,CAAE,MAAO,GAAE,OAAO,EAAG,EAAG,EAAE,CAAG,CAAC,CAAG,CAAC,CAC5I,EACA,EAAQ,MAAQ,GAoBhB,GAAI,IAAS,SAAU,EAAG,CACtB,MAAO,IAAM,YAAY,SAAU,EAAG,EAAG,CAIrC,OAHI,GAAO,EAAE,OACT,EAAO,EAAE,OACT,EAAM,KAAK,IAAI,EAAM,CAAI,EACpB,EAAI,EAAG,EAAI,EAAK,IAAK,CAC1B,GAAI,GAAW,EAAE,QAAQ,EAAE,GAAI,EAAE,EAAE,EACnC,GAAI,IAAa,EACb,MAAO,EAEf,CACA,MAAO,IAAE,IAAI,QAAQ,EAAM,CAAI,CACnC,CAAC,CACL,EACA,EAAQ,OAAS,GAKjB,GAAI,IAAoB,SAAU,EAAG,CACjC,GAAI,GAAS,GAAM,CAAC,EACpB,MAAO,CACH,OAAQ,SAAU,EAAO,EAAQ,CAAE,MAAO,GAAO,CAAM,EAAE,CAAK,CAAG,CACrE,CACJ,EACA,EAAQ,kBAAoB,GAK5B,GAAI,IAAiB,SAAU,EAAG,CAAE,MAAQ,CACxC,OAAQ,EAAQ,kBAAkB,CAAC,EAAE,OACrC,MAAO,EAAQ,KACnB,CAAI,EACJ,EAAQ,eAAiB,GAKzB,GAAI,IAA2B,SAAU,EAAG,CACxC,GAAI,GAAgB,GAAa,CAAC,EAClC,MAAO,CACH,OAAQ,SAAU,EAAO,EAAQ,CAAE,MAAO,GAAc,CAAM,EAAE,CAAK,CAAG,CAC5E,CACJ,EACA,EAAQ,yBAA2B,GAKnC,GAAI,IAAqB,SAAU,EAAG,CAClC,GAAI,GAAc,GAAW,CAAC,EAC9B,MAAO,CACH,OAAQ,SAAU,EAAO,EAAQ,CAAE,MAAO,GAAY,CAAM,EAAE,CAAK,CAAG,CAC1E,CACJ,EACA,EAAQ,mBAAqB,GAK7B,EAAQ,QAAU,CACd,IAAK,EAAQ,IACb,IAAK,CACT,EAOA,EAAQ,KAER,GAAU,KAAK,EAAQ,OAAO,EAK9B,EAAQ,QAAU,CACd,IAAK,EAAQ,IACb,GAAI,EAAQ,EAChB,EAKA,EAAQ,iBAAmB,CACvB,IAAK,EAAQ,IACb,IAAK,EACL,aAAc,EAClB,EAKA,EAAQ,MAAQ,CACZ,IAAK,EAAQ,IACb,IAAK,EACL,GAAI,EACR,EASA,EAAQ,QAER,GAAQ,QAAQ,EAAQ,KAAK,EAS7B,EAAQ,SAER,GAAQ,SAAS,EAAQ,KAAK,EAK9B,EAAQ,YAAc,CAClB,IAAK,EAAQ,IACb,IAAK,EACL,GAAI,GACJ,GAAI,EAAQ,EAChB,EAKA,EAAQ,MAAQ,CACZ,IAAK,EAAQ,IACb,IAAK,EACL,GAAI,GACJ,MAAO,EACX,EAKA,EAAQ,MAAQ,CACZ,IAAK,EAAQ,IACb,IAAK,EACL,GAAI,GACJ,GAAI,EAAQ,GACZ,MAAO,EACX,EAUA,EAAQ,WAER,GAAQ,WAAW,EAAQ,KAAK,EAKhC,EAAQ,WAAa,CACjB,IAAK,EAAQ,IACb,OAAQ,EAAQ,MACpB,EAKA,EAAQ,IAAM,CACV,IAAK,EAAQ,IACb,IAAK,EACL,IAAK,EACT,EAKA,EAAQ,KAAO,CACX,IAAK,EAAQ,IACb,KAAM,EAAQ,IAClB,EAKA,EAAQ,MAER,GAAO,MAAM,EAAQ,KAAM,EAAQ,OAAO,EAK1C,EAAQ,YAAc,CAClB,IAAK,EAAQ,IACb,IAAK,EACL,GAAI,GACJ,GAAI,EAAQ,GACZ,IAAK,GACL,KAAM,EAAQ,IAClB,EAKA,EAAQ,OAAS,CACb,IAAK,EAAQ,IACb,IAAK,EACL,OAAQ,EACZ,EAKA,EAAQ,YAAc,CAClB,IAAK,EAAQ,IACb,QAAS,EAAQ,QACjB,SAAU,EAAQ,QACtB,EAKA,EAAQ,WAAa,CACjB,IAAK,EAAQ,IACb,IAAK,EACL,QAAS,EAAQ,QACjB,SAAU,EAAQ,SAClB,OAAQ,GACR,UAAW,GACX,UAAW,GACX,aAAc,EAClB,EAKA,EAAQ,oBAAsB,CAC1B,IAAK,EAAQ,IACb,IAAK,EACL,aAAc,GACd,QAAS,EAAQ,QACjB,SAAU,EAAQ,SAClB,OAAQ,GACR,UAAW,GACX,UAAW,GACX,aAAc,GACd,sBAAuB,GACvB,mBAAoB,GACpB,mBAAoB,GACpB,gBAAiB,EACrB,EAKA,EAAQ,SAAW,CACf,IAAK,EAAQ,IACb,OAAQ,GACR,QAAS,GACT,YAAa,EACjB,EAKA,EAAQ,kBAAoB,CACxB,IAAK,EAAQ,IACb,OAAQ,GACR,QAAS,GACT,YAAa,GACb,gBAAiB,GACjB,iBAAkB,GAClB,qBAAsB,EAC1B,EAKA,EAAQ,YAAc,CAClB,IAAK,EAAQ,IACb,IAAK,EACL,OAAQ,GACR,QAAS,GACT,YAAa,GACb,SAAU,GACV,SAAU,EAAQ,QACtB,EAKA,EAAQ,qBAAuB,CAC3B,IAAK,EAAQ,IACb,IAAK,EACL,aAAc,GACd,OAAQ,GACR,QAAS,GACT,YAAa,GACb,gBAAiB,GACjB,iBAAkB,GAClB,qBAAsB,GACtB,SAAU,GACV,SAAU,EAAQ,SAClB,kBAAmB,EACvB,EAKA,GAAI,IAAqB,SAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAGxD,OAFI,GAAO,GAAc,CAAC,EAAG,EAAE,CAAC,CAAC,EAC7B,EAAM,CAAC,EACJ,EAAK,OAAS,GAAG,CACpB,GAAI,GAAI,EAAK,MAAM,EACnB,AAAI,EAAE,OAAO,CAAC,EACV,EAAK,QAAQ,MAAM,EAAM,EAAE,EAAE,IAAI,CAAC,EAGlC,EAAI,KAAK,EAAE,KAAK,CAExB,CACA,MAAO,EACX,CAAG,EACH,EAAQ,mBAAqB,GAK7B,EAAQ,mBAAqB,CACzB,IAAK,EAAQ,IACb,IAAK,EACL,GAAI,GACJ,MAAO,GACP,SAAU,EAAQ,mBACtB,EAKA,GAAI,IAAuB,SAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAC1D,GAAI,GAAU,EAAE,CAAC,EACb,EAAO,CAAC,EACR,EAAM,CAAC,EACX,WAAY,EAAG,CACX,AAAI,EAAE,OAAO,CAAC,EACV,EAAE,EAAE,IAAI,EAAE,QAAQ,SAAU,GAAG,CAAE,MAAO,GAAK,KAAK,EAAC,CAAG,CAAC,EAGvD,EAAI,KAAK,EAAE,KAAK,CAExB,CACA,OAAS,GAAK,EAAG,EAAY,EAAS,EAAK,EAAU,OAAQ,IAAM,CAC/D,GAAI,GAAI,EAAU,GAClB,EAAG,CAAC,CACR,CACA,KAAO,EAAK,OAAS,GACjB,EAAG,EAAK,MAAM,CAAC,EAEnB,MAAO,EACX,CAAG,EACH,EAAQ,qBAAuB,GAK/B,EAAQ,qBAAuB,CAC3B,IAAK,EAAQ,IACb,IAAK,EACL,GAAI,GACJ,MAAO,GACP,SAAU,EAAQ,qBACtB,EACA,GAAI,IAEJ,GAAa,cAAc,EAAQ,YAAa,EAAQ,WAAW,EAC/D,GAEJ,GAAa,YAAY,EAAQ,YAAa,EAAQ,WAAW,EAKjE,EAAQ,WAAa,CACjB,IAAK,EAAQ,IACb,IAAK,EACL,QAAS,EAAQ,QACjB,SAAU,EAAQ,SAClB,OAAQ,GACR,UAAW,GACX,UAAW,GACX,aAAc,GACd,OAAQ,GACR,QAAS,GACT,YAAa,GACb,SAAU,GACV,SAAU,EAAQ,SAClB,OAAQ,GACR,KAAM,EACV,EAuBA,EAAQ,QAER,GAAa,QAAQ,EAAQ,UAAU,EAKvC,EAAQ,WAAa,CACjB,IAAK,EAAQ,IACb,WAAY,EAAQ,UACxB,EAKA,EAAQ,YAER,GAAa,YAAY,EAAQ,UAAU,EAQ3C,EAAQ,eAAiB,EAAK,eAK9B,GAAI,IAAiB,SAAU,EAAG,EAAG,EAAI,CACrC,MAAO,GAAQ,WAAW,CAAE,EAAI,EAAK,eAAe,EAAG,EAAG,CAAE,EAAI,CACpE,EACA,EAAQ,eAAiB,GAKzB,GAAI,IAAiB,SAAU,EAAG,EAAI,CAClC,GAAI,GAAK,EAAG,MAAM,EAClB,SAAG,OAAO,EAAG,CAAC,EACP,CACX,EACA,EAAQ,eAAiB,GAQzB,GAAI,IAAU,SAAU,EAAI,CAAE,MAAO,GAAG,MAAM,CAAG,EACjD,EAAQ,QAAU,GAKlB,GAAI,IAAY,SAAU,EAAI,CAAE,MAAQ,GAAQ,QAAQ,CAAE,EAAI,EAAQ,MAAQ,EAAG,MAAM,CAAI,EAC3F,EAAQ,UAAY,GASpB,EAAQ,MAAQ,EAAK,MACrB,YAAe,EAAW,CACtB,MAAO,UAAU,EAAI,CAAE,MAAO,GAAG,MAAM,CAAS,CAAG,CACvD,CACA,EAAQ,MAAQ,GAehB,GAAI,IAAO,SAAU,EAAW,CAAE,MAAO,UAAU,EAAI,CACnD,MAAO,GAAG,KAAK,CAAS,CAC5B,CAAG,EACH,EAAQ,KAAO,GAMf,EAAQ,OAAS,EAAQ,KAYzB,GAAI,IAAc,SAAU,EAAG,CAC3B,GAAI,GAAe,EAAK,YAAY,CAAC,EACrC,MAAO,UAAU,EAAQ,CAAE,MAAO,GAAQ,MAAM,UAAY,CAAE,MAAO,GAAE,KAAO,EAAG,EAAa,CAAM,CAAC,CAAG,CAC5G,EACA,EAAQ,YAAc,GAOtB,EAAQ,GAER,EAAQ,GAAG,EAAE,WAAW,EAIxB,EAAQ,OAER,GAAU,OAAO,EAAQ,OAAO,EAIhC,EAAQ,KAER,GAAQ,KAAK,EAAQ,KAAK,EAO1B,EAAQ,IAER,GAAQ,IAAI,EAAQ,KAAK,EAYzB,EAAQ,MAAQ,EAAK,MAQrB,EAAQ,KAAO,EAAK,KAQpB,EAAQ,KAAO,EAAK,KAQpB,EAAQ,aAAe,EAAQ,WAQ/B,EAAQ,cAAgB,CACpB,IAAK,EAAQ,IACb,QAAS,EAAQ,QACjB,SAAU,EAAQ,SAClB,IAAK,EACL,GAAI,GACJ,GAAI,EAAQ,GACZ,MAAO,GACP,OAAQ,GACR,UAAW,GACX,UAAW,GACX,aAAc,GACd,aAAc,GACd,sBAAuB,GACvB,mBAAoB,GACpB,mBAAoB,GACpB,gBAAiB,GACjB,IAAK,GACL,KAAM,EAAQ,KACd,OAAQ,EAAQ,OAChB,OAAQ,GACR,QAAS,GACT,YAAa,GACb,SAAU,GACV,SAAU,EAAQ,SAClB,gBAAiB,GACjB,iBAAkB,GAClB,qBAAsB,GACtB,kBAAmB,GACnB,OAAQ,GACR,OAAQ,GACR,KAAM,EACV,IC3nEA,0BACA,GAAI,IAAmB,GAAQ,EAAK,iBAAqB,QAAO,OAAU,SAAS,EAAG,EAAG,EAAG,EAAI,CAC5F,AAAI,IAAO,QAAW,GAAK,GAC3B,OAAO,eAAe,EAAG,EAAI,CAAE,WAAY,GAAM,IAAK,UAAW,CAAE,MAAO,GAAE,EAAI,CAAE,CAAC,CACvF,EAAM,SAAS,EAAG,EAAG,EAAG,EAAI,CACxB,AAAI,IAAO,QAAW,GAAK,GAC3B,EAAE,GAAM,EAAE,EACd,GACI,GAAsB,GAAQ,EAAK,oBAAwB,QAAO,OAAU,SAAS,EAAG,EAAG,CAC3F,OAAO,eAAe,EAAG,UAAW,CAAE,WAAY,GAAM,MAAO,CAAE,CAAC,CACtE,EAAK,SAAS,EAAG,EAAG,CAChB,EAAE,QAAa,CACnB,GACI,GAAgB,GAAQ,EAAK,cAAiB,SAAU,EAAK,CAC7D,GAAI,GAAO,EAAI,WAAY,MAAO,GAClC,GAAI,GAAS,CAAC,EACd,GAAI,GAAO,KAAM,OAAS,KAAK,GAAK,AAAI,IAAM,WAAa,OAAO,UAAU,eAAe,KAAK,EAAK,CAAC,GAAG,GAAgB,EAAQ,EAAK,CAAC,EACvI,UAAmB,EAAQ,CAAG,EACvB,CACX,EACA,OAAO,eAAe,EAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,EAAQ,MAAQ,EAAQ,OAAS,EAAQ,QAAU,EAAQ,SAAW,EAAQ,SAAW,EAAQ,SAAW,EAAQ,SAAW,EAAQ,KAAO,EAAQ,cAAgB,EAAQ,YAAc,EAAQ,SAAW,EAAQ,aAAe,EAAQ,UAAY,EAAQ,UAAY,EAAQ,cAAgB,EAAQ,UAAY,EAAQ,SAAW,EAAQ,SAAW,EAAQ,cAAgB,EAAQ,UAAY,EAAQ,SAAW,EAAQ,KAAO,EAAQ,KAAO,EAAQ,KAAO,EAAQ,KAAO,EAAQ,OAAS,EAAQ,aAAe,EAAQ,KAAO,EAAQ,UAAY,EAAQ,SAAW,EAAQ,eAAiB,EAAQ,UAAY,EAAQ,WAAa,EAAQ,YAAc,EAAQ,SAAW,EAAQ,UAAY,EAAQ,WAAa,EAAQ,MAAQ,EAAQ,OAAS,EAAQ,WAAa,EAAQ,WAAa,EAAQ,cAAgB,EAAQ,UAAY,EAAQ,OAAS,EAAQ,QAAU,EAAQ,OAAS,EAAQ,SAAW,EAAQ,QAAU,EAAQ,WAAa,EAAQ,QAAU,OACp8B,EAAQ,kBAAoB,EAAQ,SAAW,EAAQ,SAAW,EAAQ,qBAAuB,EAAQ,YAAc,EAAQ,gBAAkB,EAAQ,OAAS,EAAQ,iBAAmB,EAAQ,QAAU,EAAQ,UAAY,EAAQ,OAAS,EAAQ,gBAAkB,EAAQ,IAAM,EAAQ,KAAO,EAAQ,sBAAwB,EAAQ,aAAe,EAAQ,mBAAqB,EAAQ,UAAY,EAAQ,OAAS,EAAQ,SAAW,EAAQ,QAAU,EAAQ,UAAY,EAAQ,mBAAqB,EAAQ,aAAe,EAAQ,QAAU,EAAQ,MAAQ,EAAQ,GAAK,EAAQ,IAAM,EAAQ,KAAO,EAAQ,GAAK,EAAQ,WAAa,EAAQ,aAAe,EAAQ,MAAQ,EAAQ,OAAS,EAAQ,QAAU,EAAQ,cAAgB,EAAQ,YAAc,EAAQ,SAAW,EAAQ,QAAU,EAAQ,KAAO,EAAQ,OAAS,EAAQ,KAAO,EAAQ,KAAO,EAAQ,OAAS,EAAQ,YAAc,EAAQ,WAAa,EAAQ,MAAQ,EAAQ,IAAM,EAAQ,QAAU,EAAQ,KAAO,OACr9B,EAAQ,KAAO,EAAQ,MAAQ,EAAQ,eAAiB,EAAQ,eAAiB,EAAQ,eAAiB,EAAQ,YAAc,EAAQ,WAAa,EAAQ,QAAU,EAAQ,qBAAuB,EAAQ,qBAAuB,EAAQ,mBAAqB,EAAQ,mBAAqB,EAAQ,WAAa,EAAQ,qBAAuB,EAAQ,YAAc,EAAQ,kBAAoB,EAAQ,SAAW,EAAQ,oBAAsB,EAAQ,WAAa,EAAQ,YAAc,EAAQ,OAAS,EAAQ,YAAc,EAAQ,MAAQ,EAAQ,KAAO,EAAQ,IAAM,EAAQ,WAAa,EAAQ,MAAQ,EAAQ,WAAa,EAAQ,MAAQ,EAAQ,YAAc,EAAQ,SAAW,EAAQ,QAAU,EAAQ,MAAQ,EAAQ,iBAAmB,EAAQ,QAAU,EAAQ,KAAO,EAAQ,QAAU,EAAQ,mBAAqB,EAAQ,yBAA2B,EAAQ,eAAiB,EAAQ,kBAAoB,EAAQ,OAAS,EAAQ,MAAQ,EAAQ,UAAY,EAAQ,aAAe,EAAQ,QAAU,EAAQ,IAAM,EAAQ,OAAS,EAAQ,KAAO,EAAQ,OAAS,OAC1iC,EAAQ,MAAQ,EAAQ,aAAe,EAAQ,KAAO,EAAQ,KAAO,EAAQ,MAAQ,EAAQ,MAAQ,EAAQ,IAAM,EAAQ,KAAO,EAAQ,OAAS,EAAQ,GAAK,EAAQ,YAAc,EAAQ,OAAS,OACvM,GAAI,IAAU,KACV,GAAU,KACV,GAAe,KACf,EAAa,IACb,GAAY,KACZ,EAAI,GAAa,IAAqB,EACtC,EAAM,GAAa,IAA0B,EAC7C,EAAK,GAAa,IAA0B,EAC5C,GAAc,KACd,GAAe,KACf,GAAS,KAgBT,GAAU,SAAU,EAAI,CAAE,MAAO,GAAG,SAAW,CAAG,EACtD,EAAQ,QAAU,GAalB,EAAQ,WAAa,EAAI,WAgBzB,EAAQ,QAAU,EAAI,QAatB,EAAQ,SAAW,EAAI,SAavB,EAAQ,OAAS,EAAI,OAarB,EAAQ,QAAU,EAAI,QAiBtB,GAAI,IAAS,SAAU,EAAG,EAAG,CAAE,MAAQ,IAAK,EAAI,CAAC,EAAI,EAAI,OAAO,CAAC,EAAE,CAAC,CAAI,EACxE,EAAQ,OAAS,GAgBjB,GAAI,IAAY,SAAU,EAAG,EAAG,CAAE,MAAO,GAAQ,OAAO,EAAG,UAAY,CAAE,MAAO,EAAG,CAAC,CAAG,EACvF,EAAQ,UAAY,GACpB,YAAuB,EAAW,CAC9B,MAAO,UAAU,EAAG,CAAE,MAAQ,GAAU,CAAC,EAAI,CAAC,CAAC,EAAI,CAAC,CAAI,CAC5D,CACA,EAAQ,cAAgB,GAmBxB,GAAI,IAAa,SAAU,EAAI,CAAE,MAAQ,GAAE,OAAO,CAAE,EAAI,CAAC,EAAI,CAAC,EAAG,KAAK,CAAI,EAC1E,EAAQ,WAAa,GAgBrB,GAAI,IAAa,SAAU,EAAG,CAAE,MAAQ,GAAE,OAAO,CAAC,EAAI,CAAC,EAAI,CAAC,EAAE,KAAK,CAAI,EACvE,EAAQ,WAAa,GAsBrB,GAAI,IAAS,SAAU,EAAS,EAAY,CAAE,MAAO,UAAU,EAAI,CAC/D,MAAO,GAAQ,WAAW,CAAE,EAAI,EAAW,CAAE,EAAI,EAAQ,CAC7D,CAAG,EACH,EAAQ,OAAS,GAmBjB,EAAQ,MAAQ,EAAQ,OAkBxB,GAAI,IAAa,SAAU,EAAS,EAAY,CAAE,MAAO,UAAU,EAAI,CAAE,MAAQ,GAAQ,WAAW,CAAE,EAAI,EAAW,EAAI,KAAK,CAAE,EAAG,EAAI,KAAK,CAAE,CAAC,EAAI,EAAQ,CAAI,CAAG,EAClK,EAAQ,WAAa,GAcrB,EAAQ,UAAY,EAAQ,WAO5B,EAAQ,SAAW,EAAQ,UAkB3B,GAAI,IAAc,SAAU,EAAS,EAAY,CAAE,MAAO,UAAU,EAAI,CAAE,MAAQ,GAAQ,WAAW,CAAE,EAAI,EAAW,EAAI,KAAK,CAAE,EAAG,EAAI,KAAK,CAAE,CAAC,EAAI,EAAQ,CAAI,CAAG,EACnK,EAAQ,YAAc,GAiBtB,EAAQ,WAAa,EAAQ,YAO7B,EAAQ,UAAY,EAAQ,WAiB5B,GAAI,IAAiB,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAErD,OADI,GAAM,CAAC,EACF,EAAI,EAAG,EAAI,EAAG,OAAQ,IAC3B,EAAI,KAAK,MAAM,EAAK,EAAE,EAAG,EAAG,EAAE,CAAC,EAEnC,MAAO,EACX,CAAG,EACH,EAAQ,eAAiB,GAYzB,GAAI,IAAW,SAAU,EAAG,EAAG,CAAE,MAAO,UAAU,EAAI,CAClD,GAAI,GAAM,EAAG,OACT,EAAM,GAAI,OAAM,EAAM,CAAC,EAC3B,EAAI,GAAK,EACT,OAAS,GAAI,EAAG,EAAI,EAAK,IACrB,EAAI,EAAI,GAAK,EAAE,EAAI,GAAI,EAAG,EAAE,EAEhC,MAAO,EACX,CAAG,EACH,EAAQ,SAAW,GAYnB,GAAI,IAAY,SAAU,EAAG,EAAG,CAAE,MAAO,UAAU,EAAI,CACnD,GAAI,GAAM,EAAG,OACT,EAAM,GAAI,OAAM,EAAM,CAAC,EAC3B,EAAI,GAAO,EACX,OAAS,GAAI,EAAM,EAAG,GAAK,EAAG,IAC1B,EAAI,GAAK,EAAE,EAAG,GAAI,EAAI,EAAI,EAAE,EAEhC,MAAO,EACX,CAAG,EACH,EAAQ,UAAY,GAWpB,GAAI,IAAO,SAAU,EAAI,CAAE,MAAO,GAAG,MAAQ,EAC7C,EAAQ,KAAO,GAaf,EAAQ,aAAe,EAAI,aAiB3B,EAAQ,OAAS,EAAG,OAcpB,EAAQ,KAAO,EAAG,KAclB,EAAQ,KAAO,EAAG,KAclB,GAAI,IAAO,SAAU,EAAI,CAAE,MAAQ,GAAQ,WAAW,CAAE,EAAI,EAAE,KAAK,EAAI,KAAK,CAAE,CAAC,EAAI,EAAE,IAAO,EAC5F,EAAQ,KAAO,GAcf,GAAI,IAAO,SAAU,EAAI,CAAE,MAAQ,GAAQ,WAAW,CAAE,EAAI,EAAE,KAAK,EAAI,KAAK,CAAE,CAAC,EAAI,EAAE,IAAO,EAC5F,EAAQ,KAAO,GAiBf,GAAI,IAAW,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAAE,MAAQ,GAAQ,aAAa,EAAG,CAAE,EAAI,EAAQ,KAAK,CAAE,EAAI,EAAG,MAAM,EAAG,CAAC,CAAI,CAAG,EAClI,EAAQ,SAAW,GAiBnB,GAAI,IAAY,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAChD,MAAO,GAAQ,aAAa,EAAG,CAAE,EAAI,EAAQ,KAAK,CAAE,EAAI,IAAM,EAAI,CAAC,EAAI,EAAG,MAAM,CAAC,CAAC,CACtF,CAAG,EACH,EAAQ,UAAY,GACpB,YAAuB,EAAW,CAC9B,MAAO,UAAU,EAAI,CAEjB,OADI,GAAM,CAAC,EACF,EAAK,EAAG,EAAO,EAAI,EAAK,EAAK,OAAQ,IAAM,CAChD,GAAI,GAAI,EAAK,GACb,GAAI,CAAC,EAAU,CAAC,EACZ,MAEJ,EAAI,KAAK,CAAC,CACd,CACA,MAAO,EACX,CACJ,CACA,EAAQ,cAAgB,GACxB,GAAI,IAAgB,SAAU,EAAI,EAAW,CAGzC,OAFI,GAAI,EAAG,OACP,EAAI,EACD,EAAI,GACF,EAAU,EAAG,EAAE,EADV,IACV,CAIJ,MAAO,EACX,EACA,YAAkB,EAAW,CACzB,MAAO,UAAU,EAAI,CACjB,GAAI,GAAK,EAAQ,QAAQ,GAAc,EAAI,CAAS,CAAC,EAAE,CAAE,EAAG,EAAO,EAAG,GAAI,EAAO,EAAG,GACpF,MAAO,CAAE,KAAM,EAAM,KAAM,CAAK,CACpC,CACJ,CACA,EAAQ,SAAW,GAiBnB,GAAI,IAAW,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAC/C,MAAO,IAAK,GAAK,EAAQ,QAAQ,CAAE,EAAI,EAAQ,KAAK,CAAE,EAAI,GAAK,EAAG,OAAS,CAAC,EAAI,EAAG,MAAM,EAAG,EAAG,MAAM,CACzG,CAAG,EACH,EAAQ,SAAW,GAiBnB,GAAI,IAAY,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAChD,MAAO,IAAK,GAAK,EAAQ,QAAQ,CAAE,EAAI,EAAQ,KAAK,CAAE,EAAI,GAAK,EAAG,OAAS,CAAC,EAAI,EAAG,MAAM,EAAG,EAAG,OAAS,CAAC,CAC7G,CAAG,EACH,EAAQ,UAAY,GACpB,YAAuB,EAAW,CAC9B,MAAO,UAAU,EAAI,CAAE,MAAO,GAAG,MAAM,GAAc,EAAI,CAAS,CAAC,CAAG,CAC1E,CACA,EAAQ,cAAgB,GAexB,EAAQ,UAAY,EAAG,UACvB,YAAmB,EAAW,CAC1B,MAAO,GAAG,UAAU,CAAS,CACjC,CACA,EAAQ,UAAY,GA6BpB,EAAQ,aAAe,EAAG,aAC1B,YAAkB,EAAW,CACzB,MAAO,GAAG,SAAS,CAAS,CAChC,CACA,EAAQ,SAAW,GA6BnB,EAAQ,YAAc,EAAG,YAmBzB,EAAQ,cAAgB,EAAG,cAO3B,GAAI,IAAO,SAAU,EAAI,CAAE,MAAO,GAAG,MAAM,CAAG,EAC9C,EAAQ,KAAO,GAaf,GAAI,IAAW,SAAU,EAAG,EAAG,CAAE,MAAO,UAAU,EAAI,CAClD,MAAO,GAAI,GAAK,EAAI,EAAG,OAAS,EAAE,KAAO,EAAE,KAAK,EAAQ,eAAe,EAAG,EAAG,CAAE,CAAC,CACpF,CAAG,EACH,EAAQ,SAAW,GAcnB,GAAI,IAAW,SAAU,EAAG,EAAG,CAAE,MAAO,GAAQ,SAAS,EAAG,UAAY,CAAE,MAAO,EAAG,CAAC,CAAG,EACxF,EAAQ,SAAW,GAanB,GAAI,IAAW,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAC/C,MAAO,GAAQ,aAAa,EAAG,CAAE,EAAI,EAAE,KAAO,EAAE,KAAK,EAAQ,eAAe,EAAG,CAAE,CAAC,CACtF,CAAG,EACH,EAAQ,SAAW,GAenB,GAAI,IAAW,SAAU,EAAG,EAAG,CAAE,MAAO,UAAU,EAAI,CAClD,MAAO,GAAQ,aAAa,EAAG,CAAE,EAAI,EAAE,KAAO,EAAE,KAAK,EAAQ,eAAe,EAAG,EAAE,EAAG,EAAE,EAAG,CAAE,CAAC,CAChG,CAAG,EACH,EAAQ,SAAW,GAYnB,GAAI,IAAU,SAAU,EAAI,CAAE,MAAQ,GAAQ,QAAQ,CAAE,EAAI,CAAC,EAAI,EAAG,MAAM,EAAE,QAAQ,CAAI,EACxF,EAAQ,QAAU,GAclB,GAAI,IAAS,SAAU,EAAI,CAEvB,OADI,GAAI,CAAC,EACA,EAAI,EAAG,EAAI,EAAG,OAAQ,IAAK,CAChC,GAAI,GAAI,EAAG,GACX,AAAI,EAAE,OAAS,SACX,EAAE,KAAK,EAAE,KAAK,CAEtB,CACA,MAAO,EACX,EACA,EAAQ,OAAS,GAcjB,GAAI,IAAQ,SAAU,EAAI,CAEtB,OADI,GAAI,CAAC,EACA,EAAI,EAAG,EAAI,EAAG,OAAQ,IAAK,CAChC,GAAI,GAAI,EAAG,GACX,AAAI,EAAE,OAAS,QACX,EAAE,KAAK,EAAE,IAAI,CAErB,CACA,MAAO,EACX,EACA,EAAQ,MAAQ,GAahB,GAAI,IAAO,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAC3C,MAAO,GAAG,QAAU,EAAI,EAAQ,KAAK,CAAE,EAAI,EAAG,MAAM,EAAE,KAAK,EAAE,OAAO,CACxE,CAAG,EACH,EAAQ,KAAO,GAaf,GAAI,IAAU,SAAU,EAAI,EAAI,EAAG,CAG/B,OAFI,GAAK,CAAC,EACN,EAAM,KAAK,IAAI,EAAG,OAAQ,EAAG,MAAM,EAC9B,EAAI,EAAG,EAAI,EAAK,IACrB,EAAG,GAAK,EAAE,EAAG,GAAI,EAAG,EAAE,EAE1B,MAAO,EACX,EACA,EAAQ,QAAU,GAClB,YAAa,EAAI,EAAI,CACjB,MAAI,KAAO,OACA,SAAU,EAAI,CAAE,MAAO,IAAI,EAAI,CAAE,CAAG,EAExC,EAAQ,QAAQ,EAAI,EAAI,SAAU,EAAG,EAAG,CAAE,MAAO,CAAC,EAAG,CAAC,CAAG,CAAC,CACrE,CACA,EAAQ,IAAM,GAWd,GAAI,IAAQ,SAAU,EAAI,CAGtB,OAFI,GAAK,CAAC,EACN,EAAK,CAAC,EACD,EAAI,EAAG,EAAI,EAAG,OAAQ,IAC3B,EAAG,GAAK,EAAG,GAAG,GACd,EAAG,GAAK,EAAG,GAAG,GAElB,MAAO,CAAC,EAAI,CAAE,CAClB,EACA,EAAQ,MAAQ,GAYhB,GAAI,IAAa,SAAU,EAAQ,CAC/B,GAAI,GAAI,EAAI,WAAW,CAAM,EAC7B,MAAO,UAAU,EAAI,CAAE,MAAQ,GAAQ,WAAW,CAAE,EAAI,EAAE,CAAE,EAAI,CAAC,CAAI,CACzE,EACA,EAAQ,WAAa,GAYrB,GAAI,IAAc,SAAU,EAAQ,CAChC,GAAI,GAAI,EAAI,YAAY,CAAM,EAC9B,MAAO,UAAU,EAAI,CAAE,MAAQ,GAAQ,WAAW,CAAE,EAAI,EAAE,CAAE,EAAI,EAAQ,KAAK,CAAE,CAAI,CACvF,EACA,EAAQ,YAAc,GAYtB,GAAI,IAAS,SAAU,EAAG,CACtB,GAAI,GAAI,EAAI,OAAO,CAAC,EACpB,MAAO,UAAU,EAAI,CAAE,MAAQ,GAAQ,WAAW,CAAE,EAAI,EAAE,CAAE,EAAI,EAAQ,KAAK,CAAE,CAAI,CACvF,EACA,EAAQ,OAAS,GAiBjB,EAAQ,KAAO,EAAG,KAclB,GAAI,IAAO,SAAU,EAAG,CACpB,GAAI,GAAI,EAAI,KAAK,CAAC,EAClB,MAAO,UAAU,EAAI,CAAE,MAAQ,GAAQ,WAAW,CAAE,EAAI,EAAE,CAAE,EAAI,EAAQ,KAAK,CAAE,CAAI,CACvF,EACA,EAAQ,KAAO,GAgCf,GAAI,IAAS,SAAU,EAAM,CACzB,GAAI,GAAI,EAAI,OAAO,CAAI,EACvB,MAAO,UAAU,EAAI,CAAE,MAAQ,GAAQ,WAAW,CAAE,EAAI,EAAE,CAAE,EAAI,EAAQ,KAAK,CAAE,CAAI,CACvF,EACA,EAAQ,OAAS,GAuBjB,GAAI,IAAO,SAAU,EAAG,CACpB,GAAI,GAAI,EAAI,KAAK,CAAC,EAClB,MAAO,UAAU,EAAI,CAAE,MAAQ,GAAQ,WAAW,CAAE,EAAI,EAAE,CAAE,EAAI,CAAC,CAAI,CACzE,EACA,EAAQ,KAAO,GAYf,GAAI,IAAU,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAC9C,MAAO,IAAK,GAAK,EAAQ,WAAW,CAAE,EAAI,EAAI,QAAQ,CAAC,EAAE,CAAE,EAAI,EAAQ,QAAQ,CAAE,EAAI,CAAC,EAAQ,KAAK,CAAE,EAAG,CAAC,CAAC,EAAI,CAAC,CAAC,EAAG,EAAQ,KAAK,CAAE,CAAC,CACvI,CAAG,EACH,EAAQ,QAAU,GAoBlB,GAAI,IAAW,SAAU,EAAG,CACxB,GAAI,GAAI,EAAI,SAAS,CAAC,EACtB,MAAO,UAAU,EAAI,CAAE,MAAQ,GAAQ,WAAW,CAAE,EAAI,EAAE,CAAE,EAAI,CAAC,CAAI,CACzE,EACA,EAAQ,SAAW,GAKnB,GAAI,IAAc,SAAU,EAAG,CAAE,MAAO,WAAY,CAEhD,OADI,GAAI,CAAC,EACA,EAAK,EAAG,EAAK,UAAU,OAAQ,IACpC,EAAE,GAAM,UAAU,GAEtB,MAAO,GAAQ,WAAW,EAAE,MAAM,OAAQ,CAAC,CAAC,CAChD,CAAG,EACH,EAAQ,YAAc,GACtB,YAAuB,EAAO,EAAG,EAAG,CAChC,AAAI,IAAM,QAAU,GAAI,UAAY,CAAE,MAAO,EAAM,GACnD,GAAI,GAAK,SAAU,EAAO,EAAO,CAC7B,MAAO,GAAQ,WAAW,CAAK,EACzB,EAAW,KAAK,EAAI,KAAK,CAAK,EAAG,EAAQ,MAAM,SAAU,EAAG,CAAE,MAAO,GAAG,EAAW,KAAK,EAAO,EAAQ,OAAO,CAAC,CAAC,EAAG,EAAI,KAAK,CAAK,CAAC,CAAG,CAAC,CAAC,EACvI,EAAE,MAAM,OAAQ,CAAK,EAAI,CAAC,EAAE,MAAM,OAAQ,CAAK,CAAC,EAC5C,CAAC,CACf,EACA,MAAO,GAAG,CAAC,EAAG,CAAK,CACvB,CACA,EAAQ,cAAgB,GAKxB,GAAI,IAAU,SAAU,EAAQ,CAAE,MAAO,UAAU,EAAO,CACtD,MAAO,GAAQ,QAAQ,CAAK,EAAI,EAAQ,KAAK,CAAM,EAAI,EAAQ,QAAQ,CAAM,EAAI,EAAQ,KAAK,CAAK,EAAI,EAAM,OAAO,CAAM,CAC9H,CAAG,EACH,EAAQ,QAAU,GAKlB,EAAQ,OAAS,EAAQ,QACzB,YAAe,EAAG,CACd,GAAI,GAAS,EAAI,MAAM,CAAC,EACxB,MAAO,UAAU,EAAO,EAAQ,CAC5B,GAAI,IAAW,OAAW,CACtB,GAAI,GAAW,GAAM,CAAC,EACtB,MAAO,UAAU,EAAQ,CAAE,MAAO,GAAS,EAAQ,CAAK,CAAG,CAC/D,CACA,MAAO,GAAQ,WAAW,CAAK,GAAK,EAAQ,WAAW,CAAM,EACvD,EAAO,CAAM,EAAE,CAAK,EACpB,EAAQ,WAAW,CAAK,EACpB,EAAQ,KAAK,CAAK,EAClB,EAAQ,KAAK,CAAM,CACjC,CACJ,CACA,EAAQ,MAAQ,GAChB,YAAsB,EAAG,CACrB,GAAI,GAAQ,EAAQ,KAAK,CAAC,EAC1B,MAAO,UAAU,EAAI,EAAI,CACrB,GAAI,IAAO,OAAW,CAClB,GAAI,GAAkB,GAAa,CAAC,EACpC,MAAO,UAAU,EAAI,CAAE,MAAO,GAAgB,EAAI,CAAE,CAAG,CAC3D,CACA,MAAO,GAAG,OAAO,SAAU,EAAG,CAAE,MAAO,GAAM,EAAG,CAAE,CAAG,CAAC,CAC1D,CACJ,CACA,EAAQ,aAAe,GACvB,YAAoB,EAAG,CACnB,GAAI,GAAQ,EAAQ,KAAK,CAAC,EAC1B,MAAO,UAAU,EAAI,EAAI,CACrB,GAAI,IAAO,OAAW,CAClB,GAAI,GAAgB,GAAW,CAAC,EAChC,MAAO,UAAU,EAAI,CAAE,MAAO,GAAc,EAAI,CAAE,CAAG,CACzD,CACA,MAAO,GAAG,OAAO,SAAU,EAAG,CAAE,MAAO,CAAC,EAAM,EAAG,CAAE,CAAG,CAAC,CAC3D,CACJ,CACA,EAAQ,WAAa,GAIrB,GAAI,GAAO,SAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,IAAI,CAAC,CAAC,CAAG,EAEtE,GAAgB,SAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,aAAa,CAAC,CAAC,CAAG,EACxF,GAAM,SAAU,EAAK,EAAI,CAAE,MAAO,GAAW,KAAK,EAAK,EAAQ,GAAG,CAAE,CAAC,CAAG,EACxE,GAAS,SAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,MAAM,CAAC,CAAC,CAAG,EAE1E,GAAU,SAAU,EAAI,EAAW,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,OAAO,CAAS,CAAC,CAAG,EAE5F,GAAa,SAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,UAAU,CAAC,CAAC,CAAG,EAElF,GAAa,SAAU,EAAI,EAAW,CACtC,MAAO,GAAW,KAAK,EAAI,EAAQ,UAAU,CAAS,CAAC,CAC3D,EAEI,GAAgB,SAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,aAAa,CAAC,CAAC,CAAG,EAExF,GAAsB,SAAU,EAAI,EAAoB,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,mBAAmB,CAAkB,CAAC,CAAG,EAEtI,GAAyB,SAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,sBAAsB,CAAC,CAAC,CAAG,EAE1G,GAAO,SAAU,EAAI,EAAM,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,IAAI,CAAI,CAAC,CAAG,EAC5E,GAAU,SAAU,EAAI,EAAG,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,OAAO,EAAG,CAAC,CAAC,CAAG,EAElF,GAAW,SAAU,EAAG,CACxB,GAAI,GAAW,EAAQ,QAAQ,CAAC,EAChC,MAAO,UAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAS,CAAC,CAAC,CAAG,CACvE,EAEI,GAAe,SAAU,EAAI,EAAG,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,YAAY,EAAG,CAAC,CAAC,CAAG,EAE5F,GAAmB,SAAU,EAAI,EAAG,EAAG,CACvC,MAAO,GAAW,KAAK,EAAI,EAAQ,gBAAgB,EAAG,CAAC,CAAC,CAC5D,EAEI,GAAoB,SAAU,EAAG,CACjC,GAAI,GAAoB,EAAQ,iBAAiB,CAAC,EAClD,MAAO,UAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAkB,CAAC,CAAC,CAAG,CAChF,EAEI,GAAwB,SAAU,EAAI,EAAG,EAAG,CAC5C,MAAO,GAAW,KAAK,EAAI,EAAQ,qBAAqB,EAAG,CAAC,CAAC,CACjE,EAEI,GAAsB,SAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,mBAAmB,CAAC,CAAC,CAAG,EAEpG,GAAmB,SAAU,EAAI,EAAoB,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,gBAAgB,CAAkB,CAAC,CAAG,EAEhI,GAAU,SAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,OAAO,CAAC,CAAC,CAAG,EAE5E,GAAY,SAAU,EAAG,CACzB,GAAI,GAAY,EAAQ,SAAS,CAAC,EAClC,MAAO,UAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAU,CAAC,CAAC,CAAG,CACxE,EAEI,GAAqB,SAAU,EAAG,CAClC,GAAI,GAAqB,EAAQ,kBAAkB,CAAC,EACpD,MAAO,UAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAmB,CAAC,CAAC,CAAG,CACjF,EACI,GAAsB,EAAG,oBACzB,GAAwB,EAAG,sBAgB/B,EAAQ,GAAK,EAAI,GAOjB,GAAI,IAAO,UAAY,CAAE,MAAO,CAAC,CAAG,EACpC,EAAQ,KAAO,GAgBf,GAAI,IAAM,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,GAAG,IAAI,SAAU,EAAG,CAAE,MAAO,GAAE,CAAC,CAAG,CAAC,CAAG,CAAG,EACjG,EAAQ,IAAM,GAkCd,GAAI,IAAK,SAAU,EAAI,CAAE,MAAO,GAAQ,MAAM,SAAU,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,IAAI,CAAC,CAAC,CAAG,CAAC,CAAG,EAC7G,EAAQ,GAAK,GAuBb,GAAI,IAAQ,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAC5C,MAAO,GAAW,KAAK,EAAI,EAAQ,eAAe,SAAU,EAAG,EAAG,CAAE,MAAO,GAAE,CAAC,CAAG,CAAC,CAAC,CACvF,CAAG,EACH,EAAQ,MAAQ,GAehB,EAAQ,QAER,EAAQ,MAAM,EAAW,QAAQ,EAejC,GAAI,IAAe,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CACnD,MAAO,GAAG,IAAI,SAAU,EAAG,EAAG,CAAE,MAAO,GAAE,EAAG,CAAC,CAAG,CAAC,CACrD,CAAG,EACH,EAAQ,aAAe,GAoBvB,GAAI,IAAqB,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAEzD,OADI,GAAM,CAAC,EACF,EAAI,EAAG,EAAI,EAAG,OAAQ,IAAK,CAChC,GAAI,GAAU,EAAE,EAAG,EAAG,EAAE,EACxB,AAAI,EAAE,OAAO,CAAO,GAChB,EAAI,KAAK,EAAQ,KAAK,CAE9B,CACA,MAAO,EACX,CAAG,EACH,EAAQ,mBAAqB,GAgB7B,GAAI,IAAY,SAAU,EAAG,CACzB,MAAO,GAAQ,mBAAmB,SAAU,EAAG,EAAG,CAAE,MAAO,GAAE,CAAC,CAAG,CAAC,CACtE,EACA,EAAQ,UAAY,GAepB,EAAQ,QAER,EAAQ,UAAU,EAAW,QAAQ,EAiBrC,GAAI,IAAW,SAAU,EAAI,CAGzB,OAFI,GAAO,CAAC,EACR,EAAQ,CAAC,EACJ,EAAK,EAAG,EAAO,EAAI,EAAK,EAAK,OAAQ,IAAM,CAChD,GAAI,GAAI,EAAK,GACb,AAAI,EAAE,OAAS,OACX,EAAK,KAAK,EAAE,IAAI,EAGhB,EAAM,KAAK,EAAE,KAAK,CAE1B,CACA,MAAO,IAAY,UAAU,EAAM,CAAK,CAC5C,EACA,EAAQ,SAAW,GAgBnB,GAAI,IAAS,SAAU,EAAW,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,GAAG,OAAO,CAAS,CAAG,CAAG,EAC3F,EAAQ,OAAS,GAiBjB,GAAI,IAAY,SAAU,EAAW,CACjC,MAAO,GAAQ,mBAAmB,SAAU,EAAG,EAAG,CAAE,MAAO,GAAU,CAAC,CAAG,CAAC,CAC9E,EACA,EAAQ,UAAY,GAepB,GAAI,IAAqB,SAAU,EAAoB,CAAE,MAAO,UAAU,EAAI,CAG1E,OAFI,GAAO,CAAC,EACR,EAAQ,CAAC,EACJ,EAAI,EAAG,EAAI,EAAG,OAAQ,IAAK,CAChC,GAAI,GAAI,EAAG,GACX,AAAI,EAAmB,EAAG,CAAC,EACvB,EAAM,KAAK,CAAC,EAGZ,EAAK,KAAK,CAAC,CAEnB,CACA,MAAO,IAAY,UAAU,EAAM,CAAK,CAC5C,CAAG,EACH,EAAQ,mBAAqB,GAoB7B,GAAI,IAAe,SAAU,EAAG,CAAE,MAAO,GAAQ,sBAAsB,SAAU,EAAG,EAAG,CAAE,MAAO,GAAE,CAAC,CAAG,CAAC,CAAG,EAC1G,EAAQ,aAAe,GAkBvB,GAAI,IAAwB,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAG5D,OAFI,GAAO,CAAC,EACR,EAAQ,CAAC,EACJ,EAAI,EAAG,EAAI,EAAG,OAAQ,IAAK,CAChC,GAAI,GAAI,EAAE,EAAG,EAAG,EAAE,EAClB,AAAI,EAAE,OAAS,OACX,EAAK,KAAK,EAAE,IAAI,EAGhB,EAAM,KAAK,EAAE,KAAK,CAE1B,CACA,MAAO,IAAY,UAAU,EAAM,CAAK,CAC5C,CAAG,EACH,EAAQ,sBAAwB,GAYhC,GAAI,IAAO,SAAU,EAAM,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,GAAG,OAAO,EAAK,CAAC,CAAG,CAAG,EACjF,EAAQ,KAAO,GAgBf,EAAQ,IAAM,EAAQ,KAatB,GAAI,IAAkB,SAAU,EAAoB,CAAE,MAAO,UAAU,EAAI,CACvE,MAAO,GAAG,OAAO,SAAU,EAAG,EAAG,CAAE,MAAO,GAAmB,EAAG,CAAC,CAAG,CAAC,CACzE,CAAG,EACH,EAAQ,gBAAkB,GAgB1B,GAAI,IAAS,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAC7C,MAAO,GAAG,IAAI,SAAU,EAAG,EAAG,CAAE,MAAO,GAAE,EAAG,MAAM,CAAC,CAAC,CAAG,CAAC,CAC5D,CAAG,EACH,EAAQ,OAAS,GAejB,EAAQ,UAER,EAAQ,OAAO,EAAW,QAAQ,EAgBlC,EAAQ,QAAU,EAAG,QAcrB,EAAQ,iBAAmB,EAAG,iBAkB9B,EAAQ,OAAS,EAAG,OAcpB,EAAQ,gBAAkB,EAAG,gBAc7B,EAAQ,YAAc,EAAG,YAczB,EAAQ,qBAAuB,EAAG,qBAwBlC,GAAI,IAAW,SAAU,EAAG,CACxB,GAAI,GAAqB,EAAQ,kBAAkB,CAAC,EACpD,MAAO,UAAU,EAAG,CAAE,MAAO,GAAmB,SAAU,EAAG,EAAG,CAAE,MAAO,GAAE,CAAC,CAAG,CAAC,CAAG,CACvF,EACA,EAAQ,SAAW,GAwBnB,GAAI,IAAW,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAC/C,MAAO,IAAQ,EAAI,EAAE,GAAG,EAAQ,KAAK,CAAC,EAAG,SAAU,EAAK,EAAI,CACxD,MAAO,GAAE,GAAG,EAAE,IAAI,EAAK,SAAU,EAAI,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,OAAO,CAAC,CAAC,CAAG,CAAG,CAAC,EAAG,CAAE,CACzH,CAAC,CACL,CAAG,EACH,EAAQ,SAAW,GAgBnB,GAAI,IAAoB,SAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CACvD,MAAO,GAAQ,gBAAgB,EAAE,GAAG,EAAQ,KAAK,CAAC,EAAG,SAAU,EAAG,EAAK,EAAG,CACtE,MAAO,GAAE,GAAG,EAAE,IAAI,EAAK,SAAU,EAAI,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,OAAO,CAAC,CAAC,CAAG,CAAG,CAAC,EAAG,EAAE,EAAG,CAAC,CAAC,CAC9H,CAAC,CACL,CAAG,EACH,EAAQ,kBAAoB,GAK5B,GAAI,IAAS,SAAU,EAAG,CACtB,GAAI,GAAW,GAAQ,CAAC,EACxB,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,GAAS,EAAI,CAAC,CAAG,CAAG,CAC5E,EACA,EAAQ,OAAS,GAKjB,GAAI,IAAO,SAAU,EAAG,CACpB,GAAI,GAAS,GAAM,CAAC,EACpB,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,GAAO,EAAI,CAAC,CAAG,CAAG,CAC1E,EACA,EAAQ,KAAO,GAuBf,GAAI,IAAS,SAAU,EAAG,EAAG,CAGzB,OAFI,GAAM,CAAC,EACP,EAAK,IACI,CACT,GAAI,GAAK,EAAE,CAAE,EACb,GAAI,EAAE,OAAO,CAAE,EAAG,CACd,GAAI,GAAK,EAAG,MAAO,EAAI,EAAG,GAAI,EAAM,EAAG,GACvC,EAAI,KAAK,CAAC,EACV,EAAK,CACT,KAEI,MAER,CACA,MAAO,EACX,EACA,EAAQ,OAAS,GAQjB,EAAQ,IAAM,QAcd,EAAQ,QAAU,EAAG,QAcrB,GAAI,IAAe,UAAY,CAAE,MAAQ,CACrC,OAAQ,SAAU,EAAO,EAAQ,CAAE,MAAO,GAAM,OAAO,CAAM,CAAG,CACpE,CAAI,EACJ,EAAQ,aAAe,GAavB,GAAI,IAAY,UAAY,CAAE,MAAQ,CAClC,OAAQ,EAAQ,aAAa,EAAE,OAC/B,MAAO,CAAC,CACZ,CAAI,EACJ,EAAQ,UAAY,GAiBpB,EAAQ,MAAQ,EAAG,MAmBnB,EAAQ,OAAS,EAAG,OAiBpB,GAAI,IAAoB,SAAU,EAAG,CACjC,GAAI,GAAS,GAAM,CAAC,EACpB,MAAO,CACH,OAAQ,SAAU,EAAO,EAAQ,CAAE,MAAO,GAAO,CAAM,EAAE,CAAK,CAAG,CACrE,CACJ,EACA,EAAQ,kBAAoB,GAiB5B,GAAI,IAAiB,SAAU,EAAG,CAAE,MAAQ,CACxC,OAAQ,EAAQ,kBAAkB,CAAC,EAAE,OACrC,MAAO,CAAC,CACZ,CAAI,EACJ,EAAQ,eAAiB,GAgBzB,GAAI,IAA2B,SAAU,EAAG,CACxC,GAAI,GAAgB,GAAa,CAAC,EAClC,MAAO,CACH,OAAQ,SAAU,EAAO,EAAQ,CAAE,MAAO,GAAc,CAAM,EAAE,CAAK,CAAG,CAC5E,CACJ,EACA,EAAQ,yBAA2B,GAkBnC,GAAI,IAAqB,SAAU,EAAG,CAClC,GAAI,GAAc,GAAW,CAAC,EAC9B,MAAO,CACH,OAAQ,SAAU,EAAO,EAAQ,CAAE,MAAO,GAAY,CAAM,EAAE,CAAK,CAAG,CAC1E,CACJ,EACA,EAAQ,mBAAqB,GAK7B,EAAQ,QAAU,CACd,IAAK,EAAQ,IACb,IAAK,CACT,EAkBA,EAAQ,KAER,GAAU,KAAK,EAAQ,OAAO,EAK9B,EAAQ,QAAU,CACd,IAAK,EAAQ,IACb,GAAI,EAAQ,EAChB,EAKA,EAAQ,iBAAmB,CACvB,IAAK,EAAQ,IACb,IAAK,EACL,aAAc,EAClB,EAKA,EAAQ,MAAQ,CACZ,IAAK,EAAQ,IACb,IAAK,EACL,GAAI,EACR,EASA,EAAQ,QAER,GAAQ,QAAQ,EAAQ,KAAK,EAS7B,EAAQ,SAER,GAAQ,SAAS,EAAQ,KAAK,EAK9B,EAAQ,YAAc,CAClB,IAAK,EAAQ,IACb,IAAK,EACL,GAAI,GACJ,GAAI,EAAQ,EAChB,EAKA,EAAQ,MAAQ,CACZ,IAAK,EAAQ,IACb,IAAK,EACL,GAAI,GACJ,MAAO,EACX,EAUA,EAAQ,WAER,GAAQ,WAAW,EAAQ,KAAK,EAKhC,EAAQ,MAAQ,CACZ,IAAK,EAAQ,IACb,IAAK,EACL,GAAI,GACJ,GAAI,EAAQ,GACZ,MAAO,EACX,EAKA,EAAQ,WAAa,CACjB,IAAK,EAAQ,IACb,OAAQ,EAAQ,MACpB,EAKA,EAAQ,IAAM,CACV,IAAK,EAAQ,IACb,IAAK,EACL,IAAK,EACT,EAKA,EAAQ,KAAO,CACX,IAAK,EAAQ,IACb,KAAM,EAAQ,IAClB,EAKA,EAAQ,MAER,GAAO,MAAM,EAAQ,KAAM,EAAQ,OAAO,EAK1C,EAAQ,YAAc,CAClB,IAAK,EAAQ,IACb,IAAK,EACL,GAAI,GACJ,GAAI,EAAQ,GACZ,IAAK,GACL,KAAM,EAAQ,IAClB,EAKA,EAAQ,OAAS,CACb,IAAK,EAAQ,IACb,IAAK,EACL,OAAQ,EACZ,EAKA,EAAQ,YAAc,CAClB,IAAK,EAAQ,IACb,QAAS,EAAQ,QACjB,SAAU,EAAQ,QACtB,EAKA,EAAQ,WAAa,CACjB,IAAK,EAAQ,IACb,IAAK,EACL,QAAS,EAAQ,QACjB,SAAU,EAAQ,SAClB,OAAQ,GACR,UAAW,GACX,UAAW,GACX,aAAc,EAClB,EAKA,EAAQ,oBAAsB,CAC1B,IAAK,EAAQ,IACb,IAAK,EACL,aAAc,GACd,QAAS,EAAQ,QACjB,SAAU,EAAQ,SAClB,OAAQ,GACR,UAAW,GACX,UAAW,GACX,aAAc,GACd,sBAAuB,GACvB,mBAAoB,GACpB,mBAAoB,GACpB,gBAAiB,EACrB,EAKA,EAAQ,SAAW,CACf,IAAK,EAAQ,IACb,OAAQ,GACR,QAAS,GACT,YAAa,EACjB,EAKA,EAAQ,kBAAoB,CACxB,IAAK,EAAQ,IACb,OAAQ,GACR,QAAS,GACT,YAAa,GACb,gBAAiB,GACjB,iBAAkB,GAClB,qBAAsB,EAC1B,EAKA,EAAQ,YAAc,CAClB,IAAK,EAAQ,IACb,IAAK,EACL,OAAQ,GACR,QAAS,GACT,YAAa,GACb,SAAU,GACV,SAAU,EAAQ,QACtB,EAKA,EAAQ,qBAAuB,CAC3B,IAAK,EAAQ,IACb,IAAK,EACL,aAAc,GACd,OAAQ,GACR,QAAS,GACT,YAAa,GACb,gBAAiB,GACjB,iBAAkB,GAClB,qBAAsB,GACtB,SAAU,GACV,SAAU,EAAQ,SAClB,kBAAmB,EACvB,EACA,GAAI,IAEJ,GAAa,cAAc,EAAQ,YAAa,EAAQ,WAAW,EAC/D,GAEJ,GAAa,YAAY,EAAQ,YAAa,EAAQ,WAAW,EAKjE,EAAQ,WAAa,CACjB,IAAK,EAAQ,IACb,IAAK,EACL,QAAS,EAAQ,QACjB,SAAU,EAAQ,SAClB,OAAQ,GACR,UAAW,GACX,UAAW,GACX,aAAc,GACd,OAAQ,GACR,QAAS,GACT,YAAa,GACb,SAAU,GACV,SAAU,EAAQ,SAClB,OAAQ,GACR,KAAM,EACV,EAKA,EAAQ,mBAAqB,EAAG,mBAKhC,EAAQ,mBAAqB,CACzB,IAAK,EAAQ,IACb,IAAK,EACL,GAAI,GACJ,MAAO,GACP,SAAU,EACd,EAKA,EAAQ,qBAAuB,EAAG,qBAKlC,EAAQ,qBAAuB,CAC3B,IAAK,EAAQ,IACb,IAAK,EACL,GAAI,GACJ,MAAO,GACP,SAAU,EACd,EAMA,EAAQ,QAER,GAAa,QAAQ,EAAQ,UAAU,EAKvC,EAAQ,WAAa,CACjB,IAAK,EAAQ,IACb,WAAY,EAAQ,UACxB,EAKA,EAAQ,YAER,GAAa,YAAY,EAAQ,UAAU,EAQ3C,EAAQ,eAAiB,EAAI,eAK7B,GAAI,IAAiB,SAAU,EAAG,EAAG,EAAI,CACrC,MAAO,GAAQ,WAAW,CAAE,EAAI,EAAI,eAAe,EAAG,EAAG,CAAE,EAAI,CAAC,CACpE,EACA,EAAQ,eAAiB,GAKzB,GAAI,IAAiB,SAAU,EAAG,EAAI,CAClC,GAAI,GAAK,EAAG,MAAM,EAClB,SAAG,OAAO,EAAG,CAAC,EACP,CACX,EACA,EAAQ,eAAiB,GAezB,EAAQ,MAAQ,EAAG,MAYnB,GAAI,IAAO,SAAU,EAAW,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,GAAG,KAAK,CAAS,CAAG,CAAG,EACvF,EAAQ,KAAO,GAMf,EAAQ,OAAS,EAAQ,KAYzB,EAAQ,YAAc,EAAG,YAOzB,EAAQ,GAER,EAAQ,GAAG,EAAE,WAAW,EAIxB,EAAQ,OAER,GAAU,OAAO,EAAQ,OAAO,EAIhC,EAAQ,KAER,GAAQ,KAAK,EAAQ,KAAK,EAO1B,EAAQ,IAER,GAAQ,IAAI,EAAQ,KAAK,EAYzB,EAAQ,MAAQ,EAAI,MAOpB,EAAQ,MAAQ,CAAC,EAQjB,EAAQ,KAAO,EAAI,KAQnB,EAAQ,KAAO,EAAI,KAQnB,EAAQ,aAAe,EAAQ,WAQ/B,EAAQ,MAAQ,CACZ,IAAK,EAAQ,IACb,QAAS,EAAQ,QACjB,SAAU,EAAQ,SAClB,IAAK,EACL,GAAI,GACJ,GAAI,EAAQ,GACZ,MAAO,GACP,OAAQ,GACR,UAAW,GACX,UAAW,GACX,aAAc,GACd,aAAc,GACd,sBAAuB,GACvB,mBAAoB,GACpB,mBAAoB,GACpB,gBAAiB,GACjB,IAAK,GACL,KAAM,EAAQ,KACd,OAAQ,EAAQ,OAChB,OAAQ,GACR,QAAS,GACT,YAAa,GACb,SAAU,GACV,SAAU,EAAQ,SAClB,gBAAiB,GACjB,iBAAkB,GAClB,qBAAsB,GACtB,kBAAmB,GACnB,OAAQ,GACR,OAAQ,GACR,KAAM,EACV,ICriFA,2BACA,OAAO,eAAe,GAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,GAAQ,0BAA4B,GAAQ,qBAAuB,OAoBnE,GAAI,IAAU,KACV,GAAa,IACb,GAAY,KAChB,YAA8B,EAAG,CAC7B,GAAI,GAAI,GAAQ,kBAAkB,CAAC,EACnC,MAAO,UAAU,EAAG,CAAE,MAAQ,CAC1B,OAAQ,EAAE,CAAC,EAAE,OACb,MAAO,EAAE,GAAG,EAAE,KAAK,CACvB,CAAI,CACR,CACA,GAAQ,qBAAuB,GAE/B,YAAmC,EAAG,EAAG,CACrC,GAAI,GAAM,GAAU,sBAAsB,EAAG,CAAC,EAAE,IAC5C,EAAM,GAAQ,GAAG,EAAG,CAAC,EACzB,MAAO,CACH,IAAK,EACL,GAAI,SAAU,EAAG,CAAE,MAAO,GAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAG,EACzC,GAAI,SAAU,EAAM,EAAK,CAAE,MAAO,IAAW,KAAK,EAAM,EAAI,CAAG,CAAC,CAAG,CACvE,CACJ,CACA,GAAQ,0BAA4B,KC3CpC,0BACA,OAAO,eAAe,EAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,EAAQ,IAAM,EAAQ,GAAK,EAAQ,IAAM,EAAQ,cAAgB,EAAQ,aAAe,EAAQ,gBAAkB,EAAQ,aAAe,EAAQ,gBAAkB,EAAQ,IAAM,EAAQ,UAAY,OACrM,GAAI,IAAa,IAIb,GAAa,SAAU,EAAW,EAAG,CAAE,MAAO,IAAW,KAAK,EAAW,EAAQ,UAAU,CAAC,CAAC,CAAG,EAKhG,GAAY,SAAU,EAAG,CAAE,MAAO,UAAU,EAAW,CAAE,MAAO,IAAW,KAAK,EAAG,CAAS,CAAG,CAAG,EACtG,EAAQ,UAAY,GAQpB,EAAQ,IAAM,YAKd,GAAI,IAAkB,UAAY,CAAE,MAAQ,CACxC,OAAQ,SAAU,EAAO,EAAQ,CAAE,MAAO,IAAW,KAAK,EAAO,EAAQ,GAAG,CAAM,CAAC,CAAG,CAC1F,CAAI,EACJ,EAAQ,gBAAkB,GAK1B,GAAI,IAAe,UAAY,CAAE,MAAQ,CACrC,OAAQ,EAAQ,gBAAgB,EAAE,OAClC,MAAO,GAAW,UACtB,CAAI,EACJ,EAAQ,aAAe,GAKvB,GAAI,IAAkB,UAAY,CAAE,MAAQ,CACxC,OAAQ,SAAU,EAAO,EAAQ,CAAE,MAAO,IAAW,KAAK,EAAO,EAAQ,IAAI,CAAM,CAAC,CAAG,CAC3F,CAAI,EACJ,EAAQ,gBAAkB,GAK1B,GAAI,IAAe,UAAY,CAAE,MAAQ,CACrC,OAAQ,EAAQ,gBAAgB,EAAE,OAClC,MAAO,GAAW,SACtB,CAAI,EACJ,EAAQ,aAAe,GAKvB,EAAQ,cAAgB,CACpB,IAAK,EAAQ,IACb,UAAW,EACf,EAOA,GAAI,IAAM,SAAU,EAAW,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,CAAC,EAAU,CAAC,CAAG,CAAG,EAChF,EAAQ,IAAM,GAId,GAAI,IAAK,SAAU,EAAQ,CAAE,MAAO,UAAU,EAAO,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,GAAM,CAAC,GAAK,EAAO,CAAC,CAAG,CAAG,CAAG,EACjH,EAAQ,GAAK,GAIb,GAAI,IAAM,SAAU,EAAQ,CAAE,MAAO,UAAU,EAAO,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,GAAM,CAAC,GAAK,EAAO,CAAC,CAAG,CAAG,CAAG,EAClH,EAAQ,IAAM,KCjFd,0BACA,GAAI,IAAmB,GAAQ,EAAK,iBAAqB,QAAO,OAAU,SAAS,EAAG,EAAG,EAAG,EAAI,CAC5F,AAAI,IAAO,QAAW,GAAK,GAC3B,OAAO,eAAe,EAAG,EAAI,CAAE,WAAY,GAAM,IAAK,UAAW,CAAE,MAAO,GAAE,EAAI,CAAE,CAAC,CACvF,EAAM,SAAS,EAAG,EAAG,EAAG,EAAI,CACxB,AAAI,IAAO,QAAW,GAAK,GAC3B,EAAE,GAAM,EAAE,EACd,GACI,GAAsB,GAAQ,EAAK,oBAAwB,QAAO,OAAU,SAAS,EAAG,EAAG,CAC3F,OAAO,eAAe,EAAG,UAAW,CAAE,WAAY,GAAM,MAAO,CAAE,CAAC,CACtE,EAAK,SAAS,EAAG,EAAG,CAChB,EAAE,QAAa,CACnB,GACI,GAAgB,GAAQ,EAAK,cAAiB,SAAU,EAAK,CAC7D,GAAI,GAAO,EAAI,WAAY,MAAO,GAClC,GAAI,GAAS,CAAC,EACd,GAAI,GAAO,KAAM,OAAS,KAAK,GAAK,AAAI,IAAM,WAAa,OAAO,UAAU,eAAe,KAAK,EAAK,CAAC,GAAG,GAAgB,EAAQ,EAAK,CAAC,EACvI,UAAmB,EAAQ,CAAG,EACvB,CACX,EACA,OAAO,eAAe,EAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,EAAQ,WAAa,EAAQ,WAAa,EAAQ,WAAa,EAAQ,WAAa,EAAQ,KAAO,EAAQ,OAAS,EAAQ,YAAc,EAAQ,SAAW,EAAQ,SAAW,EAAQ,WAAa,EAAQ,aAAe,EAAQ,UAAY,EAAQ,UAAY,EAAQ,OAAS,EAAQ,YAAc,EAAQ,SAAW,EAAQ,QAAU,EAAQ,OAAS,EAAQ,OAAS,EAAQ,YAAc,EAAQ,MAAQ,EAAQ,KAAO,EAAQ,KAAO,EAAQ,IAAM,EAAQ,IAAM,EAAQ,KAAO,EAAQ,SAAW,EAAQ,YAAc,EAAQ,QAAU,EAAQ,OAAS,EAAQ,MAAQ,EAAQ,MAAQ,EAAQ,MAAQ,EAAQ,YAAc,EAAQ,MAAQ,EAAQ,GAAK,EAAQ,QAAU,EAAQ,GAAK,EAAQ,QAAU,EAAQ,IAAM,EAAQ,UAAY,EAAQ,OAAS,EAAQ,MAAQ,EAAQ,QAAU,EAAQ,IAAM,EAAQ,SAAW,EAAQ,QAAU,EAAQ,cAAgB,EAAQ,KAAO,EAAQ,KAAO,OAC/3B,EAAQ,cAAgB,EAAQ,eAAiB,EAAQ,eAAiB,EAAQ,kBAAoB,EAAQ,OAAS,EAAQ,YAAc,EAAQ,cAAgB,EAAQ,cAAgB,EAAQ,cAAgB,EAAQ,uBAAyB,EAAQ,+BAAiC,EAAQ,uCAAyC,EAAQ,IAAM,EAAQ,IAAM,EAAQ,KAAO,EAAQ,OAAS,EAAQ,GAAK,EAAQ,OAAS,EAAQ,KAAO,EAAQ,YAAc,EAAQ,WAAa,EAAQ,eAAiB,EAAQ,cAAgB,EAAQ,UAAY,EAAQ,SAAW,EAAQ,aAAe,EAAQ,kBAAoB,EAAQ,aAAe,EAAQ,YAAc,EAAQ,UAAY,EAAQ,WAAa,EAAQ,QAAU,EAAQ,SAAW,EAAQ,QAAU,EAAQ,KAAO,EAAQ,UAAY,EAAQ,WAAa,EAAQ,KAAO,EAAQ,MAAQ,EAAQ,MAAQ,EAAQ,OAAS,EAAQ,OAAS,EAAQ,OAAS,EAAQ,WAAa,OAC36B,GAAI,IAAgB,KAChB,GAAU,KACV,GAAU,KACV,GAAe,KACf,EAAa,IACb,GAAY,KACZ,GAAI,GAAa,IAAqB,EACtC,GAAc,KACd,GAAc,KACd,GAAc,KACd,GAAe,KACf,GAAS,KAUb,EAAQ,KAAO,GAAE,KAOjB,EAAQ,KAAO,GAAE,KACjB,YAAuB,EAAW,CAC9B,MAAO,UAAU,EAAG,CAAE,MAAQ,GAAU,CAAC,EAAI,EAAQ,KAAK,CAAC,EAAI,EAAQ,IAAO,CAClF,CACA,EAAQ,cAAgB,GAcxB,GAAI,IAAU,SAAU,EAAI,CAAE,MAAQ,GAAG,OAAS,QAAU,EAAQ,KAAO,EAAQ,KAAK,EAAG,IAAI,CAAI,EACnG,EAAQ,QAAU,GAclB,GAAI,IAAW,SAAU,EAAI,CAAE,MAAQ,GAAG,OAAS,OAAS,EAAQ,KAAO,EAAQ,KAAK,EAAG,KAAK,CAAI,EACpG,EAAQ,SAAW,GAInB,GAAI,GAAO,SAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,IAAI,CAAC,CAAC,CAAG,EACtE,GAAM,SAAU,EAAK,EAAI,CAAE,MAAO,GAAW,KAAK,EAAK,EAAQ,GAAG,CAAE,CAAC,CAAG,EACxE,GAAS,SAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,MAAM,CAAC,CAAC,CAAG,EAC1E,GAAU,SAAU,EAAI,EAAG,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,OAAO,EAAG,CAAC,CAAC,CAAG,EAClF,GAAW,SAAU,EAAG,CACxB,GAAI,GAAW,EAAQ,QAAQ,CAAC,EAChC,MAAO,UAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAS,CAAC,CAAC,CAAG,CACvE,EACI,GAAe,SAAU,EAAI,EAAG,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,YAAY,EAAG,CAAC,CAAC,CAAG,EAC5F,GAAY,SAAU,EAAG,CACzB,GAAI,GAAY,EAAQ,SAAS,CAAC,EAClC,MAAO,UAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAU,CAAC,CAAC,CAAG,CACxE,EAEI,GAAO,SAAU,EAAI,EAAM,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,IAAI,CAAI,CAAC,CAAG,EAC5E,GAAU,SAAU,EAAI,EAAW,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,OAAO,CAAS,CAAC,CAAG,EAE5F,GAAa,SAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,UAAU,CAAC,CAAC,CAAG,EAElF,GAAU,SAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,OAAO,CAAC,CAAC,CAAG,EAE5E,GAAa,SAAU,EAAI,EAAW,CACtC,MAAO,GAAW,KAAK,EAAI,EAAQ,UAAU,CAAS,CAAC,CAC3D,EAEI,GAAgB,SAAU,EAAI,EAAG,CAAE,MAAO,GAAW,KAAK,EAAI,EAAQ,aAAa,CAAC,CAAC,CAAG,EAQ5F,EAAQ,IAAM,SAKd,GAAI,IAAU,SAAU,EAAG,CAAE,MAAQ,CACjC,KAAM,SAAU,EAAI,CAAE,MAAQ,GAAQ,OAAO,CAAE,EAAI,OAAS,QAAU,EAAE,KAAK,EAAG,KAAK,EAAI,GAAM,CACnG,CAAI,EACJ,EAAQ,QAAU,GAgBlB,GAAI,IAAQ,SAAU,EAAG,CAAE,MAAQ,CAC/B,OAAQ,SAAU,EAAG,EAAG,CAAE,MAAO,KAAM,GAAM,GAAQ,OAAO,CAAC,EAAI,EAAQ,OAAO,CAAC,EAAI,EAAQ,OAAO,CAAC,EAAI,GAAQ,EAAE,OAAO,EAAE,MAAO,EAAE,KAAK,EAAI,CAClJ,CAAI,EACJ,EAAQ,MAAQ,GAuBhB,GAAI,IAAS,SAAU,EAAG,CAAE,MAAQ,CAChC,OAAQ,EAAQ,MAAM,CAAC,EAAE,OACzB,QAAS,SAAU,EAAG,EAAG,CAAE,MAAQ,KAAM,EAAI,EAAI,EAAQ,OAAO,CAAC,EAAK,EAAQ,OAAO,CAAC,EAAI,EAAE,QAAQ,EAAE,MAAO,EAAE,KAAK,EAAI,EAAK,EAAK,CACtI,CAAI,EACJ,EAAQ,OAAS,GAyBjB,GAAI,IAAY,SAAU,EAAG,CAAE,MAAQ,CACnC,OAAQ,SAAU,EAAG,EAAG,CAAE,MAAQ,GAAQ,OAAO,CAAC,EAAI,EAAI,EAAQ,OAAO,CAAC,EAAI,EAAI,EAAQ,KAAK,EAAE,OAAO,EAAE,MAAO,EAAE,KAAK,CAAC,CAAI,EAC7H,MAAO,EAAQ,IACnB,CAAI,EACJ,EAAQ,UAAY,GAKpB,GAAI,IAAM,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAC1C,MAAO,GAAQ,OAAO,CAAE,EAAI,EAAQ,KAAO,EAAQ,KAAK,EAAE,EAAG,KAAK,CAAC,CACvE,CAAG,EACH,EAAQ,IAAM,GAKd,EAAQ,QAAU,CACd,IAAK,EAAQ,IACb,IAAK,CACT,EAKA,EAAQ,GAAK,EAAQ,KAKrB,EAAQ,QAAU,CACd,IAAK,EAAQ,IACb,GAAI,EAAQ,EAChB,EAKA,GAAI,IAAK,SAAU,EAAI,CAAE,MAAO,UAAU,EAAK,CAC3C,MAAO,GAAQ,OAAO,CAAG,GAAmB,EAAQ,OAAO,CAAE,EAAhC,EAAQ,KAA2C,EAAQ,KAAK,EAAI,MAAM,EAAG,KAAK,CAAC,CACpH,CAAG,EACH,EAAQ,GAAK,GAKb,EAAQ,MAAQ,CACZ,IAAK,EAAQ,IACb,IAAK,EACL,GAAI,EACR,EAKA,EAAQ,YAAc,CAClB,IAAK,EAAQ,IACb,IAAK,EACL,GAAI,GACJ,GAAI,EAAQ,EAChB,EAOA,GAAI,IAAQ,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAC5C,MAAO,GAAQ,OAAO,CAAE,EAAI,EAAQ,KAAO,EAAE,EAAG,KAAK,CACzD,CAAG,EACH,EAAQ,MAAQ,GAKhB,EAAQ,MAAQ,CACZ,IAAK,EAAQ,IACb,IAAK,EACL,GAAI,GACJ,MAAO,EACX,EAKA,EAAQ,MAAQ,CACZ,IAAK,EAAQ,IACb,IAAK,EACL,GAAI,GACJ,GAAI,EAAQ,GACZ,MAAO,EACX,EAKA,GAAI,IAAS,SAAU,EAAG,EAAG,CAAE,MAAO,UAAU,EAAI,CAChD,MAAO,GAAQ,OAAO,CAAE,EAAI,EAAI,EAAE,EAAG,EAAG,KAAK,CACjD,CAAG,EACH,EAAQ,OAAS,GAKjB,GAAI,IAAU,SAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CACpE,MAAO,GAAQ,OAAO,CAAE,EAAI,EAAE,MAAQ,EAAE,EAAG,KAAK,CACpD,CAAG,CAAG,EACN,EAAQ,QAAU,GAKlB,GAAI,IAAc,SAAU,EAAG,EAAG,CAAE,MAAO,UAAU,EAAI,CACrD,MAAO,GAAQ,OAAO,CAAE,EAAI,EAAI,EAAE,EAAG,MAAO,CAAC,CACjD,CAAG,EACH,EAAQ,YAAc,GAKtB,EAAQ,SAAW,CACf,IAAK,EAAQ,IACb,OAAQ,GACR,QAAS,GACT,YAAa,EACjB,EAOA,GAAI,IAAO,SAAU,EAAM,CAAE,MAAO,UAAU,EAAI,CAC9C,MAAO,GAAQ,OAAO,CAAE,EAAI,EAAK,EAAI,CACzC,CAAG,EACH,EAAQ,KAAO,GA6Bf,EAAQ,IAAM,EAAQ,KAKtB,EAAQ,IAAM,CACV,IAAK,EAAQ,IACb,IAAK,EACL,IAAK,EACT,EAKA,GAAI,IAAO,UAAY,CAAE,MAAO,GAAQ,IAAM,EAC9C,EAAQ,KAAO,GAKf,EAAQ,KAAO,CACX,IAAK,EAAQ,IACb,KAAM,EAAQ,IAClB,EAKA,EAAQ,MAER,GAAO,MAAM,EAAQ,KAAM,EAAQ,OAAO,EAK1C,EAAQ,YAAc,CAClB,IAAK,EAAQ,IACb,IAAK,EACL,GAAI,GACJ,GAAI,EAAQ,GACZ,IAAK,GACL,KAAM,EAAQ,IAClB,EAKA,GAAI,IAAS,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAC7C,MAAO,GAAQ,OAAO,CAAE,EAAI,EAAQ,KAAO,EAAQ,KAAK,EAAE,CAAE,CAAC,CACjE,CAAG,EACH,EAAQ,OAAS,GAKjB,EAAQ,OAAS,CACb,IAAK,EAAQ,IACb,IAAK,EACL,OAAQ,EACZ,EAKA,EAAQ,QAER,EAAQ,MAAM,EAAW,QAAQ,EACjC,GAAI,IAEJ,GAAY,UAAU,EAAQ,KAAM,EAAQ,IAAI,EAK5C,GAAW,SAAU,EAAI,CACzB,MAAO,GAAQ,OAAO,CAAE,EAAI,GAAmB,GAAY,UAAU,EAAQ,QAAQ,EAAG,KAAK,EAAG,EAAQ,SAAS,EAAG,KAAK,CAAC,CAC9H,EACA,EAAQ,SAAW,GAKnB,EAAQ,YAAc,CAClB,IAAK,EAAQ,IACb,QAAS,EAAQ,QACjB,SAAU,EAAQ,QACtB,EAKA,GAAI,IAAS,SAAU,EAAW,CAAE,MAAO,UAAU,EAAI,CAAE,MAAQ,GAAQ,OAAO,CAAE,EAAI,EAAQ,KAAO,EAAU,EAAG,KAAK,EAAI,EAAK,EAAQ,IAAO,CAAG,EACpJ,EAAQ,OAAS,GAKjB,GAAI,IAAY,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAChD,MAAO,GAAQ,OAAO,CAAE,EAAI,EAAQ,KAAO,EAAE,EAAG,KAAK,CACzD,CAAG,EACH,EAAQ,UAAY,GAKpB,GAAI,IAAY,SAAU,EAAW,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,IAAY,UAAU,GAAQ,EAAI,GAAY,IAAI,CAAS,CAAC,EAAG,GAAQ,EAAI,CAAS,CAAC,CAAG,CAAG,EAChK,EAAQ,UAAY,GAKpB,GAAI,IAAe,SAAU,EAAG,CAAE,MAAO,GAAW,KAAK,EAAQ,IAAI,CAAC,EAAG,EAAQ,QAAQ,CAAG,EAC5F,EAAQ,aAAe,GAKvB,EAAQ,WAAa,CACjB,IAAK,EAAQ,IACb,IAAK,EACL,QAAS,EAAQ,QACjB,SAAU,EAAQ,SAClB,OAAQ,GACR,UAAW,GACX,UAAW,GACX,aAAc,EAClB,EAKA,GAAI,IAAW,SAAU,EAAG,CAAE,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAAE,MAAQ,GAAQ,OAAO,CAAE,EAAI,EAAE,GAAG,EAAQ,IAAI,EAAI,EAAE,IAAI,EAAE,EAAG,KAAK,EAAG,EAAQ,IAAI,CAAI,CAAG,CAAG,EACtK,EAAQ,SAAW,GAKnB,GAAI,IAAW,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAAE,MAAQ,GAAQ,OAAO,CAAE,EAAI,EAAE,GAAG,EAAQ,IAAI,EAAI,EAAE,IAAI,EAAG,MAAO,EAAQ,IAAI,CAAI,CAAG,EAC1I,EAAQ,SAAW,GAKnB,EAAQ,YAAc,CAClB,IAAK,EAAQ,IACb,IAAK,EACL,OAAQ,GACR,QAAS,GACT,YAAa,GACb,SAAU,GACV,SAAU,EAAQ,QACtB,EACA,GAAI,IAEJ,GAAa,cAAc,EAAQ,YAAa,EAAQ,WAAW,EAC/D,GAEJ,GAAa,YAAY,EAAQ,YAAa,EAAQ,WAAW,EAK7D,GAAS,SAAU,EAAG,CACtB,GAAI,GAAW,GAAQ,CAAC,EACxB,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,GAAS,EAAI,CAAC,CAAG,CAAG,CAC5E,EACA,EAAQ,OAAS,GAKjB,GAAI,IAAO,SAAU,EAAG,CACpB,GAAI,GAAS,GAAM,CAAC,EACpB,MAAO,UAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAAE,MAAO,GAAO,EAAI,CAAC,CAAG,CAAG,CAC1E,EACA,EAAQ,KAAO,GAKf,EAAQ,WAAa,CACjB,IAAK,EAAQ,IACb,IAAK,EACL,OAAQ,GACR,QAAS,GACT,YAAa,GACb,SAAU,GACV,SAAU,EAAQ,SAClB,QAAS,EAAQ,QACjB,SAAU,EAAQ,SAClB,OAAQ,GACR,UAAW,GACX,UAAW,GACX,aAAc,GACd,OAAQ,GACR,KAAM,EACV,EAKA,GAAI,IAAa,UAAY,CAAE,MAAO,GAAQ,IAAM,EACpD,EAAQ,WAAa,GAKrB,EAAQ,WAAa,CACjB,IAAK,EAAQ,IACb,IAAK,EACL,GAAI,GACJ,GAAI,EAAQ,GACZ,MAAO,GACP,WAAY,EAAQ,UACxB,EASA,EAAQ,WAAa,EAAQ,SAK7B,EAAQ,WAAa,CACjB,IAAK,EAAQ,IACb,WAAY,EAAQ,UACxB,EAgBA,EAAQ,OAAS,GAAE,OAanB,GAAI,IAAS,SAAU,EAAI,CAAE,MAAO,GAAG,OAAS,MAAQ,EACxD,EAAQ,OAAS,GAUjB,GAAI,IAAS,SAAU,EAAQ,EAAQ,CAAE,MAAO,UAAU,EAAI,CAC1D,MAAO,GAAQ,OAAO,CAAE,EAAI,EAAO,EAAI,EAAO,EAAG,KAAK,CAC1D,CAAG,EACH,EAAQ,OAAS,GAOjB,EAAQ,MAAQ,EAAQ,OA4BxB,EAAQ,MAAQ,EAAQ,OAOxB,EAAQ,KAAO,EAAQ,MAOvB,GAAI,IAAa,SAAU,EAAQ,CAAE,MAAO,UAAU,EAAI,CAAE,MAAQ,GAAQ,OAAO,CAAE,EAAI,EAAO,EAAI,EAAG,KAAQ,CAAG,EAClH,EAAQ,WAAa,GA0BrB,EAAQ,UAAY,EAAQ,WAU5B,EAAQ,KAER,GAAU,KAAK,EAAQ,OAAO,EAS9B,EAAQ,QAER,GAAQ,QAAQ,EAAQ,KAAK,EAS7B,EAAQ,SAER,GAAQ,SAAS,EAAQ,KAAK,EAO9B,EAAQ,QAAU,EAAQ,QAU1B,EAAQ,WAER,GAAQ,WAAW,EAAQ,KAAK,EAOhC,EAAQ,UAER,EAAQ,OAAO,EAAW,QAAQ,EAKlC,EAAQ,YAER,GAAa,YAAY,EAAQ,UAAU,EAK3C,EAAQ,aAER,GAAa,aAAa,EAAQ,WAAY,EAAQ,KAAK,EAK3D,EAAQ,kBAER,GAAa,kBAAkB,EAAQ,WAAY,EAAQ,KAAK,EAkBhE,GAAI,IAAe,SAAU,EAAG,CAAE,MAAQ,IAAK,KAAO,EAAQ,KAAO,EAAQ,KAAK,CAAC,CAAI,EACvF,EAAQ,aAAe,GAqBvB,GAAI,IAAW,SAAU,EAAG,CACxB,GAAI,CACA,MAAO,GAAQ,KAAK,EAAE,CAAC,CAC3B,MACA,CACI,MAAO,GAAQ,IACnB,CACJ,EACA,EAAQ,SAAW,GAOnB,GAAI,IAAY,SAAU,EAAG,CAAE,MAAO,WAAY,CAE9C,OADI,GAAI,CAAC,EACA,EAAK,EAAG,EAAK,UAAU,OAAQ,IACpC,EAAE,GAAM,UAAU,GAEtB,MAAO,GAAQ,SAAS,UAAY,CAAE,MAAO,GAAE,MAAM,OAAQ,CAAC,CAAG,CAAC,CACtE,CAAG,EACH,EAAQ,UAAY,GAoBpB,GAAI,IAAgB,SAAU,EAAG,CAAE,MAAO,GAAW,KAAK,EAAG,EAAQ,YAAY,CAAG,EACpF,EAAQ,cAAgB,GA6CxB,GAAI,IAAiB,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CACrD,MAAO,GAAQ,OAAO,CAAE,EAAI,EAAQ,KAAO,EAAQ,aAAa,EAAE,EAAG,KAAK,CAAC,CAC/E,CAAG,EACH,EAAQ,eAAiB,GA0BzB,EAAQ,WAER,EAAQ,MAAM,EAAW,UAAW,EAAW,QAAQ,EA0BvD,EAAQ,YAER,EAAQ,MAAM,EAAW,eAAgB,EAAW,QAAQ,EAC5D,YAAc,EAAG,CACb,MAAO,UAAU,EAAG,EAAI,CACpB,GAAI,IAAO,OAAW,CAClB,GAAI,GAAU,GAAK,CAAC,EACpB,MAAO,UAAU,EAAI,CAAE,MAAO,GAAQ,EAAG,CAAE,CAAG,CAClD,CACA,MAAO,GAAQ,OAAO,CAAE,EAAI,GAAQ,EAAE,OAAO,EAAG,EAAG,KAAK,CAC5D,CACJ,CACA,EAAQ,KAAO,GAgCf,GAAI,IAAS,SAAU,EAAW,CAAE,MAAO,UAAU,EAAI,CACrD,MAAO,GAAQ,OAAO,CAAE,EAAI,GAAQ,EAAU,EAAG,KAAK,CAC1D,CAAG,EACH,EAAQ,OAAS,GAOjB,EAAQ,GAER,EAAQ,GAAG,GAAE,WAAW,EAIxB,EAAQ,OAER,GAAU,OAAO,EAAQ,OAAO,EAIhC,EAAQ,KAER,GAAQ,KAAK,EAAQ,KAAK,EAO1B,EAAQ,IAER,GAAQ,IAAI,EAAQ,KAAK,EAOzB,EAAQ,IAER,EAAQ,GAAG,GAAE,kBAAkB,EAS/B,GAAI,IAAyC,SAAU,EAAG,CAAE,MAAO,UAAU,EAAI,CAC7E,GAAI,GAAI,EAAE,EAAG,GAAE,KAAK,CAAE,CAAC,EACvB,GAAI,EAAQ,OAAO,CAAC,EAChB,MAAO,GAAQ,KAGnB,OADI,GAAM,CAAC,EAAE,KAAK,EACT,EAAI,EAAG,EAAI,EAAG,OAAQ,IAAK,CAChC,GAAI,GAAM,EAAE,EAAG,EAAG,EAAE,EACpB,GAAI,EAAQ,OAAO,CAAG,EAClB,MAAO,GAAQ,KAEnB,EAAI,KAAK,EAAI,KAAK,CACtB,CACA,MAAO,GAAQ,KAAK,CAAG,CAC3B,CAAG,EACH,EAAQ,uCAAyC,GAMjD,GAAI,IAAiC,SAAU,EAAG,CAC9C,GAAI,GAAI,EAAQ,uCAAuC,CAAC,EACxD,MAAO,UAAU,EAAI,CAAE,MAAQ,IAAE,WAAW,CAAE,EAAI,EAAE,CAAE,EAAI,EAAQ,GAAM,CAC5E,EACA,EAAQ,+BAAiC,GAIzC,EAAQ,uBAAyB,EAAQ,+BAIzC,GAAI,IAAgB,SAAU,EAAG,CAC7B,MAAO,GAAQ,+BAA+B,SAAU,EAAG,EAAG,CAAE,MAAO,GAAE,CAAC,CAAG,CAAC,CAClF,EACA,EAAQ,cAAgB,GAIxB,EAAQ,cAER,EAAQ,cAAc,EAAW,QAAQ,EAWzC,YAAuB,EAAW,CAC9B,MAAO,UAAU,EAAG,CAAE,MAAO,GAAQ,OAAO,EAAU,CAAC,CAAC,CAAG,CAC/D,CACA,EAAQ,cAAgB,GAQxB,EAAQ,YAAc,EAAQ,eAQ9B,EAAQ,OAAS,CACb,IAAK,EAAQ,IACb,IAAK,EACL,GAAI,EAAQ,GACZ,GAAI,GACJ,MAAO,GACP,OAAQ,GACR,QAAS,GACT,YAAa,GACb,SAAU,GACV,SAAU,EAAQ,SAClB,KAAM,EAAQ,KACd,IAAK,GACL,OAAQ,GACR,QAAS,EAAQ,QACjB,SAAU,EAAQ,SAClB,OAAQ,GACR,UAAW,GACX,UAAW,GACX,aAAc,GACd,OAAQ,GACR,KAAM,GACN,WAAY,EAAQ,UACxB,EAQA,EAAQ,kBAER,GAAQ,kBAAkB,EAAQ,KAAK,EAQvC,EAAQ,eAER,GAAc,qBAAqB,EAAQ,WAAW,EAmCtD,GAAI,IAAiB,UAAY,CAAE,MAAO,GAAQ,UAAU,GAAY,MAAM,CAAC,CAAG,EAClF,EAAQ,eAAiB,GAmCzB,GAAI,IAAgB,UAAY,CAAE,MAAO,GAAQ,UAAU,GAAY,KAAK,CAAC,CAAG,EAChF,EAAQ,cAAgB,KCjvCxB,OAAmB,QACnB,GAAmB,QACnB,GAAgC,OCFhC,OAAmB,QACnB,GAAqB,OAEf,GAAiB,AAAC,GAAe,AAAC,GACtC,YAAK,EAAS,eAAe,CAAE,EAAK,eAAY,EAE5C,GACJ,AAAoB,GACpB,AAAC,GACC,YAAK,EAAQ,cAAc,CAAQ,EAAK,eAAY,EAElD,GACJ,AAAoB,GACpB,AAAC,GACC,MAAM,KAAK,EAAQ,iBAAiB,CAAQ,CAAC,EAUjD,GAAM,IACJ,CAAoB,EAAmB,IACvC,AAAC,GAAgB,GAAQ,aAAa,EAAW,CAAK,EAAG,GAErD,GACJ,CAAwB,EAAkB,EAAe,IACzD,AAAC,GACC,EAAQ,MAAM,YACZ,EACA,EACI,EAAS,QAAQ,UAAW,EAAM,SAAS,CAAC,EAC5C,EAAM,SAAS,CACrB,EAYJ,GAAM,IACJ,CAAC,EAAmB,IAAkB,AAAC,GACrC,YAAK,EAAS,KAAM,GAAa,EAAW,CAAK,CAAC,ED3CtD,GAAM,IAAyB,AAAC,GAC9B,YACE,EAAU,KAAK,UACf,AAAE,OAAI,AAAC,GACL,YACE,EAAU,aACV,AAAE,iBAAc,AAAC,GAAiB,IAAiB,CAAC,EACpD,AAAE,SACA,IAAM,aACN,AAAC,GACC,GAAgB,SAAU,EAAc,WAAW,CACvD,EACA,AAAC,GAAU,EAAM,CAAO,CAC1B,CACF,CACF,EAEI,GAAY,AAAC,GACjB,YAAK,EAAgB,AAAE,OAAI,EAAsB,CAAC,EExBpD,OAAmB,QACnB,EAAmB,QACnB,EAAgC,OCHhC,MAAqD,OACrD,EAAmB,QACnB,GAAqB,QCFrB,MAAqC,OACrC,GAAmB,QACnB,EAAmB,QAKnB,GAAM,IAAqB,AAAC,GAAkB,kBAAkB,IAE1D,GAA0B,AAAC,GAAuB,AAAC,GACvD,WAAK,EAAU,GAAe,GAAmB,CAAK,CAAC,CAAC,EAEpD,GACJ,AAAC,GAAuB,CAAC,EAAe,IACtC,WAAK,EAAO,GAAwB,CAAQ,EAAG,AAAC,GAC9C,WACE,EACA,AAAE,QACA,IAAM,EACN,AAAC,GACC,WACE,EAAU,UACV,AAAE,OAAI,GAAiB,CAAO,CAAC,EAC7B,WACF,AAAC,GAAc,KACV,EAAU,KACb,UAAW,EACX,UACF,GACA,GAAkB,OAAQ,CAAS,CACrC,CACJ,CACF,CACF,EAEE,GACJ,AAAC,GAAuB,CAAC,EAAe,IACtC,WACE,EAAU,OACR,eACF,AAAE,QAAM,iBAAgB,AAAC,GACvB,WAAK,EAAO,GAAwB,CAAQ,EAAG,AAAC,GAC9C,WACE,EACA,AAAE,QAAM,iBAAgB,AAAC,GACvB,WACE,GAAc,CAAO,EACnB,eACF,EACA,AAAC,GAAa,KAAK,EAAQ,SAAQ,EACrC,CACF,CACF,CACF,CACF,EACA,GAAkB,SAAU,CAAS,CACvC,EAEE,GACJ,CAA4B,EAAQ,IACpC,AAAC,GAAyB,KAAK,GAAY,GAAM,CAAM,GAOzD,GAAM,IACJ,AAAC,GAAwB,AAAC,GACxB,WACE,EACA,AAAE,gBAAc,AAAC,GAAc,EAAU,OAAS,QAAQ,EAC1D,AAAE,QACA,IACE,WACE,EAAU,KAAK,UACf,AAAE,QACA,IAAQ,OACR,AAAC,GAAY,AAAE,OAAK,EAAQ,YAAY,CAC1C,CACF,EACF,IAAM,AAAE,OAAK,EAAc,EAAU,cAAc,CACrD,CACF,EAEE,GAAkB,AAAC,GAAwB,AAAC,GAChD,WACE,EACA,GAAuB,CAAW,EAClC,AAAE,QAAM,IAAM,EAAW,GAAkB,eAAgB,CAAS,CAAC,CACvE,EAEI,GAA8B,CAClC,EACA,EACA,EAAc,KAEd,WACE,EACA,AAAE,gBAAc,OAAO,EACvB,AAAE,QACA,IAAM,EACN,IACE,WACE,EACA,AAAE,OAAI,EAAc,EACpB,AAAE,gBAAa,GAA0B,EAAO,QAAQ,CAAC,EACzD,AAAE,gBAAa,GAAiB,EAAO,QAAQ,CAAC,CAClD,CACJ,EACA,AAAE,OAAI,GAAgB,EAAO,WAAW,CAAC,CAC3C,EDtGF,GAAM,IAAmB,AAAC,GACxB,EAAc,WAAW,IAAI,EAEzB,GACJ,AAAC,GACD,AAAC,GACC,WACE,EACE,eACF,AAAE,MAAI,AAAC,GAAkB,EAAc,UAAU,EAAO,EAAG,CAAC,CAAC,CAC/D,EAEE,GAAe,AAAC,GAAmB,AAAC,GACxC,GAAG,KAAU,EAAI,SAAS,EAAE,SAAS,EAAG,GAAG,QAEvC,GAAc,AAAC,GACnB,WAAK,GAAI,OAAS,GAAa,MAAO,CAAG,CAAC,EAEtC,GAAiB,AAAC,GACtB,WACE,EAAU,OACR,eACF,AAAE,MAAI,AAAC,GACL,WACE,AAAI,SAAM,EAAG,EAAO,gBAAkB,CAAC,EACvC,AAAI,gBAAa,GAAa,EAAO,MAAM,CAAC,EAC5C,AAAI,OAAI,EAAW,CACrB,CACF,CACF,EAEI,GAAiB,AAAC,GACtB,WACE,EACA,GACA,AAAE,QAAM,IAAM,CAAC,EAA8B,UAAQ,EACrD,AAAC,GACC,WACE,EAAU,OACR,eACF,AAAE,QAAM,iBAAgB,AAAC,GAAY,KAAK,EAAQ,aAAY,EAAE,EAChE,GAAkB,SAAU,CAAS,CACvC,CACJ,EAEI,GACJ,CAAC,EAAkC,IACnC,AAAC,GAAgC,CAC/B,WACE,EACE,eACF,AAAE,MAAI,CAAC,CAAE,gBAAe,UAAS,iBAC/B,WACE,GACE,EACA,EACA,CACF,EACA,AAAE,MAAI,KAAK,KAAK,EAChB,AAAE,MAAI,AAAC,GACL,WACE,EACA,AAAE,MACA,WACE,GACA,GACE,EAAY,EACd,CACF,CACF,CACF,CACF,CACF,CACF,CACF,CACF,EDzDF,GAAM,IAAW,CAAC,EAAiB,IAAkB,AAAC,GAChD,MAAO,IAAU,UAAY,MAAO,IAAQ,SACvC,AAAE,OAAM,GAAM,GAAS,EAAQ,CAAK,EAEpC,OAGL,GAAwB,CAC5B,EACA,EACA,IAEA,WACE,EACE,eACF,AAAE,QACA,IAAQ,OACR,AAAC,GAAU,CACT,GAAM,CAAE,QAAO,OAAQ,EACjB,EAAkB,GAAS,EAAO,CAAG,EAC3C,GAAI,UAAY,GAAO,CACrB,GAAM,CAAE,UAAW,EACb,EAAc,EAAO,MAAQ,EAC7B,EAAY,EAAO,IAAM,EAE/B,GACE,GAAe,GACf,GAAuB,EAEvB,MAAO,GACJ,GAAsB,GAAgB,GAAY,EACrD,EAEF,GAAI,EAAsB,EACxB,MAAO,AAAE,QAAK,CAAK,EAErB,GAAI,EAAsB,EACxB,MAAO,AAAE,QAAK,CAAG,CAErB,CACA,MAAO,GAAgB,EAAsB,CAAwB,CACvE,CACF,CACF,EAMI,GACJ,AAAC,GACD,CAAC,CAAC,EAAK,KACD,MAAQ,IAAS,OAAS,GACrB,WACJ,GAAM,GAAG,OAAO,IAAM,EAAM,IAAI,OAAO,OAAS,EACjD,AAAE,gBAAc,AAAC,GAAW,GAAe,CAAM,EACjD,AAAE,QACA,IAAM,CAAC,EAAK,EAAM,GAAG,EACrB,IAAM,CAAC,EAAK,EAAM,EAAE,CACtB,CACF,EAGK,CAAC,EAAK,CAAK,EAIhB,GACJ,CAAC,EAAkC,IACnC,CAAC,CAAC,EAAK,KACE,EACL,MACA,SAAU,EAAM,SAChB,MAAO,GACL,EACA,EACA,CACF,CACF,GAGE,GACJ,CAAC,EAAkC,IACnC,AAAC,GAAyB,CACxB,GAAM,GAAc,EAAsB,EAC1C,MAAO,WACL,OAAO,QAAQ,CAAS,EACxB,AAAE,OAAI,AAAC,GACL,WACE,EACA,GAAoB,CAAW,EAC/B,GACE,EACA,CACF,CACF,CACF,CACF,CACF,EAKI,GACJ,AAAC,GAAyB,AAAC,GACzB,WACE,EACA,AAAE,OAAI,CAAC,CAAE,MAAK,QAAO,cACnB,WACE,EACA,AAAE,QACA,IAAM,YACN,AAAC,GAAa,GAAgB,EAAK,EAAU,CAAQ,CACvD,EACA,AAAC,GAAa,EAAS,CAAO,CAChC,CACF,CACF,EAEE,GACJ,AAAC,GACD,CAAC,EAAsB,EAA0B,IAC/C,WACE,EAAe,GACb,eACF,AAAE,QACA,YACA,CAAC,CAAE,KAAM,CAAE,YAAY,aAAY,eAAc,OAAM,YAAa,CAClE,GAAM,GAAsB,EAAU,EACtC,AAAI,IAAS,UACX,WACE,EACA,AAAE,OACA,GACE,EACA,CACF,CACF,EACA,AAAE,OAAI,CAAQ,EACd,AAAE,OAAI,CAAC,CAAC,GAAkB,MACxB,WACE,GACA,GAAmC,EAAO,CAC5C,CACF,CACF,EAGF,WAAK,EAAQ,GAAU,EAAc,CAAmB,CAAC,CAC3D,CACF,CACF,EGjLJ,OAAmB,QAuBb,GAA8B,CAClC,CAEE,KAAM,SACN,eAAgB,EAChB,aAAc,EACd,UAAW,CAAC,6CAA6C,EACzD,OAAQ,CACN,QAAW,QACX,gBAAiB,IACjB,OAAQ,cACR,cAAe,CAAE,MAAO,EAAG,IAAK,GAAI,EACpC,YAAa,CAAC,CAChB,EACA,KAAM,CACJ,UAAa,QACb,SAAU,CAAC,CACb,EACA,WAAY,CACV,CAEE,QAAS,CACP,GAAI,CAAE,MAAO,EAAG,IAAK,EAAG,OAAQ,CAAE,MAAO,GAAK,IAAK,EAAI,CAAE,EACzD,IAAK,CAAE,MAAO,EAAG,IAAK,EAAG,OAAQ,CAAE,MAAO,IAAM,IAAK,EAAI,CAAE,CAC7D,EACA,UAAW,CACT,GAAI,CACF,MAAO,GACP,IAAK,EACL,SAAU,8BACV,OAAQ,CAAE,MAAO,GAAK,IAAK,EAAI,CACjC,EACA,IAAK,CACH,MAAO,EACP,IAAK,IACL,SAAU,8BACV,OAAQ,CAAE,MAAO,IAAM,IAAK,EAAI,CAClC,CACF,CACF,EACA,CAEE,QAAS,CACP,GAAI,CAAE,MAAO,EAAG,IAAK,EAAG,OAAQ,CAAE,MAAO,GAAK,IAAK,EAAI,CAAE,EACzD,IAAK,CAAE,MAAO,EAAG,IAAK,EAAG,OAAQ,CAAE,MAAO,IAAM,IAAK,EAAI,CAAE,CAC7D,EACA,UAAW,CACT,GAAI,CACF,MAAO,GACP,IAAK,EACL,SAAU,8BACV,OAAQ,CAAE,MAAO,GAAK,IAAK,EAAI,CACjC,EACA,IAAK,CACH,MAAO,EACP,IAAK,IACL,SAAU,8BACV,OAAQ,CAAE,MAAO,IAAM,IAAK,EAAI,CAClC,CACF,CACF,EACA,CAEE,QAAS,CACP,GAAI,CAAE,MAAO,EAAG,IAAK,EAAG,OAAQ,CAAE,MAAO,GAAK,IAAK,EAAI,CAAE,EACzD,IAAK,CAAE,MAAO,EAAG,IAAK,EAAG,OAAQ,CAAE,MAAO,IAAM,IAAK,EAAI,CAAE,CAC7D,EACA,UAAW,CACT,GAAI,CACF,MAAO,GACP,IAAK,EACL,SAAU,8BACV,OAAQ,CAAE,MAAO,GAAK,IAAK,EAAI,CACjC,EACA,IAAK,CACH,MAAO,EACP,IAAK,IACL,SAAU,8BACV,OAAQ,CAAE,MAAO,IAAM,IAAK,EAAI,CAClC,CACF,CACF,EACA,CAEE,QAAS,CACP,GAAI,CAAE,MAAO,EAAG,IAAK,EAAG,OAAQ,CAAE,MAAO,GAAK,IAAK,EAAI,CAAE,EACzD,IAAK,CAAE,MAAO,EAAG,IAAK,EAAG,OAAQ,CAAE,MAAO,IAAM,IAAK,EAAI,CAAE,CAC7D,EACA,UAAW,CACT,GAAI,CACF,MAAO,GACP,IAAK,EACL,SAAU,8BACV,OAAQ,CAAE,MAAO,GAAK,IAAK,EAAI,CACjC,EACA,IAAK,CACH,MAAO,EACP,IAAK,IACL,SAAU,8BACV,OAAQ,CAAE,MAAO,IAAM,IAAK,EAAI,CAClC,CACF,CACF,CACF,CACF,EACA,CAEE,KAAM,SACN,eAAgB,EAChB,aAAc,EACd,UAAW,CAAC,EACZ,KAAM,CACJ,UAAa,QACb,SAAU,CAAC,CACb,EACA,WAAY,CAAC,CACf,EACA,CAEE,KAAM,SACN,eAAgB,EAChB,aAAc,EACd,UAAW,CAAC,kBAAmB,MAAM,EACrC,KAAM,CACJ,UAAa,QACb,SAAU,CAAC,CACb,EACA,WAAY,CACV,CAEE,QAAS,CACP,GAAI,CAAE,MAAO,EAAG,IAAK,EAAG,OAAQ,CAAE,MAAO,IAAM,IAAK,EAAI,CAAE,EAC1D,IAAK,CAAE,MAAO,EAAG,IAAK,EAAG,OAAQ,CAAE,MAAO,GAAK,IAAK,GAAK,CAAE,CAC7D,EACA,UAAW,CACT,GAAI,CACF,MAAO,GACP,IAAK,EACL,SAAU,8BACV,OAAQ,CAAE,MAAO,IAAM,IAAK,EAAI,CAClC,EACA,IAAK,CACH,MAAO,EACP,IAAK,IACL,SAAU,8BACV,OAAQ,CAAE,MAAO,GAAK,IAAK,GAAK,CAClC,CACF,CACF,EACA,CAEE,QAAS,CACP,GAAI,CAAE,MAAO,EAAG,IAAK,EAAG,OAAQ,CAAE,MAAO,GAAK,IAAK,GAAK,CAAE,EAC1D,IAAK,CAAE,MAAO,EAAG,IAAK,EAAG,OAAQ,CAAE,MAAO,IAAM,IAAK,GAAK,CAAE,CAC9D,EACA,UAAW,CACT,GAAI,CACF,MAAO,GACP,IAAK,EACL,SAAU,8BACV,OAAQ,CAAE,MAAO,GAAK,IAAK,GAAK,CAClC,EACA,IAAK,CACH,MAAO,EACP,IAAK,IACL,SAAU,8BACV,OAAQ,CAAE,MAAO,IAAM,IAAK,GAAK,CACnC,CACF,CACF,EACA,CAEE,QAAS,CACP,GAAI,CAAE,MAAO,EAAG,IAAK,EAAG,OAAQ,CAAE,MAAO,IAAM,IAAK,GAAK,CAAE,EAC3D,IAAK,CAAE,MAAO,EAAG,IAAK,EAAG,OAAQ,CAAE,MAAO,IAAM,IAAK,EAAI,CAAE,CAC7D,EACA,UAAW,CACT,GAAI,CACF,MAAO,GACP,IAAK,EACL,SAAU,8BACV,OAAQ,CAAE,MAAO,IAAM,IAAK,GAAK,CACnC,EACA,IAAK,CACH,MAAO,EACP,IAAK,IACL,SAAU,8BACV,OAAQ,CAAE,MAAO,IAAM,IAAK,EAAI,CAClC,CACF,CACF,EACA,CAEE,QAAS,CACP,GAAI,CAAE,MAAO,EAAG,IAAK,EAAG,OAAQ,CAAE,MAAO,GAAK,IAAK,GAAK,CAAE,EAC1D,IAAK,CAAE,MAAO,EAAG,IAAK,EAAG,OAAQ,CAAE,MAAO,IAAM,IAAK,GAAK,CAAE,CAC9D,EACA,UAAW,CACT,GAAI,CACF,MAAO,GACP,IAAK,EACL,SAAU,kBACV,OAAQ,CAAE,MAAO,GAAK,IAAK,GAAK,CAClC,EACA,IAAK,CACH,MAAO,GACP,IAAK,EACL,SAAU,kBACV,OAAQ,CAAE,MAAO,GAAK,IAAK,GAAK,CAClC,CACF,CACF,EACA,CAEE,QAAS,CACP,GAAI,CAAE,MAAO,EAAG,IAAK,EAAG,OAAQ,CAAE,MAAO,IAAM,IAAK,GAAK,CAAE,EAC3D,IAAK,CAAE,MAAO,EAAG,IAAK,EAAG,OAAQ,CAAE,MAAO,IAAM,IAAK,EAAI,CAAE,CAC7D,EACA,UAAW,CACT,GAAI,CACF,MAAO,GACP,IAAK,EACL,SAAU,kBACV,OAAQ,CAAE,MAAO,IAAM,IAAK,GAAK,CACnC,EACA,IAAK,CACH,MAAO,GACP,IAAK,EACL,SAAU,kBACV,OAAQ,CAAE,MAAO,IAAM,IAAK,GAAK,CACnC,CACF,CACF,CACF,CACF,EACA,CAEE,KAAM,SACN,eAAgB,EAChB,aAAc,EACd,KAAM,CACJ,UAAa,QACb,SAAU,CAAC,CACb,EACA,UAAW,CAAC,iBAAiB,EAC7B,WAAY,CACV,CAEE,QAAS,CAAE,MAAO,EAAG,IAAK,CAAE,EAC5B,UAAW,CACT,MAAO,GACP,IAAK,EACL,SAAU,6BACZ,CACF,CACF,CACF,CACF,ECzRA,OAAmB,QACnB,GAAqB,OAKrB,GAAM,IAAuB,CAC3B,EACA,IAQO,CANkB,YACvB,EACA,AAAE,mBAAgB,AAAC,GAAU,EAAQ,CAAY,EACjD,AAAE,UAAO,EAAG,CAAC,EAAG,IAAM,EAAI,EAAE,YAAY,CAC1C,EAE0B,EAAe,GAAc,YAAY,EAG/D,GAAqB,CACzB,EACA,EACA,IACG,CACH,GAAI,GAAkB,EAEhB,CAAC,EAAkB,GAA4B,GACnD,EACA,CACF,EAEA,MAAI,GAAU,GAAoB,IAAoB,GACpD,IAAmB,GAInB,EAAU,EAAmB,GAC7B,EAAe,EAAe,QAE9B,IAAmB,GAGd,CAAC,EAAiB,CAAgB,CAC3C,EAEM,GAA2B,CAC/B,EACA,IACG,CACH,GAAI,GAAoB,EAExB,OAAW,CAAC,EAAO,IAAc,GAAe,QAAQ,EAGtD,GAFA,GAAqB,EAAU,aAE3B,GAAqB,EACvB,MAAO,GAIX,MAAO,EACT,EAEM,GAAyB,AAAC,GAC9B,uBAAuB,IAEnB,GACJ,AAAC,GAAuB,AAAC,GACvB,YACE,EACA,GAAmB,KAAM,GAAuB,CAAY,CAAC,CAC/D,ECvDJ,GAAM,IACJ,GAA0B,QAAQ,EAEpC,AAAC,KAAM,CACL,GAAI,GAA2B,GAC3B,EAAe,EACnB,OAAO,iBAAiB,SAAU,IAChC,GAAU,GAA4B,OAAQ,CAAwB,CAAC,CACzE,EACA,OAAO,iBAAiB,OAAQ,IAAM,CACpC,EAA2B,GACzB,OACA,EACA,EACF,EAEA,GAAM,GAAkB,GACtB,OAAO,QACP,CACF,EAEA,GAAwC,CAAe,EACvD,GAAU,CAAwB,EAElC,EAAe,CACjB,CAAC,EACD,OAAO,iBAAiB,SAAU,IAAM,CACtC,GAAM,CAAC,EAAiB,GAAoB,GAC1C,OAAO,QACP,EACA,CACF,EAEA,GAAwC,CAAe,EAEnD,IAAiB,GACnB,GAAc,CAAwB,EACpC,EACA,EACA,OAAO,OACT,EAGF,EAAe,CACjB,CAAC,CACH,GAAG",
  "names": []
}
